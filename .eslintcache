[{"C:\\Users\\marco\\Documents\\BUIDL\\covenants-fe\\src\\index.jsx":"1","C:\\Users\\marco\\Documents\\BUIDL\\covenants-fe\\src\\reportWebVitals.js":"2","C:\\Users\\marco\\Documents\\BUIDL\\covenants-fe\\src\\App.jsx":"3","C:\\Users\\marco\\Documents\\BUIDL\\covenants-fe\\src\\store\\index.js":"4","C:\\Users\\marco\\Documents\\BUIDL\\covenants-fe\\src\\components\\index.js":"5","C:\\Users\\marco\\Documents\\BUIDL\\covenants-fe\\src\\store\\reducers\\index.js":"6","C:\\Users\\marco\\Documents\\BUIDL\\covenants-fe\\src\\components\\pages\\index.js":"7","C:\\Users\\marco\\Documents\\BUIDL\\covenants-fe\\src\\components\\shared\\index.js":"8","C:\\Users\\marco\\Documents\\BUIDL\\covenants-fe\\src\\components\\page-container\\index.js":"9","C:\\Users\\marco\\Documents\\BUIDL\\covenants-fe\\src\\store\\reducers\\core\\index.js":"10","C:\\Users\\marco\\Documents\\BUIDL\\covenants-fe\\src\\store\\reducers\\session\\index.js":"11","C:\\Users\\marco\\Documents\\BUIDL\\covenants-fe\\src\\components\\pages\\ComingSoon.jsx":"12","C:\\Users\\marco\\Documents\\BUIDL\\covenants-fe\\src\\components\\pages\\NotFound.jsx":"13","C:\\Users\\marco\\Documents\\BUIDL\\covenants-fe\\src\\components\\page-container\\PageContainer.jsx":"14","C:\\Users\\marco\\Documents\\BUIDL\\covenants-fe\\src\\components\\shared\\footer\\Footer.jsx":"15","C:\\Users\\marco\\Documents\\BUIDL\\covenants-fe\\src\\components\\shared\\header\\Header.jsx":"16","C:\\Users\\marco\\Documents\\BUIDL\\covenants-fe\\src\\components\\shared\\coin\\Coin.jsx":"17","C:\\Users\\marco\\Documents\\BUIDL\\covenants-fe\\src\\components\\shared\\sidemenu\\Sidemenu.jsx":"18","C:\\Users\\marco\\Documents\\BUIDL\\covenants-fe\\src\\components\\shared\\buttons\\ApproveButton.jsx":"19","C:\\Users\\marco\\Documents\\BUIDL\\covenants-fe\\src\\components\\shared\\dapp-menu\\DappMenu.jsx":"20","C:\\Users\\marco\\Documents\\BUIDL\\covenants-fe\\src\\components\\shared\\farming\\FarmingComponent.jsx":"21","C:\\Users\\marco\\Documents\\BUIDL\\covenants-fe\\src\\components\\shared\\token-input\\TokenInput.jsx":"22","C:\\Users\\marco\\Documents\\BUIDL\\covenants-fe\\src\\components\\shared\\input\\Input.jsx":"23","C:\\Users\\marco\\Documents\\BUIDL\\covenants-fe\\src\\components\\shared\\inflation\\FixedInflationComponent.jsx":"24","C:\\Users\\marco\\Documents\\BUIDL\\covenants-fe\\src\\components\\shared\\farming\\SetupComponent.jsx":"25","C:\\Users\\marco\\Documents\\BUIDL\\covenants-fe\\src\\data\\context.json.js":"26","C:\\Users\\marco\\Documents\\BUIDL\\covenants-fe\\src\\store\\types\\index.js":"27","C:\\Users\\marco\\Documents\\BUIDL\\covenants-fe\\src\\store\\actions\\index.js":"28","C:\\Users\\marco\\Documents\\BUIDL\\covenants-fe\\src\\core\\index.js":"29","C:\\Users\\marco\\Documents\\BUIDL\\covenants-fe\\src\\store\\types\\session\\index.js":"30","C:\\Users\\marco\\Documents\\BUIDL\\covenants-fe\\src\\store\\types\\core\\index.js":"31","C:\\Users\\marco\\Documents\\BUIDL\\covenants-fe\\src\\store\\actions\\core\\index.js":"32","C:\\Users\\marco\\Documents\\BUIDL\\covenants-fe\\src\\store\\actions\\session\\index.js":"33","C:\\Users\\marco\\Documents\\BUIDL\\covenants-fe\\src\\pages\\index.js":"34","C:\\Users\\marco\\Documents\\BUIDL\\covenants-fe\\src\\pages\\index\\Index.jsx":"35","C:\\Users\\marco\\Documents\\BUIDL\\covenants-fe\\src\\pages\\grimoire\\Grimoire.jsx":"36","C:\\Users\\marco\\Documents\\BUIDL\\covenants-fe\\src\\pages\\arbitrage\\Arbitrage.jsx":"37","C:\\Users\\marco\\Documents\\BUIDL\\covenants-fe\\src\\pages\\farm\\Farm.jsx":"38","C:\\Users\\marco\\Documents\\BUIDL\\covenants-fe\\src\\pages\\bazaar\\Bazaar.jsx":"39","C:\\Users\\marco\\Documents\\BUIDL\\covenants-fe\\src\\pages\\convenants\\Covenants.jsx":"40","C:\\Users\\marco\\Documents\\BUIDL\\covenants-fe\\src\\pages\\multiswap\\Multiswap.jsx":"41","C:\\Users\\marco\\Documents\\BUIDL\\covenants-fe\\src\\pages\\crafting\\Crafting.jsx":"42","C:\\Users\\marco\\Documents\\BUIDL\\covenants-fe\\src\\pages\\inflation\\Inflation.jsx":"43","C:\\Users\\marco\\Documents\\BUIDL\\covenants-fe\\src\\pages\\wusd\\WUSD.jsx":"44","C:\\Users\\marco\\Documents\\BUIDL\\covenants-fe\\src\\pages\\bazaar\\dapp\\dapp.jsx":"45","C:\\Users\\marco\\Documents\\BUIDL\\covenants-fe\\src\\pages\\crafting\\dapp\\dapp.jsx":"46","C:\\Users\\marco\\Documents\\BUIDL\\covenants-fe\\src\\pages\\wusd\\dapp\\dapp.jsx":"47","C:\\Users\\marco\\Documents\\BUIDL\\covenants-fe\\src\\pages\\inflation\\dapp\\dapp.jsx":"48","C:\\Users\\marco\\Documents\\BUIDL\\covenants-fe\\src\\pages\\farm\\dapp\\dapp.jsx":"49","C:\\Users\\marco\\Documents\\BUIDL\\covenants-fe\\src\\pages\\wusd\\dapp\\components\\index.js":"50","C:\\Users\\marco\\Documents\\BUIDL\\covenants-fe\\src\\pages\\inflation\\dapp\\components\\index.js":"51","C:\\Users\\marco\\Documents\\BUIDL\\covenants-fe\\src\\pages\\farm\\dapp\\components\\index.js":"52","C:\\Users\\marco\\Documents\\BUIDL\\covenants-fe\\src\\pages\\wusd\\dapp\\components\\Arbitrate.jsx":"53","C:\\Users\\marco\\Documents\\BUIDL\\covenants-fe\\src\\pages\\inflation\\dapp\\components\\Explore.jsx":"54","C:\\Users\\marco\\Documents\\BUIDL\\covenants-fe\\src\\pages\\wusd\\dapp\\components\\Farm.jsx":"55","C:\\Users\\marco\\Documents\\BUIDL\\covenants-fe\\src\\pages\\inflation\\dapp\\components\\Create.jsx":"56","C:\\Users\\marco\\Documents\\BUIDL\\covenants-fe\\src\\pages\\wusd\\dapp\\components\\Mint.jsx":"57","C:\\Users\\marco\\Documents\\BUIDL\\covenants-fe\\src\\pages\\wusd\\dapp\\components\\Burn.jsx":"58","C:\\Users\\marco\\Documents\\BUIDL\\covenants-fe\\src\\pages\\wusd\\dapp\\components\\Stats.jsx":"59","C:\\Users\\marco\\Documents\\BUIDL\\covenants-fe\\src\\pages\\wusd\\dapp\\components\\USDN.jsx":"60","C:\\Users\\marco\\Documents\\BUIDL\\covenants-fe\\src\\pages\\inflation\\dapp\\components\\ExploreInflationContract.jsx":"61","C:\\Users\\marco\\Documents\\BUIDL\\covenants-fe\\src\\pages\\farm\\dapp\\components\\Positions.jsx":"62","C:\\Users\\marco\\Documents\\BUIDL\\covenants-fe\\src\\pages\\farm\\dapp\\components\\ExploreFarmingContract.jsx":"63","C:\\Users\\marco\\Documents\\BUIDL\\covenants-fe\\src\\pages\\farm\\dapp\\components\\Explore.jsx":"64","C:\\Users\\marco\\Documents\\BUIDL\\covenants-fe\\src\\pages\\farm\\dapp\\components\\Hosted.jsx":"65","C:\\Users\\marco\\Documents\\BUIDL\\covenants-fe\\src\\pages\\farm\\dapp\\components\\Create.jsx":"66","C:\\Users\\marco\\Documents\\BUIDL\\covenants-fe\\src\\pages\\inflation\\dapp\\components\\CreateSetup.jsx":"67","C:\\Users\\marco\\Documents\\BUIDL\\covenants-fe\\src\\pages\\inflation\\dapp\\components\\CreateEntry.jsx":"68"},{"size":785,"mtime":1612476063637,"results":"69","hashOfConfig":"70"},{"size":364,"mtime":1612474376691,"results":"71","hashOfConfig":"70"},{"size":1931,"mtime":1612479466438,"results":"72","hashOfConfig":"70"},{"size":138,"mtime":1612474376696,"results":"73","hashOfConfig":"70"},{"size":84,"mtime":1612474376639,"results":"74","hashOfConfig":"70"},{"size":258,"mtime":1612474376699,"results":"75","hashOfConfig":"70"},{"size":123,"mtime":1612474376642,"results":"76","hashOfConfig":"70"},{"size":671,"mtime":1612474376650,"results":"77","hashOfConfig":"70"},{"size":71,"mtime":1612474376640,"results":"78","hashOfConfig":"70"},{"size":1298,"mtime":1612479164870,"results":"79","hashOfConfig":"70"},{"size":3083,"mtime":1612474376701,"results":"80","hashOfConfig":"70"},{"size":98,"mtime":1612474376641,"results":"81","hashOfConfig":"70"},{"size":94,"mtime":1612474376642,"results":"82","hashOfConfig":"70"},{"size":1528,"mtime":1612474376640,"results":"83","hashOfConfig":"70"},{"size":82,"mtime":1612474376648,"results":"84","hashOfConfig":"70"},{"size":3249,"mtime":1612480487280,"results":"85","hashOfConfig":"70"},{"size":431,"mtime":1612474376644,"results":"86","hashOfConfig":"70"},{"size":1519,"mtime":1612477598869,"results":"87","hashOfConfig":"70"},{"size":1423,"mtime":1612474376643,"results":"88","hashOfConfig":"70"},{"size":911,"mtime":1612474376645,"results":"89","hashOfConfig":"70"},{"size":5377,"mtime":1612474376646,"results":"90","hashOfConfig":"70"},{"size":956,"mtime":1612474376655,"results":"91","hashOfConfig":"70"},{"size":1187,"mtime":1612474376653,"results":"92","hashOfConfig":"70"},{"size":2842,"mtime":1612474376651,"results":"93","hashOfConfig":"70"},{"size":26882,"mtime":1612474376647,"results":"94","hashOfConfig":"70"},{"size":247137,"mtime":1612474376659,"results":"95","hashOfConfig":"70"},{"size":50,"mtime":1612474376703,"results":"96","hashOfConfig":"70"},{"size":50,"mtime":1612474376694,"results":"97","hashOfConfig":"70"},{"size":12772,"mtime":1612474376656,"results":"98","hashOfConfig":"70"},{"size":597,"mtime":1612474376704,"results":"99","hashOfConfig":"70"},{"size":365,"mtime":1612479083845,"results":"100","hashOfConfig":"70"},{"size":1079,"mtime":1612479055242,"results":"101","hashOfConfig":"70"},{"size":1804,"mtime":1612474376696,"results":"102","hashOfConfig":"70"},{"size":590,"mtime":1612477715692,"results":"103","hashOfConfig":"70"},{"size":965,"mtime":1612477715499,"results":"104","hashOfConfig":"70"},{"size":197,"mtime":1612477715893,"results":"105","hashOfConfig":"70"},{"size":152,"mtime":1612477718707,"results":"106","hashOfConfig":"70"},{"size":807,"mtime":1612477716084,"results":"107","hashOfConfig":"70"},{"size":824,"mtime":1612477718457,"results":"108","hashOfConfig":"70"},{"size":195,"mtime":1612477718068,"results":"109","hashOfConfig":"70"},{"size":200,"mtime":1612477713799,"results":"110","hashOfConfig":"70"},{"size":827,"mtime":1612477717858,"results":"111","hashOfConfig":"70"},{"size":857,"mtime":1612477713982,"results":"112","hashOfConfig":"70"},{"size":801,"mtime":1612477711730,"results":"113","hashOfConfig":"70"},{"size":63,"mtime":1612477718267,"results":"114","hashOfConfig":"70"},{"size":63,"mtime":1612477717654,"results":"115","hashOfConfig":"70"},{"size":2456,"mtime":1612477712039,"results":"116","hashOfConfig":"70"},{"size":2760,"mtime":1612477714171,"results":"117","hashOfConfig":"70"},{"size":2986,"mtime":1612477716282,"results":"118","hashOfConfig":"70"},{"size":227,"mtime":1612477712982,"results":"119","hashOfConfig":"70"},{"size":185,"mtime":1612477714370,"results":"120","hashOfConfig":"70"},{"size":266,"mtime":1612477716668,"results":"121","hashOfConfig":"70"},{"size":526,"mtime":1612477713609,"results":"122","hashOfConfig":"70"},{"size":2752,"mtime":1612477714750,"results":"123","hashOfConfig":"70"},{"size":1969,"mtime":1612477713217,"results":"124","hashOfConfig":"70"},{"size":6233,"mtime":1612477715319,"results":"125","hashOfConfig":"70"},{"size":14162,"mtime":1612477712787,"results":"126","hashOfConfig":"70"},{"size":13469,"mtime":1612477713408,"results":"127","hashOfConfig":"70"},{"size":20300,"mtime":1612477712584,"results":"128","hashOfConfig":"70"},{"size":8978,"mtime":1612477712320,"results":"129","hashOfConfig":"70"},{"size":1198,"mtime":1612477714555,"results":"130","hashOfConfig":"70"},{"size":1190,"mtime":1612477716480,"results":"131","hashOfConfig":"70"},{"size":3177,"mtime":1612477717071,"results":"132","hashOfConfig":"70"},{"size":4143,"mtime":1612477717259,"results":"133","hashOfConfig":"70"},{"size":1564,"mtime":1612477716871,"results":"134","hashOfConfig":"70"},{"size":38059,"mtime":1612477717449,"results":"135","hashOfConfig":"70"},{"size":10132,"mtime":1612477714939,"results":"136","hashOfConfig":"70"},{"size":19630,"mtime":1612477715129,"results":"137","hashOfConfig":"70"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},"1lezclx",{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"140"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"172","messages":"173","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"140"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"140"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"140"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"140"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"140"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"140"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198","usedDeprecatedRules":"140"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"205","usedDeprecatedRules":"140"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"218","usedDeprecatedRules":"140"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"225","usedDeprecatedRules":"140"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"258","usedDeprecatedRules":"140"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"261","usedDeprecatedRules":"140"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"264","usedDeprecatedRules":"140"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"267","usedDeprecatedRules":"140"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"270","usedDeprecatedRules":"140"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"273","usedDeprecatedRules":"140"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"276","usedDeprecatedRules":"140"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"279","usedDeprecatedRules":"140"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"282","usedDeprecatedRules":"140"},{"filePath":"283","messages":"284","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"285","usedDeprecatedRules":"140"},{"filePath":"286","messages":"287","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"288","usedDeprecatedRules":"140"},{"filePath":"289","messages":"290","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"291","usedDeprecatedRules":"140"},{"filePath":"292","messages":"293","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"294","usedDeprecatedRules":"140"},{"filePath":"295","messages":"296","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"297","usedDeprecatedRules":"140"},{"filePath":"298","messages":"299","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"300","usedDeprecatedRules":"140"},"C:\\Users\\marco\\Documents\\BUIDL\\covenants-fe\\src\\index.jsx",[],["301","302"],"C:\\Users\\marco\\Documents\\BUIDL\\covenants-fe\\src\\reportWebVitals.js",[],"C:\\Users\\marco\\Documents\\BUIDL\\covenants-fe\\src\\App.jsx",[],"C:\\Users\\marco\\Documents\\BUIDL\\covenants-fe\\src\\store\\index.js",[],"C:\\Users\\marco\\Documents\\BUIDL\\covenants-fe\\src\\components\\index.js",[],"C:\\Users\\marco\\Documents\\BUIDL\\covenants-fe\\src\\store\\reducers\\index.js",[],"C:\\Users\\marco\\Documents\\BUIDL\\covenants-fe\\src\\components\\pages\\index.js",[],"C:\\Users\\marco\\Documents\\BUIDL\\covenants-fe\\src\\components\\shared\\index.js",[],"C:\\Users\\marco\\Documents\\BUIDL\\covenants-fe\\src\\components\\page-container\\index.js",[],"C:\\Users\\marco\\Documents\\BUIDL\\covenants-fe\\src\\store\\reducers\\core\\index.js",[],"C:\\Users\\marco\\Documents\\BUIDL\\covenants-fe\\src\\store\\reducers\\session\\index.js",[],"C:\\Users\\marco\\Documents\\BUIDL\\covenants-fe\\src\\components\\pages\\ComingSoon.jsx",[],"C:\\Users\\marco\\Documents\\BUIDL\\covenants-fe\\src\\components\\pages\\NotFound.jsx",[],"C:\\Users\\marco\\Documents\\BUIDL\\covenants-fe\\src\\components\\page-container\\PageContainer.jsx",["303"],"import { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nconst PageContainer = (props) => {\n    return (\n        <div className=\"page-container-wrapper mt-4 mt-md-0\">\n            <div className=\"page-container\">\n                <div className=\"page-container-row\">\n                    <div className=\"col-md-6 col-12 flex flex-column mb-4 mb-md-0\" style={{justifyContent: 'space-evenly'}}>\n                        { props.title ? <h3><b>{props.title}</b></h3> : '' }\n                        { props.text ? <p>{props.text}</p> : props.children }\n                    </div>\n                    { props.image ? \n                        <div className=\"col-md-6 col-12 flex justify-content-center align-items-center my-4 my-md-0\">\n                            <img src={props.image} height={props.imageHeight || 350} />\n                        </div> : '' \n                    }\n                </div>\n                {\n                    props.launchDapp ? \n                    <div className=\"page-container-row\">\n                        <Link to={props.link}>\n                            <button className=\"btn btn-primary\">DAPP</button>\n                        </Link>\n                    </div> : <div/>\n                }\n            </div>\n        </div>\n    )\n}\n\nPageContainer.propTypes = {\n    image: PropTypes.string,\n    imageHeight: PropTypes.number,\n    launchDapp: PropTypes.bool,\n    link: PropTypes.string,\n    text: PropTypes.string,\n    title: PropTypes.string,\n}\n\nexport default PageContainer;","C:\\Users\\marco\\Documents\\BUIDL\\covenants-fe\\src\\components\\shared\\footer\\Footer.jsx",[],"C:\\Users\\marco\\Documents\\BUIDL\\covenants-fe\\src\\components\\shared\\header\\Header.jsx",["304"],"C:\\Users\\marco\\Documents\\BUIDL\\covenants-fe\\src\\components\\shared\\coin\\Coin.jsx",["305"],"import PropTypes from 'prop-types';\n\nconst Coin = (props) => {\n    return <img className={props.className || \"mr-2\"} src={`https://assets.trustwalletapp.com/blockchains/ethereum/assets/${props.address || \"0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48\" }/logo.png`} height={props.height || 24} />\n}\n\nCoin.propTypes = {\n    className: PropTypes.string,\n    address: PropTypes.string,\n    height: PropTypes.number\n}\n\nexport default Coin;","C:\\Users\\marco\\Documents\\BUIDL\\covenants-fe\\src\\components\\shared\\sidemenu\\Sidemenu.jsx",["306"],"import { Link, useLocation } from 'react-router-dom';\n\nconst menu = [\n    {\n        name: 'Farm', path: '/farm', asset: require('../../../assets/images/cloud.png').default,\n    },\n    {\n        name: 'Inflation', path: '/inflation', asset: require('../../../assets/images/cloud.png').default,\n    },\n    {\n        name: 'WUSD', path: '/wusd', asset: require('../../../assets/images/wusd.png').default,\n    },\n    {\n        name: 'Bazaar', path: '/bazaar', asset: require('../../../assets/images/bread.png').default,\n    },\n    {\n        name: 'Crafting', path: '/crafting', asset: require('../../../assets/images/bottle.png').default,\n    },\n    {\n        name: 'Grimoire', path: '/grimoire', asset: require('../../../assets/images/book.png').default,\n    },\n    {\n        name: 'Covenants', path: '/more', asset: require('../../../assets/images/sword.png').default,\n    }\n]\n\nconst Sidemenu = () => {\n    const location = useLocation();\n\n    return (\n        <ul className=\"nav app-sidemenu flex-column\">\n        {\n            menu.map(\n                (menuItem, index) => (\n                    <li className={`nav-link ${location.pathname.includes(menuItem.path) ? \"sidebar-menu-link-selected\" : \"\"}`} key={index}>\n                        <img src={menuItem.asset} className=\"mr-2\" height={48} />\n                        <Link className=\"sidebar-menu-link\" to={menuItem.path}>{menuItem.name}</Link>\n                    </li>\n                )\n            )\n        }   \n        </ul>\n    )\n}\n\nexport default Sidemenu;","C:\\Users\\marco\\Documents\\BUIDL\\covenants-fe\\src\\components\\shared\\buttons\\ApproveButton.jsx",[],"C:\\Users\\marco\\Documents\\BUIDL\\covenants-fe\\src\\components\\shared\\dapp-menu\\DappMenu.jsx",[],"C:\\Users\\marco\\Documents\\BUIDL\\covenants-fe\\src\\components\\shared\\farming\\FarmingComponent.jsx",["307","308","309"],"import PropTypes from 'prop-types';\nimport Coin from '../coin/Coin';\nimport { Link } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport axios from 'axios';\n\nconst FarmingComponent = (props) => {\n    const { className, dfoCore, contract, goBack, hasBorder, hostedBy } = props;\n    const [metadata, setMetadata] = useState(null);\n\n    console.log(contract);\n\n    useEffect(() => {\n        getContractMetadata();\n    }, []);\n\n    const getContractMetadata = async () => {\n        const rewardToken = await dfoCore.getContract(dfoCore.getContextElement('ERC20ABI'), await contract.methods._rewardTokenAddress().call());\n        const symbol = await rewardToken.methods.symbol().call();\n        const extensionAddress = await contract.methods._extension().call();\n        const extensionContract = await dfoCore.getContract(dfoCore.getContextElement('LiquidityMiningExtensionABI'), extensionAddress);\n        const { host, byMint } = await extensionContract.methods.data().call();\n\n        const setups = await contract.methods.setups().call();\n        const freeSetups = setups.filter((setup) => setup.free).length;\n        const lockedSetups = setups.length - freeSetups;\n        const { data } = await axios.get(dfoCore.getContextElement(\"coingeckoEthereumPriceURL\"));\n        const [ ethData ] = data;\n\n        let rewardPerBlock = 0;\n        await Promise.all(setups.map(async (setup) => {\n            rewardPerBlock += parseInt(setup.rewardPerBlock);\n        }))\n        const uniswapV2Router = await dfoCore.getContract(dfoCore.getContextElement('uniswapV2RouterABI'), dfoCore.getContextElement('uniswapV2RouterAddress'));\n        console.log(setups);\n        let valueLocked = 0;\n        await Promise.all(setups.map(async (setup) => {\n            if (parseInt(setup.totalSupply) === 0 || parseInt(setup.currentStakedLiquidity) === 0) return;\n            const amounts = await uniswapV2Router.methods.getAmountsOut(setup.totalSupply, [dfoCore.getContextElement('wethTokenAddress'), setup.liquidityPoolTokenAddress]).call();\n            console.log(amounts);\n            valueLocked += setup.free ? parseInt(setup.totalSupply) : parseInt(setup.currentStakedLiquidity);\n        }))\n        valueLocked = valueLocked * ethData.current_price;\n\n        setMetadata({\n            name: `Farm ${symbol}`,\n            contractAddress: contract.options.address,\n            rewardTokenAddress: rewardToken.options.address,\n            apy: '10% yearly',\n            valueLocked: `$ ${valueLocked}`,\n            rewardPerBlock: `${dfoCore.toDecimals(rewardPerBlock.toString())} ${symbol}`,\n            byMint,\n            freeSetups,\n            lockedSetups,\n            host: `${host.substring(0, 5)}...${host.substring(host.length - 3, host.length)}`,\n        });\n    }\n\n    return (\n        <div className={className}>\n            <div className={`card farming-card ${!hasBorder ? \"no-border\" : \"\"}`}>\n                <div className=\"card-body\">\n                    <div className=\"row px-2 farming-component-main-row\">\n                        {\n                            metadata ? <>\n                            <div className=\"col-12 col-md-3 farming-component-main-col\">\n                                <div className=\"row mb-2\">\n                                    <Coin address={metadata.rewardTokenAddress} /> <h6><b>{metadata.name}</b></h6>\n                                </div>\n                                <div className=\"row\">\n                                    <Link to={ goBack ? `/farm/dapp/` : `/farm/dapp/${metadata.contractAddress}`} className=\"btn btn-secondary btn-sm\">{ goBack ? \"Back\" : \"Enter\" }</Link>\n                                </div>\n                            </div>\n                            <div className=\"col-12 col-md-5\">\n                                <div className=\"row\">\n                                    <p className=\"farming-component-paragraph\"><b>Returns (APY)</b>: {metadata.apy}</p>\n                                    <p className=\"farming-component-paragraph\"><b>Value locked</b>: {metadata.valueLocked}</p>\n                                    <p className=\"farming-component-paragraph\"><b>Rewards/block</b>: {metadata.rewardPerBlock}</p>\n                                </div>\n                            </div>\n                            <div className=\"col-12 col-md-4\">\n                                <div className=\"row\">\n                                    <p className=\"farming-component-paragraph\"><b>Rewards</b>: {metadata.byMint ? \"By mint\" : \"By reserve\"}</p>\n                                    <p className=\"farming-component-paragraph\"><b>Setups (f/l)</b>: {metadata.freeSetups} | {metadata.lockedSetups}</p>\n                                    <p className=\"farming-component-paragraph\"><b>Hosted</b>: {metadata.host}</p>\n                                </div>\n                            </div>\n                            </> : <div className=\"col-12 justify-content-center\">\n                                <div className=\"spinner-border text-secondary\" role=\"status\">\n                                    <span className=\"visually-hidden\"></span>\n                                </div>\n                            </div>\n                        }\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default FarmingComponent;","C:\\Users\\marco\\Documents\\BUIDL\\covenants-fe\\src\\components\\shared\\token-input\\TokenInput.jsx",[],"C:\\Users\\marco\\Documents\\BUIDL\\covenants-fe\\src\\components\\shared\\input\\Input.jsx",["310"],"import Coin from '../coin/Coin';\nimport PropTypes from 'prop-types';\n\nconst Input = (props) => {\n    const { label, value, min, max, onChange, showBalance, balance, showMax, showCoin, address, name, step, extra } = props;\n\n    return (\n        <>\n            { label && <h6><b>{label}</b></h6> }\n            <div className=\"input-group\">\n                {\n                    showMax && <div className=\"input-group-prepend\">\n                        <button className=\"btn btn-secondary\" onClick={() => onChange({ target: { value: balance }})} type=\"button\">MAX</button>\n                    </div>\n                }\n                <input type=\"number\" step={step || 1} className=\"form-control\" value={value} min={min} max={max || balance} onChange={onChange} />\n                {\n                    showCoin && <div className=\"input-group-append\">\n                        <span className=\"input-group-text\" id=\"\"><Coin address={address} /> {name}</span>\n                    </div>\n                }\n            </div>\n            { showBalance && <small className=\"form-text text-muted\">Balance: {balance} {name} {extra ? extra : ''}</small> }\n        </>\n    )\n}\n\nexport default Input;","C:\\Users\\marco\\Documents\\BUIDL\\covenants-fe\\src\\components\\shared\\inflation\\FixedInflationComponent.jsx",["311","312"],"import PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { useState } from 'react';\n\nconst FixedInflationComponent = (props) => {\n    const { className, dfoCore, entry, showButton, hasBorder } = props;\n    const [metadata, setMetadata] = useState(null);\n\n    const getContractMetadata = async () => {\n\n        setMetadata({\n            name: 'XXXXXXXXX',\n            period: 'Weekly',\n            executorReward: '5%',\n            operations: [0, 0, 0],\n            host: '0x0000',\n            contractAddress: '0x0000'\n        });\n    }\n\n    if (!metadata) {\n        getContractMetadata();\n    }\n\n    return (\n        <div className={className}>\n            <div className={`card farming-card ${!hasBorder ? \"no-border\" : \"\"}`}>\n                <div className=\"card-body\">\n                    <div className=\"row px-2 fixed-inflation-main-row\">\n                        {\n                            metadata ? <>\n                            <div className=\"col-12 col-md-6 flex flex-column justify-content-center\">\n                                <div className=\"row mb-2\">\n                                    <h4 className=\"mr-4\"><b>{metadata.name}</b></h4> <b>({metadata.period})</b>\n                                </div>\n                                <div className=\"row\">\n                                    <b style={{fontSize: 14}} className=\"text-secondary mr-1\">Executor reward: 5% </b> <b style={{fontSize: 14, marginBottom: 4}}>for {metadata.operations.length} operations</b> \n                                </div>\n                            </div>\n                            <div className=\"col-12 col-md-6\">\n                                <div className=\"row flex-column align-items-end\">\n                                    <p className=\"fixed-inflation-paragraph\"><b>Host</b>: {metadata.host}</p>\n                                    <p className=\"fixed-inflation-paragraph\"><b>Contract</b>: {metadata.contractAddress}</p>\n                                    { !showButton ? <div/> : <Link to={`/inflation/dapp/${metadata.contractAddress}`} className=\"btn btn-secondary btn-sm\">Open</Link>}\n                                </div>\n                            </div>\n                            </> : <div className=\"col-12 justify-content-center\">\n                                <div className=\"spinner-border text-secondary\" role=\"status\">\n                                    <span className=\"visually-hidden\"></span>\n                                </div>\n                            </div>\n                        }\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nFixedInflationComponent.propTypes = {\n    className: PropTypes.string,\n    entry: PropTypes.any.isRequired,\n    hasBorder: PropTypes.bool\n};\n\nexport default FixedInflationComponent;","C:\\Users\\marco\\Documents\\BUIDL\\covenants-fe\\src\\components\\shared\\farming\\SetupComponent.jsx",["313","314","315","316","317","318","319"],"import PropTypes from 'prop-types';\nimport Coin from '../coin/Coin';\nimport { Link } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { Input, ApproveButton } from '..';\n\nconst SetupComponent = (props) => {\n    const { className, dfoCore, setup, setupIndex, hostedBy, lmContract, position, positionId, manage, farm, redeem } = props;\n    const [open, setOpen] = useState(false);\n    const [blockNumber, setBlockNumber] = useState(0);\n    const [setupTokens, setSetupTokens] = useState([]);\n    const [loading, setLoading] = useState(false);\n    const [AMM, setAMM] = useState({ name: \"\", version: \"\"});\n    const [ammContract, setAmmContract] = useState(null);\n    const [status, setStatus] = useState('farm');\n    const [edit, setEdit] = useState(false);\n    const [currentBlock, setCurrentBlock] = useState(0);\n    const [addLiquidityType, setAddLiquidityType] = useState(\"add-tokens\"); \n    const [tokensAmounts, setTokensAmount] = useState([]);\n    const [tokensApprovals, setTokensApprovals] = useState([]);\n    const [tokensContracts, setTokensContracts] = useState([]);\n    const [lpTokenAmount, setLpTokenAmount] = useState(0);\n    const [lockedEstimatedReward, setLockedEstimatedReward] = useState(0);\n    const [freeAvailableReward, setFreeAvailableReward] = useState(0);\n    const [lpTokenInfo, setLpTokenInfo] = useState(null);\n    const [rewardTokenInfo, setRewardTokenInfo] = useState(null);\n    const [extension, setExtension] = useState(null);\n    const [removalAmount, setRemovalAmount] = useState(0);\n    const [manageStatus, setManageStatus] = useState(null);\n    const [unwrapPair, setUnwrapPair] = useState(false);\n\n    useEffect(() => {\n        if (!blockNumber) {\n            getSetupMetadata();\n        }\n    }, []);\n\n    const onTokenApproval = (index) => {\n        setTokensApprovals(tokensApprovals.map((val, i) => i === index ? true : val));\n    }\n\n    const getSetupMetadata = async () => {\n        setLoading(true);\n        try {\n            const extensionAddress = await lmContract.methods._extension().call();\n            console.log(extensionAddress);\n            setExtension(extensionAddress);\n            setCurrentBlock(await dfoCore.getBlockNumber());\n            const rewardTokenAddress = await lmContract.methods._rewardTokenAddress().call();\n            const rewardToken = await dfoCore.getContract(dfoCore.getContextElement('ERC20ABI'), await lmContract.methods._rewardTokenAddress().call());\n            console.log(await rewardToken.methods.balanceOf(extensionAddress).call());\n            const rewardTokenSymbol = await rewardToken.methods.symbol().call();\n            const rewardTokenDecimals = await rewardToken.methods.decimals().call();\n            setRewardTokenInfo({ contract: rewardToken, symbol: rewardTokenSymbol, decimals: rewardTokenDecimals, address: rewardTokenAddress });\n            const lpToken = await dfoCore.getContract(dfoCore.getContextElement('ERC20ABI'), setup.liquidityPoolTokenAddress);\n            const lpTokenSymbol = await lpToken.methods.symbol().call();\n            const lpTokenDecimals = await lpToken.methods.decimals().call();\n            const lpTokenBalance = await lpToken.methods.balanceOf(dfoCore.address).call();\n            setLpTokenInfo({ contract: lpToken, symbol: lpTokenSymbol, decimals: lpTokenDecimals, balance: lpTokenBalance });\n            setBlockNumber(await dfoCore.getBlockNumber());\n            const ammContract = await dfoCore.getContract(dfoCore.getContextElement('AMMABI'), setup.ammPlugin);\n            setAmmContract(ammContract);\n            const tokenAddress = setup.liquidityPoolTokenAddress;\n            const byTokensRes = await ammContract.methods.byLiquidityPool(tokenAddress).call();\n            console.log(byTokensRes);\n            const tokens = [];\n            const approvals = [];\n            const contracts = [];\n            for (let i = 0; i < byTokensRes['2'].length; i++) {\n                const token = await dfoCore.getContract(dfoCore.getContextElement('ERC20ABI'), byTokensRes['2'][i]);\n                const symbol = await token.methods.symbol().call();\n                const decimals = await token.methods.decimals().call();\n                const balance = await token.methods.balanceOf(dfoCore.address).call();\n                const approval = await token.methods.allowance(dfoCore.address, lmContract.options.address).call();\n                const totalSupply = await token.methods.totalSupply().call();\n                approvals.push(parseInt(approval) !== 0);\n                contracts.push(token);\n                tokens.push({ amount: 0, balance: dfoCore.toDecimals(dfoCore.toFixed(balance), decimals), liquidity: byTokensRes['1'][i], decimals, address: byTokensRes['2'][i], symbol });\n            }\n            const info = await ammContract.methods.info().call();\n            setAMM({ name: info['0'], version: info['1'] });\n            console.log(tokens);\n            setSetupTokens(tokens);\n            setTokensContracts(contracts);\n            setTokensAmount([].fill(0));\n            setTokensApprovals(approvals);\n            if (manage && position) {\n                // retrieve the manage data using the position\n                const free = position['free'];\n                const creationBlock = position['creationBlock'];\n                const positionSetupIndex = position['setupIndex'];\n                const liquidityPoolTokenAmount = position['liquidityPoolTokenAmount'];\n                const amounts = await ammContract.methods.byLiquidityPoolAmount(setup.liquidityPoolTokenAddress, liquidityPoolTokenAmount).call();\n                if (free) {\n                    const reward = await lmContract.methods.calculateFreeLiquidityMiningSetupReward(positionId, true).call();\n                    setFreeAvailableReward(reward);\n                }\n                setManageStatus({ free, creationBlock, positionSetupIndex, liquidityPoolAmount: liquidityPoolTokenAmount, tokensAmounts: amounts['tokensAmounts'], tokens  })\n                console.log(position);\n            }\n        } catch (error) {\n            console.error(error);\n        } finally {\n            setLoading(false);\n        }\n    }\n\n    const onUpdateTokenAmount = async (value, index) => {\n        if (!value) {\n            setTokensAmount(tokensAmounts.map((old, i) => i === index ? \"0\" : old));\n            return;\n        }\n        const result = await ammContract.methods.byTokenAmount(setup.liquidityPoolTokenAddress, setupTokens[index].address, props.dfoCore.toFixed(props.dfoCore.fromDecimals(value, parseInt(setupTokens[index].decimals)))).call();\n        const { liquidityPoolAmount, tokensAmounts } = result;\n        console.log(result);\n        setLpTokenAmount(props.dfoCore.toDecimals(liquidityPoolAmount, lpTokenInfo.decimals))\n        setTokensAmount(tokensAmounts.map((old, i) => props.dfoCore.toDecimals(tokensAmounts[i], setupTokens[i].decimals)));\n        if (!setup.free) {\n            if (parseInt(tokensAmounts[0]) > 0) {\n                const reward = await lmContract.methods.calculateLockedLiquidityMiningSetupReward(setupIndex, tokensAmounts[0], false, 0).call();\n                console.log(reward)\n                setLockedEstimatedReward(props.dfoCore.toDecimals(props.dfoCore.toFixed(reward.relativeRewardPerBlock), rewardTokenInfo.decimals));\n            }\n        }\n    }\n\n    const addLiquidity = async () => {\n        setLoading(true);\n        try {\n            if (addLiquidityType === 'add-tokens') {\n                // adding liquidity via tokens\n                const stake = {\n                    setupIndex,\n                    amount: dfoCore.toFixed(dfoCore.fromDecimals(tokensAmounts[0])),\n                    amountIsLiquidityPool: false,\n                    positionOwner: dfoCore.voidEthereumAddress,\n                };\n                console.log(stake);\n                const gasLimit = await lmContract.methods.openPosition(stake).estimateGas({ from: dfoCore.address });\n                const result = await lmContract.methods.openPosition(stake).send({ from: dfoCore.address, gasLimit });\n                console.log(result);\n                await getSetupMetadata();\n            } else {\n                // adding liquidity to position\n            }\n        } catch (error) {\n            console.error(error);\n        } finally {\n            setLoading(false);\n        }\n    }\n\n    const removeLiquidity = async () => {\n        setLoading(true);\n        try {\n            if (manageStatus.free) {\n                const removedLiquidity = props.dfoCore.toFixed(parseInt(manageStatus.liquidityPoolAmount) * removalAmount / 100).toString();\n                const gasLimit = await lmContract.methods.withdrawLiquidity(positionId, 0, unwrapPair, removedLiquidity).estimateGas({ from: dfoCore.address });\n                const result = await lmContract.methods.withdrawLiquidity(positionId, 0, unwrapPair, removedLiquidity).send({ from: dfoCore.address, gasLimit });\n                console.log(result);\n            }\n            await getSetupMetadata();\n        } catch (error) {\n            console.error(error);\n        } finally {\n            setLoading(false);\n        }\n    }\n\n    const withdrawReward = async () => {\n        setLoading(true);\n        try {\n            console.log(positionId);\n            const gasLimit = await lmContract.methods.withdrawReward(positionId).estimateGas({ from: dfoCore.address });\n            const result = await lmContract.methods.withdrawReward(positionId).send({ from: dfoCore.address, gasLimit});\n            console.log(result);\n            await getSetupMetadata();\n        } catch (error) {\n            console.error(error);\n        } finally {\n            setLoading(false);\n        }\n    }\n\n    const getButton = () => {\n        if (open || edit) {\n            return <button className=\"btn btn-secondary\" onClick={() => { setOpen(false); setEdit(false) }}>Close</button>;\n        } else {\n            if (manage) {\n                return <button className=\"btn btn-secondary\" onClick={() => { setOpen(true); setEdit(false); setStatus('manage') }}>Manage</button>;\n            } else if ((setup.free && setup.rewardPerBlock > 0) || (!setup.free && setup.startBlock <= currentBlock)) {\n                console.log(currentBlock);\n                return <button className=\"btn btn-secondary\" onClick={() => { setOpen(true); setEdit(false) }}>Farm</button>\n            }\n            /*\n            if (status === 'manage' && !edit) {\n                return <button className=\"btn btn-secondary\" onClick={() => { setOpen(true); setEdit(false) }}>Manage</button>;\n            } else if (status === 'farm' && !edit) {\n                return <button className=\"btn btn-secondary\" onClick={() => { setOpen(true); setEdit(false) }}>Farm</button>;\n            } else if (status === 'redeem' && !edit) {\n                return <button className=\"btn btn-warning\" onClick={() => { setOpen(true); setEdit(false) }}>Redeem</button>;\n            } else {\n                return <div/>\n            }\n            */\n        }\n    }\n\n    const getApproveButton = () => {\n        const notApprovedIndex = tokensApprovals.findIndex((value) => !value);\n        if (notApprovedIndex !== -1) {\n            return <ApproveButton contract={tokensContracts[notApprovedIndex]} from={props.dfoCore.address} spender={lmContract.options.address} onError={(error) => console.log(error)} onApproval={() => onTokenApproval(notApprovedIndex)} text={`Approve ${setupTokens[notApprovedIndex].symbol}`} />\n        } else {\n            return <div/>\n        }\n    }\n\n    const getEditButton = () => {\n        return <button className=\"btn btn-primary mr-2\" onClick={() => { setEdit(true); setOpen(true) }}>Edit</button>;\n    }\n\n    const getAdvanced = () => {\n        if (status === 'manage') {\n            return getManageAdvanced();\n        } else if (status === 'farm') {\n            return getFarmAdvanced();\n        } else if (status === 'redeem') {\n            return getRedeemAdvanced();\n        }\n        return <div/>\n    }\n\n    const getEdit = () => {\n        return <div className=\"row\">\n            <hr/>\n        </div>\n    }\n\n    const getManageAdvanced = () => {\n        return <div className=\"p-4\">\n            {\n                manageStatus && <>\n                    <hr/>\n                    <div className=\"row mt-4\">\n                        <h6 style={{fontSize: 14}}>\n                            <b>Your position: </b> \n                            {dfoCore.toDecimals(manageStatus.liquidityPoolAmount, lpTokenInfo.decimals, 8)} {lpTokenInfo.symbol} - {manageStatus.tokens.map((token, i) =>  <span> {dfoCore.toDecimals(manageStatus.tokensAmounts[i], token.decimals)} {token.symbol} </span>)}\n                            ({manageStatus.liquidityPoolAmount/setup.totalSupply}%)\n                        </h6>\n                    </div>\n                    <div className=\"row mt-2 align-items-center justify-content-end\">\n                        <div className=\"col-md-6 col-12\">\n                            <h6 style={{fontSize: 14}}>\n                                <b>Available reward:</b> {dfoCore.toDecimals(dfoCore.toFixed(freeAvailableReward), rewardTokenInfo.decimals)} {rewardTokenInfo.symbol}\n                            </h6>\n                        </div>\n                        {\n                            freeAvailableReward && <div className=\"col-md-6 col-12\">\n                                <button onClick={() => withdrawReward()} className=\"btn btn-primary\">Redeem</button>\n                            </div>\n                        }\n                    </div>\n                    <hr/>\n                    {\n                        (position.free || parseInt(position.setupEndBlock) <= currentBlock ) && <>\n                            <div className=\"row mt-4\">\n                                <div className=\"col-md-6\">\n                                    <select className=\"custom-select wusd-pair-select\" value={addLiquidityType} onChange={(e) => setAddLiquidityType(e.target.value)}>\n                                        <option value=\"add-tokens\">Add liquidity</option>\n                                        <option value=\"add-lp\">Add liquidity by LP token</option>\n                                        <option value=\"remove\">Remove liquidity</option>\n                                    </select>\n                                </div>\n                            </div>\n                            { addLiquidityType === 'add-tokens' ? <div className=\"row justify-content-center mt-4\">\n                                <div className=\"col-md-9 col-12\">\n                                    {\n                                        setupTokens.map((setupToken, i) => {\n                                            return <div className=\"row text-center mb-4\">\n                                                <Input showMax={true} step={0.0001} address={setupToken.address} value={tokensAmounts[i]} balance={setupToken.balance} min={0} onChange={(e) => onUpdateTokenAmount(e.target.value, i)} showCoin={true} showBalance={true} name={setupToken.symbol} />\n                                            </div>\n                                        })\n                                    }\n                                    </div>\n                                </div>  : addLiquidityType === 'add-lp' ? <div className=\"row justify-content-center mt-4\">\n                                    <div className=\"col-md-9 col-12\">\n                                        <div className=\"row text-center mb-4\">\n                                            <Input showMax={true} step={0.0001} address={setup.liquidityPoolTokenAddress} value={lpTokenAmount} balance={dfoCore.toDecimals(lpTokenInfo.balance, lpTokenInfo.decimals)} min={0} onChange={(e) => console.log(e)} showCoin={true} showBalance={true} name={lpTokenInfo.symbol} />\n                                        </div>\n                                    </div>\n                                </div> : <>\n                                    <div className=\"row justify-content-center mt-4\">\n                                        <div class=\"form-group w-100\">\n                                            <label htmlFor=\"formControlRange\" className=\"text-secondary\"><b>Amount:</b> {removalAmount}%</label>\n                                            <input type=\"range\" value={removalAmount} onChange={(e) => setRemovalAmount(e.target.value)} class=\"form-control-range\" id=\"formControlRange\" />\n                                        </div>\n                                    </div>\n                                    <div className=\"row mt-2 justify-content-evenly\">\n                                        <button className=\"btn btn-outline-secondary mr-2\" onClick={() => setRemovalAmount(10)} >10%</button>\n                                        <button className=\"btn btn-outline-secondary mr-2\" onClick={() => setRemovalAmount(25)} >25%</button>\n                                        <button className=\"btn btn-outline-secondary mr-2\" onClick={() => setRemovalAmount(50)} >50%</button>\n                                        <button className=\"btn btn-outline-secondary mr-2\" onClick={() => setRemovalAmount(75)} >75%</button>\n                                        <button className=\"btn btn-outline-secondary mr-2\" onClick={() => setRemovalAmount(90)} >90%</button>\n                                        <button className=\"btn btn-outline-secondary\" onClick={() => setRemovalAmount(100)} >MAX</button>\n                                    </div>\n                                    <div className=\"row mt-4\">\n                                        <h6><b>Remove: </b> {dfoCore.toDecimals(dfoCore.toFixed(parseInt(manageStatus.liquidityPoolAmount) * removalAmount / 100).toString(), lpTokenInfo.decimals, 8)} {lpTokenInfo.symbol} - {manageStatus.tokens.map((token, i) =>  <span> {dfoCore.toDecimals(dfoCore.toFixed(parseInt(manageStatus.tokensAmounts[i]) * removalAmount / 100).toString(), token.decimals)} {token.symbol} </span>)}</h6>\n                                    </div>\n                                    <div className=\"row mt-4\">\n                                        <div className=\"form-check\">\n                                            <input className=\"form-check-input\" type=\"checkbox\" value={unwrapPair} onChange={(e) => setUnwrapPair(e.target.checked)} id=\"getLpToken\" />\n                                            <label className=\"form-check-label\" htmlFor=\"getLpToken\">\n                                                Unwrap tokens\n                                            </label>\n                                        </div>\n                                    </div>\n                                    <div className=\"row justify-content-center mt-4\">\n                                        <button onClick={() => removeLiquidity()} disabled={!removalAmount || removalAmount === 0} className=\"btn btn-secondary\">Remove</button>\n                                    </div>\n                                </>\n                            }\n                        </>\n                    }\n                </>\n            }\n        </div>\n    }\n\n    const getFarmAdvanced = () => {\n        return <>\n            <div className=\"row mt-4\">\n                <div className=\"col-md-6 col-12\">\n                    <select className=\"custom-select wusd-pair-select\" value={addLiquidityType} onChange={(e) => setAddLiquidityType(e.target.value)}>\n                        <option value=\"add-tokens\">Add liquidity</option>\n                        <option value=\"add-lp\">Add liquidity by LP token</option>\n                    </select>\n                </div>\n            </div>\n            {\n                addLiquidityType === 'add-tokens' ? <div className=\"row justify-content-center mt-4\">\n                <div className=\"col-md-9 col-12\">\n                    {\n                        setupTokens.map((setupToken, i) => {\n                            return <div className=\"row text-center mb-4\">\n                                <Input showMax={true} step={0.0001} address={setupToken.address} value={tokensAmounts[i]} balance={setupToken.balance} min={0} onChange={(e) => onUpdateTokenAmount(e.target.value, i)} showCoin={true} showBalance={true} name={setupToken.symbol} />\n                            </div>\n                        })\n                    }\n                    </div>\n                </div> : <div className=\"row justify-content-center mt-4\">\n                    <div className=\"col-md-9 col-12\">\n                        <div className=\"row text-center mb-4\">\n                            <Input showMax={true} step={0.0001} address={setup.liquidityPoolTokenAddress} value={lpTokenAmount} balance={dfoCore.toDecimals(lpTokenInfo.balance, lpTokenInfo.decimals)} min={0} onChange={(e) => console.log(e)} showCoin={true} showBalance={true} name={lpTokenInfo.symbol} />\n                        </div>\n                    </div>\n                </div>\n            }\n            {\n                (!setup.free && rewardTokenInfo) && <div className=\"row justify-content-center mt-4\">\n                    <b>Estimated earnings (total)</b>: {lockedEstimatedReward} {rewardTokenInfo.symbol}/block\n                </div>\n            }\n            <div className=\"row justify-content-center mt-4\">\n                {\n                    tokensApprovals.some((value) => !value) && <div className=\"col-md-6 col-12\">\n                        { getApproveButton() }\n                    </div>\n                }\n                <div className=\"col-md-6 col-12\">\n                    <button className=\"btn btn-secondary\" onClick={() => addLiquidity()} disabled={tokensApprovals.some((value) => !value) || tokensAmounts.some((value) => value === 0)}>Add</button>\n                </div>\n            </div>\n        </>\n    }\n\n    const getRedeemAdvanced = () => {\n        return <div className=\"row\">\n            <hr/>\n        </div>\n    }\n\n    return (\n        <div className={className}>\n            <div className={`card farming-card`}>\n                <div className=\"card-body\">\n                    {\n                        loading ? <div className=\"row px-2 farming-component-main-row\">\n                            <div className=\"col-12 justify-content-center\">\n                                <div className=\"spinner-border text-secondary\" role=\"status\">\n                                    <span className=\"visually-hidden\"></span>\n                                </div>\n                            </div>\n                        </div> : <>\n                        <div className=\"row px-2 farming-component-main-row\">\n                            <div className=\"col-12 col-md-7 setup-component-main-col\">\n                                <div className=\"row mb-4\">\n                                    <h5><b>{setup.free ? \"Free farming\" : \"Locked farming\"} {(!setup.free && parseInt(setup.endBlock) <= blockNumber) && <span className=\"text-danger\">(ended)</span>}</b></h5>\n                                </div>\n                                {\n                                    setup.free ? <>\n                                        <div className=\"row mb-4\">\n                                            {setupTokens.map((token, i) => <span key={token.address}>{i !== 0 ? '+ ' : ''}<Coin address={token.address} className=\"mr-2 mb-1\" /> </span>)} = {dfoCore.toDecimals(setup.rewardPerBlock).substring(0, 6)} <Coin address={rewardTokenInfo?.address} className=\"mx-2\" />/block\n                                        </div>\n                                        <div className=\"row\">\n                                            <p className=\"mb-0 setup-component-small-p\"><b>Shared reward</b>: {AMM.name}</p>\n                                        </div> \n                                    </> : <>\n                                        <div className=\"row mb-4\">\n                                            {props.dfoCore.toDecimals(setup.rewardPerBlock)} <Coin address={setup.rewardTokenAddress} className=\"ml-2\" />/block = {setupTokens.map((token, i) => <span key={token.address}>{i !== 0 ? '+' : ''}<Coin address={token.address} className=\"mx-2 mb-1\" /></span>)}\n                                        </div>\n                                        <div className=\"row\">\n                                            <p className=\"mb-0 setup-component-small-p\"><b>Fixed reward</b>: {AMM.name} - <span className=\"text-underline\">block end: {setup.endBlock}</span></p>\n                                        </div> \n                                    </>\n                                }\n                            </div>\n                            <div className=\"col-12 col-md-5 setup-component-main-col align-items-end\">\n                                <div className=\"row mb-4\">\n                                    <div className=\"col-12\">\n                                        <p className=\"mb-0 setup-component-small-p\"><b>liquidity</b>: {setupTokens.map((token, i) => <span>{dfoCore.toDecimals(dfoCore.toFixed(dfoCore.normalizeValue(token.liquidity, token.decimals)).toString())} <Coin address={token.address} height={18} />{i !== setupTokens.length - 1 ? '+ ' : ''}</span> ) }</p>\n                                    </div>\n                                    {\n                                        !setup.free && \n                                        <div className=\"col-12 mt-2\">\n                                            <p className=\"mb-0 setup-component-small-p\"><b>reward/block</b>: {dfoCore.toDecimals(setup.rewardPerBlock)} <Coin address={setup.rewardTokenAddress} height={18} /> - <span className=\"text-secondary\"><b>available:</b> {dfoCore.toDecimals((parseInt(setup.rewardPerBlock) - parseInt(setup.currentRewardPerBlock)).toString())} <Coin address={setup.rewardTokenAddress} height={18} /></span></p>\n                                        </div>\n                                    }\n                                </div>\n                                <div className=\"row mt-4\">\n                                    { (hostedBy && !edit) ? getEditButton() : <></> } { getButton() }\n                                </div>\n                            </div>\n                        </div>\n                        {\n                            (open && !edit) ? getAdvanced() : <div/>\n                        }\n                        {\n                            (edit && !open) ? getEdit() : <div/>\n                        }\n                        </>\n                    }\n                    \n                </div>\n            </div>\n        </div>\n    )\n}\n\nSetupComponent.propTypes = {\n    className: PropTypes.string,\n    contract: PropTypes.any.isRequired,\n    goBack: PropTypes.bool,\n    hasBorder: PropTypes.bool\n};\n\nexport default SetupComponent;","C:\\Users\\marco\\Documents\\BUIDL\\covenants-fe\\src\\data\\context.json.js",["320","321","322"],"export default {\n    \"ethereumNetwork\": {\n      \"1\": \"\",\n      \"3\": \"Ropsten\"\n    },\n    \"dappVersion\": \"BETA 0.3\",\n    \"etherscanURL\": \"https://etherscan.io/\",\n    \"etherscanURLRopsten\": \"https://ropsten.etherscan.io/\",\n    \"uniSwapInfoURL\": \"https://uniswap.info/token/\",\n    \"uniSwapSwapURLTemplate\": \"https://app.uniswap.org/#/swap?inputCurrency={0}&outputCurrency={1}\",\n    \"penSwapSwapURLTemplate\": \"https://penguinswap.eth.link/#/swap?inputCurrency={0}&outputCurrency={1}\",\n    \"uniSwapPoolURLTemplate\": \"https://app.uniswap.org/#/pool?inputCurrency={0}&outputCurrency={1}\",\n    \"coingeckoEthereumPriceURL\": \"https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&ids=ethereum\",\n    \"coingeckoEthereumPriceRequestInterval\": 600000,\n    \"trustwalletImgURLTemplate\": \"https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/{0}/logo.png\",\n    \"defaultOcelotTokenAddress\": \"0x9784b427ecb5275c9300ea34adef57923ab170af\",\n    \"defaultOcelotTokenAddressRopsten\": \"0x6ae6cf934b2bd8c84d932aee75102ca2ef1bf2ce\",\n    \"daiTokenAddress\": \"0x6b175474e89094c44da98b954eedeac495271d0f\",\n    \"daiTokenAddressRopsten\": \"0x6b175474e89094c44da98b954eedeac495271d0f\",\n    \"singleTokenLength\": 23000,\n    \"dfoAddress\": \"0xc3BE549499f1e504c793a6c89371Bd7A98229500\",\n    \"dfoAddressRopsten\": \"0x761E02FEC5A21C6d3F284bd536dB2D2d33d5540B\",\n    \"ensAddress\": \"0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e\",\n    \"usdcTokenAddress\": \"0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48\",\n    \"usdcTokenAddressRopsten\": \"0xBc1EF4dddFAcb08e80C368eE2AAD69265775DCb9\",\n    \"uniSwapV2RouterAddress\": \"0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D\",\n    \"uniSwapV2FactoryAddress\": \"0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f\",\n    \"quickScopeAddress\": \"0x99b0c942f12b85df3f5e2a5b0af2c437da31cb85\",\n    \"quickScopeAddressRopsten\": \"0xf67e59E377d070841C5057b67Cfe27F5d341905b\",\n    \"ipfsHost\": \"https://ipfs.infura.io:5001/api/v0/\",\n    \"ipfsUrlTemplates\": [\"ipfs://ipfs/\", \"ipfs://\"],\n    \"ipfsUrlChanger\": \"https://gateway.ipfs.io/ipfs/\",\n    \"deploySearchStart\": 9779603,\n    \"deploySearchStartRopsten\": 7465062,\n    \"blockSearchSection\": 9000000,\n    \"transactionConfirmations\": 0,\n    \"transactionConfirmationsTimeoutMillis\": 7000,\n    \"indexesURL\": \"https://raw.githubusercontent.com/b-u-i-d-l/bazar-tokens-list/master/dist/indexes.json\",\n    \"decentralizedFlexibleOrganizationsURL\": \"https://raw.githubusercontent.com/b-u-i-d-l/bazar-tokens-list/master/dist/decentralizedFlexibleOrganizations.json\",\n    \"decentralizedFlexibleOrganizationsURLRopsten\": \"https://raw.githubusercontent.com/b-u-i-d-l/bazar-tokens-list/master/dist/programmableEquities.json\",\n    \"uniswapTokensURL\": \"https://raw.githubusercontent.com/b-u-i-d-l/bazar-tokens-list/master/dist/uniswapTokens.json\",\n    \"itemsListURL\": \"https://raw.githubusercontent.com/b-u-i-d-l/WIMD-uniswap/master/wimdlist.json\",\n    \"ethItemOrchestratorAddress\" : \"0x86Ab19d36c38aa81f092eAb4b1a8a4B553612465\",\n    \"uniswapV2RouterAddress\" : \"0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D\",\n    \"uniswapV2FactoryAddress\" : \"0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f\",\n    \"wethTokenAddress\" : \"0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2\",\n    \"buidlTokenAddress\" : \"0x7b123f53421b1bf8533339bfbdc7c98aa94163db\",\n    \"usdcTokenAddress\" : \"0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48\",\n    \"usdtTokenAddress\" : \"0xdAC17F958D2ee523a2206206994597C13D831ec7\",\n    \"daiTokenAddress\" : \"0x6b175474e89094c44da98b954eedeac495271d0f\",\n    \"dfoHubProxyAddress\" : \"0xbD8115939fbFB0FD4104B86aFAa594BC92916952\",\n    \"dfoVotingTokenAddress\": \"0xb221Ea7b5308896E3ac561F3f6a700484c45E88C\",\n    \"dfoProxyAddress\": \"0xeFAa6370A2ebdC47B12DBfB5a07F91A3182B5684\",\n    \"uniswapAmmAddress\": \"0x2c56AD11c59A92F467966064121066913b2c1522\",\n    \"WUSDAddress\": \"0xc1091350291e228518beae7b775d05c353789c9e\",\n    \"x2USDAddress\": \"0x3A4B47b208D39a4C9ea58277380861339D286BE2\",\n    \"x5USDAddress\": \"0x3984c69b8dc08e713E21d1c0733640Bb73822D04\",\n    \"x2USDNoteControllerAddress\": \"0x171d014f579c821cff60e4281f2b7b2718711440\",\n    \"x5USDNoteControllerAddress\": \"0x86250642ca9e8f7fc9f503bc1d96ed4a024620bb\",\n    \"ammAggregatorAddress\": \"0x81391d117a03A6368005e447197739D06550D4CD\",\n    \"liquidityMiningFactoryAddress\": \"0x9df4e915D093f03169270857CF9a0A5d1ef26388\",\n    \"WUSDExtensionControllerAddress\": \"0xFcdbd3068C386487C271029340BF3D433cc7F3da\",\n    \"uniswapV2PairABI\": [{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0In\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1In\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0Out\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1Out\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"Swap\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint112\",\"name\":\"reserve0\",\"type\":\"uint112\"},{\"indexed\":false,\"internalType\":\"uint112\",\"name\":\"reserve1\",\"type\":\"uint112\"}],\"name\":\"Sync\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"MINIMUM_LIQUIDITY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"PERMIT_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getReserves\",\"outputs\":[{\"internalType\":\"uint112\",\"name\":\"_reserve0\",\"type\":\"uint112\"},{\"internalType\":\"uint112\",\"name\":\"_reserve1\",\"type\":\"uint112\"},{\"internalType\":\"uint32\",\"name\":\"_blockTimestampLast\",\"type\":\"uint32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_token1\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"kLast\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"price0CumulativeLast\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"price1CumulativeLast\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"skim\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0Out\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1Out\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"swap\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"sync\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"token0\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"token1\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\n    \"AMMAggregatorABI\": [{\"inputs\":[{\"internalType\":\"address\",\"name\":\"dFODoubleProxy\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"ammsToAdd\",\"type\":\"address[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"amm\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"version\",\"type\":\"uint256\"}],\"name\":\"AMM\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"NewLiquidityPoolAddress\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"ammsToAdd\",\"type\":\"address[]\"}],\"name\":\"add\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"liquidityPoolAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"amountIsLiquidityPool\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"involvingETH\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"internalType\":\"struct LiquidityPoolData\",\"name\":\"data\",\"type\":\"tuple\"}],\"name\":\"addLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"liquidityPoolAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"amountIsLiquidityPool\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"involvingETH\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"internalType\":\"struct LiquidityPoolData[]\",\"name\":\"data\",\"type\":\"tuple[]\"}],\"name\":\"addLiquidityBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[][]\",\"name\":\"\",\"type\":\"uint256[][]\"},{\"internalType\":\"address[][]\",\"name\":\"\",\"type\":\"address[][]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"amms\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"returnData\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"liquidityPoolAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"liquidityPoolAddress\",\"type\":\"address\"}],\"name\":\"byLiquidityPool\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"liquidityPoolAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"tokensAmounts\",\"type\":\"uint256[]\"},{\"internalType\":\"address[]\",\"name\":\"tokensAddresses\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"liquidityPoolAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidityPoolAmount\",\"type\":\"uint256\"}],\"name\":\"byLiquidityPoolAmount\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"liquidityPoolAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"numerator\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"denominator\",\"type\":\"uint256\"}],\"name\":\"byPercentage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"liquidityPoolAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenAmount\",\"type\":\"uint256\"}],\"name\":\"byTokenAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"liquidityPoolTokens\",\"type\":\"address[]\"}],\"name\":\"byTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"tokenAddresses\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bool\",\"name\":\"involvingETH\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"createLiquidityPoolAndAddLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"data\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"liquidityPoolAddress\",\"type\":\"address\"}],\"name\":\"data\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"ethereumAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"maxTokensPerLiquidityPool\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"hasUniqueLiquidityPools\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"amm\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"doubleProxy\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"liquidityPoolAddress\",\"type\":\"address\"}],\"name\":\"findByLiquidityPool\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"amm\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenAmount\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"liquidityPoolAddresses\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"}],\"name\":\"getSwapOutput\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"liquidityPoolAddress\",\"type\":\"address\"}],\"name\":\"info\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"version\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"amm\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"info\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"remove\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"liquidityPoolAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"amountIsLiquidityPool\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"involvingETH\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"internalType\":\"struct LiquidityPoolData\",\"name\":\"data\",\"type\":\"tuple\"}],\"name\":\"removeLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"liquidityPoolAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"amountIsLiquidityPool\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"involvingETH\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"internalType\":\"struct LiquidityPoolData[]\",\"name\":\"data\",\"type\":\"tuple[]\"}],\"name\":\"removeLiquidityBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[][]\",\"name\":\"\",\"type\":\"uint256[][]\"},{\"internalType\":\"address[][]\",\"name\":\"\",\"type\":\"address[][]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newDoubleProxy\",\"type\":\"address\"}],\"name\":\"setDoubleProxy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"enterInETH\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"exitInETH\",\"type\":\"bool\"},{\"internalType\":\"address[]\",\"name\":\"liquidityPoolAddresses\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"inputToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"internalType\":\"struct SwapData\",\"name\":\"data\",\"type\":\"tuple\"}],\"name\":\"swapLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"enterInETH\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"exitInETH\",\"type\":\"bool\"},{\"internalType\":\"address[]\",\"name\":\"liquidityPoolAddresses\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"inputToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"internalType\":\"struct SwapData[]\",\"name\":\"data\",\"type\":\"tuple[]\"}],\"name\":\"swapLiquidityBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"}],\n    \"IAMMAggregatorABI\": [{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"amm\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"version\",\"type\":\"uint256\"}],\"name\":\"AMM\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"NewLiquidityPoolAddress\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"name\":\"add\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"liquidityPoolAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"amountIsLiquidityPool\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"involvingETH\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"internalType\":\"struct LiquidityPoolData\",\"name\":\"data\",\"type\":\"tuple\"}],\"name\":\"addLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"liquidityPoolAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"amountIsLiquidityPool\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"involvingETH\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"internalType\":\"struct LiquidityPoolData[]\",\"name\":\"data\",\"type\":\"tuple[]\"}],\"name\":\"addLiquidityBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[][]\",\"name\":\"\",\"type\":\"uint256[][]\"},{\"internalType\":\"address[][]\",\"name\":\"\",\"type\":\"address[][]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"amms\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"liquidityPoolAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"liquidityPoolAddress\",\"type\":\"address\"}],\"name\":\"byLiquidityPool\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"liquidityPoolAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidityPoolAmount\",\"type\":\"uint256\"}],\"name\":\"byLiquidityPoolAmount\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"liquidityPoolAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"numerator\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"denominator\",\"type\":\"uint256\"}],\"name\":\"byPercentage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"liquidityPoolAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenAmount\",\"type\":\"uint256\"}],\"name\":\"byTokenAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"liquidityPoolTokens\",\"type\":\"address[]\"}],\"name\":\"byTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"tokenAddresses\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bool\",\"name\":\"involvingETH\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"createLiquidityPoolAndAddLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"data\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"ethereumAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"maxTokensPerLiquidityPool\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"hasUniqueLiquidityPools\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"liquidityPoolAddress\",\"type\":\"address\"}],\"name\":\"data\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"ethereumAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"maxTokensPerLiquidityPool\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"hasUniqueLiquidityPools\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"amm\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"doubleProxy\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"liquidityPoolAddress\",\"type\":\"address\"}],\"name\":\"findByLiquidityPool\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenAmount\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"}],\"name\":\"getSwapOutput\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"liquidityPoolAddress\",\"type\":\"address\"}],\"name\":\"info\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"version\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"amm\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"info\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"version\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"remove\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"liquidityPoolAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"amountIsLiquidityPool\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"involvingETH\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"internalType\":\"struct LiquidityPoolData\",\"name\":\"data\",\"type\":\"tuple\"}],\"name\":\"removeLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"liquidityPoolAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"amountIsLiquidityPool\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"involvingETH\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"internalType\":\"struct LiquidityPoolData[]\",\"name\":\"data\",\"type\":\"tuple[]\"}],\"name\":\"removeLiquidityBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[][]\",\"name\":\"\",\"type\":\"uint256[][]\"},{\"internalType\":\"address[][]\",\"name\":\"\",\"type\":\"address[][]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newDoubleProxy\",\"type\":\"address\"}],\"name\":\"setDoubleProxy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"enterInETH\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"exitInETH\",\"type\":\"bool\"},{\"internalType\":\"address[]\",\"name\":\"liquidityPoolAddresses\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"inputToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"internalType\":\"struct SwapData\",\"name\":\"data\",\"type\":\"tuple\"}],\"name\":\"swapLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"enterInETH\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"exitInETH\",\"type\":\"bool\"},{\"internalType\":\"address[]\",\"name\":\"liquidityPoolAddresses\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"inputToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"internalType\":\"struct SwapData[]\",\"name\":\"data\",\"type\":\"tuple[]\"}],\"name\":\"swapLiquidityBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"}],\n    \"AMMABI\": [{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"NewLiquidityPoolAddress\",\"type\":\"event\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"liquidityPoolAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"amountIsLiquidityPool\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"involvingETH\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"internalType\":\"struct LiquidityPoolData\",\"name\":\"data\",\"type\":\"tuple\"}],\"name\":\"addLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"liquidityPoolAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"tokensAmounts\",\"type\":\"uint256[]\"},{\"internalType\":\"address[]\",\"name\":\"liquidityPoolTokens\",\"type\":\"address[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"liquidityPoolAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"amountIsLiquidityPool\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"involvingETH\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"internalType\":\"struct LiquidityPoolData[]\",\"name\":\"data\",\"type\":\"tuple[]\"}],\"name\":\"addLiquidityBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"liquidityPoolAmounts\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[][]\",\"name\":\"tokensAmounts\",\"type\":\"uint256[][]\"},{\"internalType\":\"address[][]\",\"name\":\"liquidityPoolTokens\",\"type\":\"address[][]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"liquidityPoolAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"liquidityPoolAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"tokensAmounts\",\"type\":\"uint256[]\"},{\"internalType\":\"address[]\",\"name\":\"liquidityPoolTokens\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"liquidityPoolAddress\",\"type\":\"address\"}],\"name\":\"byLiquidityPool\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"liquidityPoolAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidityPoolAmount\",\"type\":\"uint256\"}],\"name\":\"byLiquidityPoolAmount\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"tokensAmounts\",\"type\":\"uint256[]\"},{\"internalType\":\"address[]\",\"name\":\"liquidityPoolTokens\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"liquidityPoolAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"numerator\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"denominator\",\"type\":\"uint256\"}],\"name\":\"byPercentage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"liquidityPoolAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"tokensAmounts\",\"type\":\"uint256[]\"},{\"internalType\":\"address[]\",\"name\":\"liquidityPoolTokens\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"liquidityPoolAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenAmount\",\"type\":\"uint256\"}],\"name\":\"byTokenAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"liquidityPoolAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"tokensAmounts\",\"type\":\"uint256[]\"},{\"internalType\":\"address[]\",\"name\":\"liquidityPoolTokens\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"liquidityPoolTokens\",\"type\":\"address[]\"}],\"name\":\"byTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"tokenAddresses\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bool\",\"name\":\"involvingETH\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"createLiquidityPoolAndAddLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"liquidityPoolAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"tokensAmounts\",\"type\":\"uint256[]\"},{\"internalType\":\"address\",\"name\":\"liquidityPoolAddress\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"orderedTokens\",\"type\":\"address[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"data\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenAmount\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"}],\"name\":\"getSwapOutput\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"info\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"liquidityPoolAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"amountIsLiquidityPool\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"involvingETH\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"internalType\":\"struct LiquidityPoolData\",\"name\":\"data\",\"type\":\"tuple\"}],\"name\":\"removeLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"liquidityPoolAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"tokensAmounts\",\"type\":\"uint256[]\"},{\"internalType\":\"address[]\",\"name\":\"liquidityPoolTokens\",\"type\":\"address[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"liquidityPoolAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"amountIsLiquidityPool\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"involvingETH\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"internalType\":\"struct LiquidityPoolData[]\",\"name\":\"data\",\"type\":\"tuple[]\"}],\"name\":\"removeLiquidityBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"liquidityPoolAmounts\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[][]\",\"name\":\"tokensAmounts\",\"type\":\"uint256[][]\"},{\"internalType\":\"address[][]\",\"name\":\"liquidityPoolTokens\",\"type\":\"address[][]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"enterInETH\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"exitInETH\",\"type\":\"bool\"},{\"internalType\":\"address[]\",\"name\":\"liquidityPoolAddresses\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"inputToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"internalType\":\"struct SwapData\",\"name\":\"data\",\"type\":\"tuple\"}],\"name\":\"swapLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"outputAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"enterInETH\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"exitInETH\",\"type\":\"bool\"},{\"internalType\":\"address[]\",\"name\":\"liquidityPoolAddresses\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"inputToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"internalType\":\"struct SwapData[]\",\"name\":\"data\",\"type\":\"tuple[]\"}],\"name\":\"swapLiquidityBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"outputAmounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\n    \"IAMMABI\": [{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"NewLiquidityPoolAddress\",\"type\":\"event\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"liquidityPoolAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"amountIsLiquidityPool\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"involvingETH\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"internalType\":\"struct LiquidityPoolData\",\"name\":\"data\",\"type\":\"tuple\"}],\"name\":\"addLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"liquidityPoolAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"amountIsLiquidityPool\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"involvingETH\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"internalType\":\"struct LiquidityPoolData[]\",\"name\":\"data\",\"type\":\"tuple[]\"}],\"name\":\"addLiquidityBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[][]\",\"name\":\"\",\"type\":\"uint256[][]\"},{\"internalType\":\"address[][]\",\"name\":\"\",\"type\":\"address[][]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"liquidityPoolAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"liquidityPoolAddress\",\"type\":\"address\"}],\"name\":\"byLiquidityPool\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"liquidityPoolAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidityPoolAmount\",\"type\":\"uint256\"}],\"name\":\"byLiquidityPoolAmount\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"liquidityPoolAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"numerator\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"denominator\",\"type\":\"uint256\"}],\"name\":\"byPercentage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"liquidityPoolAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenAmount\",\"type\":\"uint256\"}],\"name\":\"byTokenAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"liquidityPoolTokens\",\"type\":\"address[]\"}],\"name\":\"byTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"tokenAddresses\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bool\",\"name\":\"involvingETH\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"createLiquidityPoolAndAddLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"data\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"ethereumAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"maxTokensPerLiquidityPool\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"hasUniqueLiquidityPools\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenAmount\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"}],\"name\":\"getSwapOutput\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"info\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"version\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"liquidityPoolAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"amountIsLiquidityPool\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"involvingETH\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"internalType\":\"struct LiquidityPoolData\",\"name\":\"data\",\"type\":\"tuple\"}],\"name\":\"removeLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"liquidityPoolAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"amountIsLiquidityPool\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"involvingETH\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"internalType\":\"struct LiquidityPoolData[]\",\"name\":\"data\",\"type\":\"tuple[]\"}],\"name\":\"removeLiquidityBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[][]\",\"name\":\"\",\"type\":\"uint256[][]\"},{\"internalType\":\"address[][]\",\"name\":\"\",\"type\":\"address[][]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"enterInETH\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"exitInETH\",\"type\":\"bool\"},{\"internalType\":\"address[]\",\"name\":\"liquidityPoolAddresses\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"inputToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"internalType\":\"struct SwapData\",\"name\":\"data\",\"type\":\"tuple\"}],\"name\":\"swapLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"enterInETH\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"exitInETH\",\"type\":\"bool\"},{\"internalType\":\"address[]\",\"name\":\"liquidityPoolAddresses\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"inputToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"internalType\":\"struct SwapData[]\",\"name\":\"data\",\"type\":\"tuple[]\"}],\"name\":\"swapLiquidityBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"}],\n    \"BalancerAMMV1ABI\": [{\"inputs\":[{\"internalType\":\"address\",\"name\":\"wethAddressInput\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"NewLiquidityPoolAddress\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"BONE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"liquidityPoolAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"amountIsLiquidityPool\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"involvingETH\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"internalType\":\"struct LiquidityPoolData\",\"name\":\"data\",\"type\":\"tuple\"}],\"name\":\"addLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"liquidityPoolAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"tokensAmounts\",\"type\":\"uint256[]\"},{\"internalType\":\"address[]\",\"name\":\"liquidityPoolTokens\",\"type\":\"address[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"liquidityPoolAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"amountIsLiquidityPool\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"involvingETH\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"internalType\":\"struct LiquidityPoolData[]\",\"name\":\"data\",\"type\":\"tuple[]\"}],\"name\":\"addLiquidityBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"liquidityPoolAmounts\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[][]\",\"name\":\"tokensAmounts\",\"type\":\"uint256[][]\"},{\"internalType\":\"address[][]\",\"name\":\"liquidityPoolTokens\",\"type\":\"address[][]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"liquidityPoolAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"liquidityPoolAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"tokensAmounts\",\"type\":\"uint256[]\"},{\"internalType\":\"address[]\",\"name\":\"liquidityPoolTokens\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"liquidityPoolAddress\",\"type\":\"address\"}],\"name\":\"byLiquidityPool\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"liquidityPoolAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"tokensAmounts\",\"type\":\"uint256[]\"},{\"internalType\":\"address[]\",\"name\":\"tokenAddresses\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"liquidityPoolAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidityPoolAmount\",\"type\":\"uint256\"}],\"name\":\"byLiquidityPoolAmount\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"tokensAmounts\",\"type\":\"uint256[]\"},{\"internalType\":\"address[]\",\"name\":\"liquidityPoolTokens\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"liquidityPoolAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"numerator\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"denominator\",\"type\":\"uint256\"}],\"name\":\"byPercentage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"liquidityPoolAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"tokensAmounts\",\"type\":\"uint256[]\"},{\"internalType\":\"address[]\",\"name\":\"liquidityPoolTokens\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"liquidityPoolAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenAmount\",\"type\":\"uint256\"}],\"name\":\"byTokenAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"liquidityPoolAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"tokensAmounts\",\"type\":\"uint256[]\"},{\"internalType\":\"address[]\",\"name\":\"liquidityPoolTokens\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"name\":\"byTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"liquidityPoolAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"tokensAmounts\",\"type\":\"uint256[]\"},{\"internalType\":\"address\",\"name\":\"liquidityPoolAddress\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"orderedTokens\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"tokenAddresses\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bool\",\"name\":\"involvingETH\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"createLiquidityPoolAndAddLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"liquidityPoolAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"tokensAmounts\",\"type\":\"uint256[]\"},{\"internalType\":\"address\",\"name\":\"liquidityPoolAddress\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"orderedTokens\",\"type\":\"address[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"data\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenAmount\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"liquidityPoolAddresses\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"}],\"name\":\"getSwapOutput\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"realAmounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"info\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"liquidityPoolAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"amountIsLiquidityPool\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"involvingETH\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"internalType\":\"struct LiquidityPoolData\",\"name\":\"data\",\"type\":\"tuple\"}],\"name\":\"removeLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"liquidityPoolAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"tokensAmounts\",\"type\":\"uint256[]\"},{\"internalType\":\"address[]\",\"name\":\"liquidityPoolTokens\",\"type\":\"address[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"liquidityPoolAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"amountIsLiquidityPool\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"involvingETH\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"internalType\":\"struct LiquidityPoolData[]\",\"name\":\"data\",\"type\":\"tuple[]\"}],\"name\":\"removeLiquidityBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"liquidityPoolAmounts\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[][]\",\"name\":\"tokensAmounts\",\"type\":\"uint256[][]\"},{\"internalType\":\"address[][]\",\"name\":\"liquidityPoolTokens\",\"type\":\"address[][]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"enterInETH\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"exitInETH\",\"type\":\"bool\"},{\"internalType\":\"address[]\",\"name\":\"liquidityPoolAddresses\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"inputToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"internalType\":\"struct SwapData\",\"name\":\"data\",\"type\":\"tuple\"}],\"name\":\"swapLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"outputAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"enterInETH\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"exitInETH\",\"type\":\"bool\"},{\"internalType\":\"address[]\",\"name\":\"liquidityPoolAddresses\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"inputToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"internalType\":\"struct SwapData[]\",\"name\":\"data\",\"type\":\"tuple[]\"}],\"name\":\"swapLiquidityBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"outputAmounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\n    \"IBalancerAMMV1ABI\": [{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"NewLiquidityPoolAddress\",\"type\":\"event\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"liquidityPoolAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"amountIsLiquidityPool\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"involvingETH\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"internalType\":\"struct LiquidityPoolData\",\"name\":\"data\",\"type\":\"tuple\"}],\"name\":\"addLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"liquidityPoolAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"amountIsLiquidityPool\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"involvingETH\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"internalType\":\"struct LiquidityPoolData[]\",\"name\":\"data\",\"type\":\"tuple[]\"}],\"name\":\"addLiquidityBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[][]\",\"name\":\"\",\"type\":\"uint256[][]\"},{\"internalType\":\"address[][]\",\"name\":\"\",\"type\":\"address[][]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"liquidityPoolAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"liquidityPoolAddress\",\"type\":\"address\"}],\"name\":\"byLiquidityPool\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"liquidityPoolAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidityPoolAmount\",\"type\":\"uint256\"}],\"name\":\"byLiquidityPoolAmount\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"liquidityPoolAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"numerator\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"denominator\",\"type\":\"uint256\"}],\"name\":\"byPercentage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"liquidityPoolAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenAmount\",\"type\":\"uint256\"}],\"name\":\"byTokenAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"liquidityPoolTokens\",\"type\":\"address[]\"}],\"name\":\"byTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"tokenAddresses\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bool\",\"name\":\"involvingETH\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"createLiquidityPoolAndAddLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"data\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"ethereumAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"maxTokensPerLiquidityPool\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"hasUniqueLiquidityPools\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenAmount\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"}],\"name\":\"getSwapOutput\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"info\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"version\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"liquidityPoolAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"amountIsLiquidityPool\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"involvingETH\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"internalType\":\"struct LiquidityPoolData\",\"name\":\"data\",\"type\":\"tuple\"}],\"name\":\"removeLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"liquidityPoolAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"amountIsLiquidityPool\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"involvingETH\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"internalType\":\"struct LiquidityPoolData[]\",\"name\":\"data\",\"type\":\"tuple[]\"}],\"name\":\"removeLiquidityBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[][]\",\"name\":\"\",\"type\":\"uint256[][]\"},{\"internalType\":\"address[][]\",\"name\":\"\",\"type\":\"address[][]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"enterInETH\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"exitInETH\",\"type\":\"bool\"},{\"internalType\":\"address[]\",\"name\":\"liquidityPoolAddresses\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"inputToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"internalType\":\"struct SwapData\",\"name\":\"data\",\"type\":\"tuple\"}],\"name\":\"swapLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"enterInETH\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"exitInETH\",\"type\":\"bool\"},{\"internalType\":\"address[]\",\"name\":\"liquidityPoolAddresses\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"inputToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"internalType\":\"struct SwapData[]\",\"name\":\"data\",\"type\":\"tuple[]\"}],\"name\":\"swapLiquidityBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"}],\n    \"IMooniswapAMMV1ABI\": [{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"NewLiquidityPoolAddress\",\"type\":\"event\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"liquidityPoolAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"amountIsLiquidityPool\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"involvingETH\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"internalType\":\"struct LiquidityPoolData\",\"name\":\"data\",\"type\":\"tuple\"}],\"name\":\"addLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"liquidityPoolAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"amountIsLiquidityPool\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"involvingETH\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"internalType\":\"struct LiquidityPoolData[]\",\"name\":\"data\",\"type\":\"tuple[]\"}],\"name\":\"addLiquidityBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[][]\",\"name\":\"\",\"type\":\"uint256[][]\"},{\"internalType\":\"address[][]\",\"name\":\"\",\"type\":\"address[][]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"liquidityPoolAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"liquidityPoolAddress\",\"type\":\"address\"}],\"name\":\"byLiquidityPool\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"liquidityPoolAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidityPoolAmount\",\"type\":\"uint256\"}],\"name\":\"byLiquidityPoolAmount\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"liquidityPoolAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"numerator\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"denominator\",\"type\":\"uint256\"}],\"name\":\"byPercentage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"liquidityPoolAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenAmount\",\"type\":\"uint256\"}],\"name\":\"byTokenAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"liquidityPoolTokens\",\"type\":\"address[]\"}],\"name\":\"byTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"tokenAddresses\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bool\",\"name\":\"involvingETH\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"createLiquidityPoolAndAddLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"data\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"ethereumAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"maxTokensPerLiquidityPool\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"hasUniqueLiquidityPools\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenAmount\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"}],\"name\":\"getSwapOutput\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"info\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"version\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"liquidityPoolAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"amountIsLiquidityPool\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"involvingETH\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"internalType\":\"struct LiquidityPoolData\",\"name\":\"data\",\"type\":\"tuple\"}],\"name\":\"removeLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"liquidityPoolAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"amountIsLiquidityPool\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"involvingETH\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"internalType\":\"struct LiquidityPoolData[]\",\"name\":\"data\",\"type\":\"tuple[]\"}],\"name\":\"removeLiquidityBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[][]\",\"name\":\"\",\"type\":\"uint256[][]\"},{\"internalType\":\"address[][]\",\"name\":\"\",\"type\":\"address[][]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"enterInETH\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"exitInETH\",\"type\":\"bool\"},{\"internalType\":\"address[]\",\"name\":\"liquidityPoolAddresses\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"inputToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"internalType\":\"struct SwapData\",\"name\":\"data\",\"type\":\"tuple\"}],\"name\":\"swapLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"enterInETH\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"exitInETH\",\"type\":\"bool\"},{\"internalType\":\"address[]\",\"name\":\"liquidityPoolAddresses\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"inputToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"internalType\":\"struct SwapData[]\",\"name\":\"data\",\"type\":\"tuple[]\"}],\"name\":\"swapLiquidityBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"}],\n    \"MooniswapAMMV1ABI\": [{\"inputs\":[{\"internalType\":\"address\",\"name\":\"factoryAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"NewLiquidityPoolAddress\",\"type\":\"event\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"liquidityPoolAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"amountIsLiquidityPool\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"involvingETH\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"internalType\":\"struct LiquidityPoolData\",\"name\":\"data\",\"type\":\"tuple\"}],\"name\":\"addLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"liquidityPoolAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"tokensAmounts\",\"type\":\"uint256[]\"},{\"internalType\":\"address[]\",\"name\":\"liquidityPoolTokens\",\"type\":\"address[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"liquidityPoolAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"amountIsLiquidityPool\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"involvingETH\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"internalType\":\"struct LiquidityPoolData[]\",\"name\":\"data\",\"type\":\"tuple[]\"}],\"name\":\"addLiquidityBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"liquidityPoolAmounts\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[][]\",\"name\":\"tokensAmounts\",\"type\":\"uint256[][]\"},{\"internalType\":\"address[][]\",\"name\":\"liquidityPoolTokens\",\"type\":\"address[][]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"liquidityPoolAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"liquidityPoolAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"tokensAmounts\",\"type\":\"uint256[]\"},{\"internalType\":\"address[]\",\"name\":\"liquidityPoolTokens\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"liquidityPoolAddress\",\"type\":\"address\"}],\"name\":\"byLiquidityPool\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"liquidityPoolAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"tokensAmounts\",\"type\":\"uint256[]\"},{\"internalType\":\"address[]\",\"name\":\"tokenAddresses\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"liquidityPoolAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidityPoolAmount\",\"type\":\"uint256\"}],\"name\":\"byLiquidityPoolAmount\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"tokensAmounts\",\"type\":\"uint256[]\"},{\"internalType\":\"address[]\",\"name\":\"liquidityPoolTokens\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"liquidityPoolAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"numerator\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"denominator\",\"type\":\"uint256\"}],\"name\":\"byPercentage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"liquidityPoolAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"tokensAmounts\",\"type\":\"uint256[]\"},{\"internalType\":\"address[]\",\"name\":\"liquidityPoolTokens\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"liquidityPoolAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenAmount\",\"type\":\"uint256\"}],\"name\":\"byTokenAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"liquidityPoolAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"tokensAmounts\",\"type\":\"uint256[]\"},{\"internalType\":\"address[]\",\"name\":\"liquidityPoolTokens\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"tokens\",\"type\":\"address[]\"}],\"name\":\"byTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"liquidityPoolAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"tokensAmounts\",\"type\":\"uint256[]\"},{\"internalType\":\"address\",\"name\":\"liquidityPoolAddress\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"orderedTokens\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"tokenAddresses\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bool\",\"name\":\"involvingETH\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"createLiquidityPoolAndAddLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"liquidityPoolAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"tokensAmounts\",\"type\":\"uint256[]\"},{\"internalType\":\"address\",\"name\":\"liquidityPoolAddress\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"orderedTokens\",\"type\":\"address[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"data\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenAmount\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"liquidityPoolAddresses\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"}],\"name\":\"getSwapOutput\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"realAmounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"info\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"liquidityPoolAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"amountIsLiquidityPool\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"involvingETH\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"internalType\":\"struct LiquidityPoolData\",\"name\":\"data\",\"type\":\"tuple\"}],\"name\":\"removeLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"liquidityPoolAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"tokensAmounts\",\"type\":\"uint256[]\"},{\"internalType\":\"address[]\",\"name\":\"liquidityPoolTokens\",\"type\":\"address[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"liquidityPoolAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"amountIsLiquidityPool\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"involvingETH\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"internalType\":\"struct LiquidityPoolData[]\",\"name\":\"data\",\"type\":\"tuple[]\"}],\"name\":\"removeLiquidityBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"liquidityPoolAmounts\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[][]\",\"name\":\"tokensAmounts\",\"type\":\"uint256[][]\"},{\"internalType\":\"address[][]\",\"name\":\"liquidityPoolTokens\",\"type\":\"address[][]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"enterInETH\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"exitInETH\",\"type\":\"bool\"},{\"internalType\":\"address[]\",\"name\":\"liquidityPoolAddresses\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"inputToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"internalType\":\"struct SwapData\",\"name\":\"data\",\"type\":\"tuple\"}],\"name\":\"swapLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"outputAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"enterInETH\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"exitInETH\",\"type\":\"bool\"},{\"internalType\":\"address[]\",\"name\":\"liquidityPoolAddresses\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"inputToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"internalType\":\"struct SwapData[]\",\"name\":\"data\",\"type\":\"tuple[]\"}],\"name\":\"swapLiquidityBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"outputAmounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\n    \"ISushiSwapAMMV1ABI\": [{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"NewLiquidityPoolAddress\",\"type\":\"event\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"liquidityPoolAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"amountIsLiquidityPool\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"involvingETH\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"internalType\":\"struct LiquidityPoolData\",\"name\":\"data\",\"type\":\"tuple\"}],\"name\":\"addLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"liquidityPoolAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"amountIsLiquidityPool\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"involvingETH\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"internalType\":\"struct LiquidityPoolData[]\",\"name\":\"data\",\"type\":\"tuple[]\"}],\"name\":\"addLiquidityBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[][]\",\"name\":\"\",\"type\":\"uint256[][]\"},{\"internalType\":\"address[][]\",\"name\":\"\",\"type\":\"address[][]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"liquidityPoolAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"liquidityPoolAddress\",\"type\":\"address\"}],\"name\":\"byLiquidityPool\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"liquidityPoolAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidityPoolAmount\",\"type\":\"uint256\"}],\"name\":\"byLiquidityPoolAmount\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"liquidityPoolAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"numerator\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"denominator\",\"type\":\"uint256\"}],\"name\":\"byPercentage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"liquidityPoolAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenAmount\",\"type\":\"uint256\"}],\"name\":\"byTokenAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"liquidityPoolTokens\",\"type\":\"address[]\"}],\"name\":\"byTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"tokenAddresses\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bool\",\"name\":\"involvingETH\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"createLiquidityPoolAndAddLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"data\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"ethereumAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"maxTokensPerLiquidityPool\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"hasUniqueLiquidityPools\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenAmount\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"}],\"name\":\"getSwapOutput\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"info\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"version\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"liquidityPoolAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"amountIsLiquidityPool\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"involvingETH\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"internalType\":\"struct LiquidityPoolData\",\"name\":\"data\",\"type\":\"tuple\"}],\"name\":\"removeLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"liquidityPoolAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"amountIsLiquidityPool\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"involvingETH\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"internalType\":\"struct LiquidityPoolData[]\",\"name\":\"data\",\"type\":\"tuple[]\"}],\"name\":\"removeLiquidityBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[][]\",\"name\":\"\",\"type\":\"uint256[][]\"},{\"internalType\":\"address[][]\",\"name\":\"\",\"type\":\"address[][]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sushiSwapData\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"routerAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"wethAddress\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"enterInETH\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"exitInETH\",\"type\":\"bool\"},{\"internalType\":\"address[]\",\"name\":\"liquidityPoolAddresses\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"inputToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"internalType\":\"struct SwapData\",\"name\":\"data\",\"type\":\"tuple\"}],\"name\":\"swapLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"enterInETH\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"exitInETH\",\"type\":\"bool\"},{\"internalType\":\"address[]\",\"name\":\"liquidityPoolAddresses\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"inputToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"internalType\":\"struct SwapData[]\",\"name\":\"data\",\"type\":\"tuple[]\"}],\"name\":\"swapLiquidityBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"}],\n    \"SushiSwapAMMV1ABI\": [{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sushiSwapV2RouterAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"NewLiquidityPoolAddress\",\"type\":\"event\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"liquidityPoolAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"amountIsLiquidityPool\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"involvingETH\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"internalType\":\"struct LiquidityPoolData\",\"name\":\"data\",\"type\":\"tuple\"}],\"name\":\"addLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"liquidityPoolAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"tokensAmounts\",\"type\":\"uint256[]\"},{\"internalType\":\"address[]\",\"name\":\"liquidityPoolTokens\",\"type\":\"address[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"liquidityPoolAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"amountIsLiquidityPool\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"involvingETH\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"internalType\":\"struct LiquidityPoolData[]\",\"name\":\"data\",\"type\":\"tuple[]\"}],\"name\":\"addLiquidityBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"liquidityPoolAmounts\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[][]\",\"name\":\"tokensAmounts\",\"type\":\"uint256[][]\"},{\"internalType\":\"address[][]\",\"name\":\"liquidityPoolTokens\",\"type\":\"address[][]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"liquidityPoolAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"liquidityPoolAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"tokensAmounts\",\"type\":\"uint256[]\"},{\"internalType\":\"address[]\",\"name\":\"liquidityPoolTokens\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"liquidityPoolAddress\",\"type\":\"address\"}],\"name\":\"byLiquidityPool\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"liquidityPoolAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"tokensAmounts\",\"type\":\"uint256[]\"},{\"internalType\":\"address[]\",\"name\":\"tokenAddresses\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"liquidityPoolAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidityPoolAmount\",\"type\":\"uint256\"}],\"name\":\"byLiquidityPoolAmount\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"tokensAmounts\",\"type\":\"uint256[]\"},{\"internalType\":\"address[]\",\"name\":\"liquidityPoolTokens\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"liquidityPoolAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"numerator\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"denominator\",\"type\":\"uint256\"}],\"name\":\"byPercentage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"liquidityPoolAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"tokensAmounts\",\"type\":\"uint256[]\"},{\"internalType\":\"address[]\",\"name\":\"liquidityPoolTokens\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"liquidityPoolAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenAmount\",\"type\":\"uint256\"}],\"name\":\"byTokenAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"liquidityPoolAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"tokensAmounts\",\"type\":\"uint256[]\"},{\"internalType\":\"address[]\",\"name\":\"liquidityPoolTokens\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"tokenAddresses\",\"type\":\"address[]\"}],\"name\":\"byTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"liquidityPoolAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"tokensAmounts\",\"type\":\"uint256[]\"},{\"internalType\":\"address\",\"name\":\"liquidityPoolAddress\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"orderedTokens\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"tokenAddresses\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bool\",\"name\":\"involvingETH\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"createLiquidityPoolAndAddLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"liquidityPoolAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"tokensAmounts\",\"type\":\"uint256[]\"},{\"internalType\":\"address\",\"name\":\"liquidityPoolAddress\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"orderedTokens\",\"type\":\"address[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"data\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenAmount\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"}],\"name\":\"getSwapOutput\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"info\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"liquidityPoolAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"amountIsLiquidityPool\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"involvingETH\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"internalType\":\"struct LiquidityPoolData\",\"name\":\"data\",\"type\":\"tuple\"}],\"name\":\"removeLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"liquidityPoolAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"tokensAmounts\",\"type\":\"uint256[]\"},{\"internalType\":\"address[]\",\"name\":\"liquidityPoolTokens\",\"type\":\"address[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"liquidityPoolAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"amountIsLiquidityPool\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"involvingETH\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"internalType\":\"struct LiquidityPoolData[]\",\"name\":\"data\",\"type\":\"tuple[]\"}],\"name\":\"removeLiquidityBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"liquidityPoolAmounts\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[][]\",\"name\":\"tokensAmounts\",\"type\":\"uint256[][]\"},{\"internalType\":\"address[][]\",\"name\":\"liquidityPoolTokens\",\"type\":\"address[][]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sushiSwapData\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"routerAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"wethAddress\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"enterInETH\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"exitInETH\",\"type\":\"bool\"},{\"internalType\":\"address[]\",\"name\":\"liquidityPoolAddresses\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"inputToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"internalType\":\"struct SwapData\",\"name\":\"data\",\"type\":\"tuple\"}],\"name\":\"swapLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"outputAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"enterInETH\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"exitInETH\",\"type\":\"bool\"},{\"internalType\":\"address[]\",\"name\":\"liquidityPoolAddresses\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"inputToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"internalType\":\"struct SwapData[]\",\"name\":\"data\",\"type\":\"tuple[]\"}],\"name\":\"swapLiquidityBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"outputAmounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\n    \"IUniswapV2AMMV1ABI\": [{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"NewLiquidityPoolAddress\",\"type\":\"event\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"liquidityPoolAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"amountIsLiquidityPool\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"involvingETH\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"internalType\":\"struct LiquidityPoolData\",\"name\":\"data\",\"type\":\"tuple\"}],\"name\":\"addLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"liquidityPoolAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"amountIsLiquidityPool\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"involvingETH\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"internalType\":\"struct LiquidityPoolData[]\",\"name\":\"data\",\"type\":\"tuple[]\"}],\"name\":\"addLiquidityBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[][]\",\"name\":\"\",\"type\":\"uint256[][]\"},{\"internalType\":\"address[][]\",\"name\":\"\",\"type\":\"address[][]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"liquidityPoolAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"liquidityPoolAddress\",\"type\":\"address\"}],\"name\":\"byLiquidityPool\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"liquidityPoolAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidityPoolAmount\",\"type\":\"uint256\"}],\"name\":\"byLiquidityPoolAmount\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"liquidityPoolAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"numerator\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"denominator\",\"type\":\"uint256\"}],\"name\":\"byPercentage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"liquidityPoolAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenAmount\",\"type\":\"uint256\"}],\"name\":\"byTokenAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"liquidityPoolTokens\",\"type\":\"address[]\"}],\"name\":\"byTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"tokenAddresses\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bool\",\"name\":\"involvingETH\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"createLiquidityPoolAndAddLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"data\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"ethereumAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"maxTokensPerLiquidityPool\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"hasUniqueLiquidityPools\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenAmount\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"}],\"name\":\"getSwapOutput\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"info\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"version\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"liquidityPoolAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"amountIsLiquidityPool\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"involvingETH\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"internalType\":\"struct LiquidityPoolData\",\"name\":\"data\",\"type\":\"tuple\"}],\"name\":\"removeLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"liquidityPoolAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"amountIsLiquidityPool\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"involvingETH\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"internalType\":\"struct LiquidityPoolData[]\",\"name\":\"data\",\"type\":\"tuple[]\"}],\"name\":\"removeLiquidityBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[][]\",\"name\":\"\",\"type\":\"uint256[][]\"},{\"internalType\":\"address[][]\",\"name\":\"\",\"type\":\"address[][]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"enterInETH\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"exitInETH\",\"type\":\"bool\"},{\"internalType\":\"address[]\",\"name\":\"liquidityPoolAddresses\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"inputToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"internalType\":\"struct SwapData\",\"name\":\"data\",\"type\":\"tuple\"}],\"name\":\"swapLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"enterInETH\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"exitInETH\",\"type\":\"bool\"},{\"internalType\":\"address[]\",\"name\":\"liquidityPoolAddresses\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"inputToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"internalType\":\"struct SwapData[]\",\"name\":\"data\",\"type\":\"tuple[]\"}],\"name\":\"swapLiquidityBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"uniswapData\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"routerAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"wethAddress\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\n    \"UniswapV2AMMV1ABI\": [{\"inputs\":[{\"internalType\":\"address\",\"name\":\"uniswapV2RouterAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"NewLiquidityPoolAddress\",\"type\":\"event\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"liquidityPoolAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"amountIsLiquidityPool\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"involvingETH\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"internalType\":\"struct LiquidityPoolData\",\"name\":\"data\",\"type\":\"tuple\"}],\"name\":\"addLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"liquidityPoolAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"tokensAmounts\",\"type\":\"uint256[]\"},{\"internalType\":\"address[]\",\"name\":\"liquidityPoolTokens\",\"type\":\"address[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"liquidityPoolAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"amountIsLiquidityPool\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"involvingETH\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"internalType\":\"struct LiquidityPoolData[]\",\"name\":\"data\",\"type\":\"tuple[]\"}],\"name\":\"addLiquidityBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"liquidityPoolAmounts\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[][]\",\"name\":\"tokensAmounts\",\"type\":\"uint256[][]\"},{\"internalType\":\"address[][]\",\"name\":\"liquidityPoolTokens\",\"type\":\"address[][]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"liquidityPoolAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"liquidityPoolAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"tokensAmounts\",\"type\":\"uint256[]\"},{\"internalType\":\"address[]\",\"name\":\"liquidityPoolTokens\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"liquidityPoolAddress\",\"type\":\"address\"}],\"name\":\"byLiquidityPool\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"liquidityPoolAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"tokensAmounts\",\"type\":\"uint256[]\"},{\"internalType\":\"address[]\",\"name\":\"tokenAddresses\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"liquidityPoolAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidityPoolAmount\",\"type\":\"uint256\"}],\"name\":\"byLiquidityPoolAmount\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"tokensAmounts\",\"type\":\"uint256[]\"},{\"internalType\":\"address[]\",\"name\":\"liquidityPoolTokens\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"liquidityPoolAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"numerator\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"denominator\",\"type\":\"uint256\"}],\"name\":\"byPercentage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"liquidityPoolAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"tokensAmounts\",\"type\":\"uint256[]\"},{\"internalType\":\"address[]\",\"name\":\"liquidityPoolTokens\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"liquidityPoolAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenAmount\",\"type\":\"uint256\"}],\"name\":\"byTokenAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"liquidityPoolAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"tokensAmounts\",\"type\":\"uint256[]\"},{\"internalType\":\"address[]\",\"name\":\"liquidityPoolTokens\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"tokenAddresses\",\"type\":\"address[]\"}],\"name\":\"byTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"liquidityPoolAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"tokensAmounts\",\"type\":\"uint256[]\"},{\"internalType\":\"address\",\"name\":\"liquidityPoolAddress\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"orderedTokens\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"tokenAddresses\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bool\",\"name\":\"involvingETH\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"createLiquidityPoolAndAddLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"liquidityPoolAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"tokensAmounts\",\"type\":\"uint256[]\"},{\"internalType\":\"address\",\"name\":\"liquidityPoolAddress\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"orderedTokens\",\"type\":\"address[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"data\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenAmount\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"}],\"name\":\"getSwapOutput\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"info\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"liquidityPoolAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"amountIsLiquidityPool\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"involvingETH\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"internalType\":\"struct LiquidityPoolData\",\"name\":\"data\",\"type\":\"tuple\"}],\"name\":\"removeLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"liquidityPoolAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"tokensAmounts\",\"type\":\"uint256[]\"},{\"internalType\":\"address[]\",\"name\":\"liquidityPoolTokens\",\"type\":\"address[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"liquidityPoolAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"amountIsLiquidityPool\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"involvingETH\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"internalType\":\"struct LiquidityPoolData[]\",\"name\":\"data\",\"type\":\"tuple[]\"}],\"name\":\"removeLiquidityBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"liquidityPoolAmounts\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[][]\",\"name\":\"tokensAmounts\",\"type\":\"uint256[][]\"},{\"internalType\":\"address[][]\",\"name\":\"liquidityPoolTokens\",\"type\":\"address[][]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"enterInETH\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"exitInETH\",\"type\":\"bool\"},{\"internalType\":\"address[]\",\"name\":\"liquidityPoolAddresses\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"inputToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"internalType\":\"struct SwapData\",\"name\":\"data\",\"type\":\"tuple\"}],\"name\":\"swapLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"outputAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"enterInETH\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"exitInETH\",\"type\":\"bool\"},{\"internalType\":\"address[]\",\"name\":\"liquidityPoolAddresses\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"inputToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"internalType\":\"struct SwapData[]\",\"name\":\"data\",\"type\":\"tuple[]\"}],\"name\":\"swapLiquidityBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"outputAmounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"uniswapData\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"routerAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"wethAddress\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\n    \"ERC165ABI\": [{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\n    \"IERC165ABI\": [{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\n    \"IERC20ABI\": [{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\n    \"DFOBasedFixedInflationExtensionABI\": [{\"inputs\":[],\"name\":\"data\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"fixedInflationContract\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"host\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"doubleProxyAddress\",\"type\":\"address\"}],\"name\":\"init\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"tokenAddresses\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"transferAmounts\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amountsToMint\",\"type\":\"uint256[]\"}],\"name\":\"receiveTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"add\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"remove\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"lastBlock\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"blockInterval\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"callerRewardPercentage\",\"type\":\"uint256\"}],\"internalType\":\"struct FixedInflationEntry\",\"name\":\"data\",\"type\":\"tuple\"}],\"internalType\":\"struct FixedInflationEntryConfiguration[]\",\"name\":\"newEntries\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"inputTokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"inputTokenAmount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"inputTokenAmountIsPercentage\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"inputTokenAmountIsByMint\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"ammPlugin\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"liquidityPoolAddresses\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"swapPath\",\"type\":\"address[]\"},{\"internalType\":\"bool\",\"name\":\"enterInETH\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"exitInETH\",\"type\":\"bool\"},{\"internalType\":\"address[]\",\"name\":\"receivers\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"receiversPercentages\",\"type\":\"uint256[]\"}],\"internalType\":\"struct FixedInflationOperation[][]\",\"name\":\"operationSets\",\"type\":\"tuple[][]\"}],\"name\":\"setEntries\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"host\",\"type\":\"address\"}],\"name\":\"setHost\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\n    \"FixedInflationABI\": [{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"}],\"name\":\"Entry\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ONE_HUNDRED\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"}],\"name\":\"entry\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"lastBlock\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"blockInterval\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"callerRewardPercentage\",\"type\":\"uint256\"}],\"internalType\":\"struct FixedInflationEntry\",\"name\":\"entriesArray\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"inputTokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"inputTokenAmount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"inputTokenAmountIsPercentage\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"inputTokenAmountIsByMint\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"ammPlugin\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"liquidityPoolAddresses\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"swapPath\",\"type\":\"address[]\"},{\"internalType\":\"bool\",\"name\":\"enterInETH\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"exitInETH\",\"type\":\"bool\"},{\"internalType\":\"address[]\",\"name\":\"receivers\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"receiversPercentages\",\"type\":\"uint256[]\"}],\"internalType\":\"struct FixedInflationOperation[]\",\"name\":\"operations\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"ids\",\"type\":\"bytes32[]\"},{\"internalType\":\"bool[]\",\"name\":\"earnByAmounts\",\"type\":\"bool[]\"}],\"name\":\"execute\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"extension\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_extension\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"extensionPayload\",\"type\":\"bytes\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"lastBlock\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"blockInterval\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"callerRewardPercentage\",\"type\":\"uint256\"}],\"internalType\":\"struct FixedInflationEntry[]\",\"name\":\"newEntries\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"inputTokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"inputTokenAmount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"inputTokenAmountIsPercentage\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"inputTokenAmountIsByMint\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"ammPlugin\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"liquidityPoolAddresses\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"swapPath\",\"type\":\"address[]\"},{\"internalType\":\"bool\",\"name\":\"enterInETH\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"exitInETH\",\"type\":\"bool\"},{\"internalType\":\"address[]\",\"name\":\"receivers\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"receiversPercentages\",\"type\":\"uint256[]\"}],\"internalType\":\"struct FixedInflationOperation[][]\",\"name\":\"operationSets\",\"type\":\"tuple[][]\"}],\"name\":\"init\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"extensionInitResult\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"}],\"name\":\"nextBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"add\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"remove\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"lastBlock\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"blockInterval\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"callerRewardPercentage\",\"type\":\"uint256\"}],\"internalType\":\"struct FixedInflationEntry\",\"name\":\"data\",\"type\":\"tuple\"}],\"internalType\":\"struct FixedInflationEntryConfiguration[]\",\"name\":\"newEntries\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"inputTokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"inputTokenAmount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"inputTokenAmountIsPercentage\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"inputTokenAmountIsByMint\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"ammPlugin\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"liquidityPoolAddresses\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"swapPath\",\"type\":\"address[]\"},{\"internalType\":\"bool\",\"name\":\"enterInETH\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"exitInETH\",\"type\":\"bool\"},{\"internalType\":\"address[]\",\"name\":\"receivers\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"receiversPercentages\",\"type\":\"uint256[]\"}],\"internalType\":\"struct FixedInflationOperation[][]\",\"name\":\"operationSets\",\"type\":\"tuple[][]\"}],\"name\":\"setEntries\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\n    \"FixedInflationExtensionABI\": [{\"inputs\":[],\"name\":\"data\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"fixedInflationContract\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"host\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"host\",\"type\":\"address\"}],\"name\":\"init\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"tokenAddresses\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"transferAmounts\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amountsToMint\",\"type\":\"uint256[]\"}],\"name\":\"receiveTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"add\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"remove\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"lastBlock\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"blockInterval\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"callerRewardPercentage\",\"type\":\"uint256\"}],\"internalType\":\"struct FixedInflationEntry\",\"name\":\"data\",\"type\":\"tuple\"}],\"internalType\":\"struct FixedInflationEntryConfiguration[]\",\"name\":\"newEntries\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"inputTokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"inputTokenAmount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"inputTokenAmountIsPercentage\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"inputTokenAmountIsByMint\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"ammPlugin\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"liquidityPoolAddresses\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"swapPath\",\"type\":\"address[]\"},{\"internalType\":\"bool\",\"name\":\"enterInETH\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"exitInETH\",\"type\":\"bool\"},{\"internalType\":\"address[]\",\"name\":\"receivers\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"receiversPercentages\",\"type\":\"uint256[]\"}],\"internalType\":\"struct FixedInflationOperation[][]\",\"name\":\"operationSets\",\"type\":\"tuple[][]\"}],\"name\":\"setEntries\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"host\",\"type\":\"address\"}],\"name\":\"setHost\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\n    \"FixedInflationFactoryABI\": [{\"inputs\":[{\"internalType\":\"address\",\"name\":\"doubleProxy\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_fixedInflationImplementationAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_fixedInflationDefaultExtension\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"feePercentage\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newFeePercentage\",\"type\":\"uint256\"}],\"name\":\"FeePercentageSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"FixedInflationDefaultExtensionSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fixedInflationAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"fixedInflationInitResultData\",\"type\":\"bytes\"}],\"name\":\"FixedInflationDeployed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"FixedInflationLogicSet\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"_doubleProxy\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"deploy\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"initResultData\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feePercentageInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fixedInflationDefaultExtension\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fixedInflationImplementationAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newDoubleProxy\",\"type\":\"address\"}],\"name\":\"setDoubleProxy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_fixedInflationDefaultExtension\",\"type\":\"address\"}],\"name\":\"updateDefaultExtensionAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"feePercentage\",\"type\":\"uint256\"}],\"name\":\"updateFeePercentage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_fixedInflationImplementationAddress\",\"type\":\"address\"}],\"name\":\"updateLogicAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\n    \"IFixedInflationABI\": [{\"inputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"add\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"remove\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"lastBlock\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"blockInterval\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"callerRewardPercentage\",\"type\":\"uint256\"}],\"internalType\":\"struct FixedInflationEntry\",\"name\":\"data\",\"type\":\"tuple\"}],\"internalType\":\"struct FixedInflationEntryConfiguration[]\",\"name\":\"newEntries\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"inputTokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"inputTokenAmount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"inputTokenAmountIsPercentage\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"inputTokenAmountIsByMint\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"ammPlugin\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"liquidityPoolAddresses\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"swapPath\",\"type\":\"address[]\"},{\"internalType\":\"bool\",\"name\":\"enterInETH\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"exitInETH\",\"type\":\"bool\"},{\"internalType\":\"address[]\",\"name\":\"receivers\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"receiversPercentages\",\"type\":\"uint256[]\"}],\"internalType\":\"struct FixedInflationOperation[][]\",\"name\":\"operationSets\",\"type\":\"tuple[][]\"}],\"name\":\"setEntries\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\n    \"IFixedInflationExtensionABI\": [{\"inputs\":[],\"name\":\"data\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"fixedInflationContract\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"host\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"host\",\"type\":\"address\"}],\"name\":\"init\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"tokenAddresses\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"transferAmounts\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amountsToMint\",\"type\":\"uint256[]\"}],\"name\":\"receiveTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"add\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"remove\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"lastBlock\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"blockInterval\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"callerRewardPercentage\",\"type\":\"uint256\"}],\"internalType\":\"struct FixedInflationEntry\",\"name\":\"data\",\"type\":\"tuple\"}],\"internalType\":\"struct FixedInflationEntryConfiguration[]\",\"name\":\"newEntries\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"inputTokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"inputTokenAmount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"inputTokenAmountIsPercentage\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"inputTokenAmountIsByMint\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"ammPlugin\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"liquidityPoolAddresses\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"swapPath\",\"type\":\"address[]\"},{\"internalType\":\"bool\",\"name\":\"enterInETH\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"exitInETH\",\"type\":\"bool\"},{\"internalType\":\"address[]\",\"name\":\"receivers\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"receiversPercentages\",\"type\":\"uint256[]\"}],\"internalType\":\"struct FixedInflationOperation[][]\",\"name\":\"operationSets\",\"type\":\"tuple[][]\"}],\"name\":\"setEntries\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"host\",\"type\":\"address\"}],\"name\":\"setHost\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\n    \"IFixedInflationFactoryABI\": [{\"inputs\":[],\"name\":\"feePercentageInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fixedInflationDefaultExtension\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\n    \"IERC20MintableABI\": [{\"inputs\":[{\"internalType\":\"address\",\"name\":\"wallet\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"wallet\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\n    \"IndexABI\": [{\"inputs\":[{\"internalType\":\"address\",\"name\":\"doubleProxy\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"ethItemOrchestrator\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"interoperableInterfaceAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"NewIndex\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"_doubleProxy\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"amounts\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"collection\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"objectId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"info\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"_tokens\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"},{\"internalType\":\"address[]\",\"name\":\"_tokens\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"objectId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"interoperableInterfaceAddress\",\"type\":\"address\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"objectId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"name\":\"setCollectionUri\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newDoubleProxy\",\"type\":\"address\"}],\"name\":\"setDoubleProxy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"tokens\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\n    \"ERC1155ReceiverABI\": [{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\n    \"IERC1155ABI\": [{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\n    \"IERC20WrapperV1ABI\": [{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"objectId\",\"type\":\"uint256\"}],\"name\":\"asInteroperable\",\"outputs\":[{\"internalType\":\"contract IEthItemInteroperableInterface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"objectId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"objectIds\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"name\":\"burnBatch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"objectId\",\"type\":\"uint256\"}],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"objectId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"emitTransferSingleEvent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"interoperableInterfaceModel\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mainInterfaceVersion\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"ethItemInteroperableVersion\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"erc20TokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"objectId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"wrapperAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"partialUri\",\"type\":\"string\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mintETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"objectId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"wrapperAddress\",\"type\":\"address\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"objectId\",\"type\":\"uint256\"}],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"erc20TokenAddress\",\"type\":\"address\"}],\"name\":\"object\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"objectId\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"objectId\",\"type\":\"uint256\"}],\"name\":\"source\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"erc20TokenAddress\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"objectId\",\"type\":\"uint256\"}],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"objectId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"ethItemAmount\",\"type\":\"uint256\"}],\"name\":\"toInteroperableInterfaceAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"interoperableInterfaceAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"objectId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"erc20WrapperAmount\",\"type\":\"uint256\"}],\"name\":\"toMainInterfaceAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"mainInterfaceAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"objectId\",\"type\":\"uint256\"}],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"objectId\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\n    \"IEthItemABI\": [{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"objectId\",\"type\":\"uint256\"}],\"name\":\"asInteroperable\",\"outputs\":[{\"internalType\":\"contract IEthItemInteroperableInterface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"objectId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"objectIds\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"name\":\"burnBatch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"objectId\",\"type\":\"uint256\"}],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"objectId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"emitTransferSingleEvent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"interoperableInterfaceModel\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mainInterfaceVersion\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"ethItemInteroperableVersion\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"partialUri\",\"type\":\"string\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"objectId\",\"type\":\"uint256\"}],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"objectId\",\"type\":\"uint256\"}],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"objectId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"ethItemAmount\",\"type\":\"uint256\"}],\"name\":\"toInteroperableInterfaceAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"interoperableInterfaceAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"objectId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"erc20WrapperAmount\",\"type\":\"uint256\"}],\"name\":\"toMainInterfaceAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"mainInterfaceAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"objectId\",\"type\":\"uint256\"}],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"objectId\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\n    \"IEthItemInteroperableInterfaceABI\": [{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"interoperableInterfaceVersion\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"ethItemInteroperableInterfaceVersion\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mainInterface\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"objectId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"permitNonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\n    \"IEthItemOrchestratorABI\": [{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"modelInitPayload\",\"type\":\"bytes\"},{\"internalType\":\"string\",\"name\":\"ens\",\"type\":\"string\"}],\"name\":\"createNative\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"newNativeAddress\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"modelInitCallResponse\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\n    \"INativeV1ABI\": [{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"objectId\",\"type\":\"uint256\"}],\"name\":\"asInteroperable\",\"outputs\":[{\"internalType\":\"contract IEthItemInteroperableInterface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"objectId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"objectIds\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"name\":\"burnBatch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"canMint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"result\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"objectId\",\"type\":\"uint256\"}],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"objectId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"emitTransferSingleEvent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"extension\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"extensionAddress\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"hasDecimals\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"collectionUri\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"extensionAddress\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"extensionInitPayload\",\"type\":\"bytes\"}],\"name\":\"init\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"extensionInitCallResponse\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"interoperableInterfaceModel\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"objectId\",\"type\":\"uint256\"}],\"name\":\"isEditable\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"result\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mainInterfaceVersion\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"ethItemInteroperableVersion\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"objectId\",\"type\":\"uint256\"}],\"name\":\"makeReadOnly\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"objectId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"tokenName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"tokenSymbol\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"objectUri\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"editable\",\"type\":\"bool\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"objectId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"partialUri\",\"type\":\"string\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"tokenName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"tokenSymbol\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"objectUri\",\"type\":\"string\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"objectId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"objectId\",\"type\":\"uint256\"}],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"releaseExtension\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"objectId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"newUri\",\"type\":\"string\"}],\"name\":\"setUri\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"newUri\",\"type\":\"string\"}],\"name\":\"setUri\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"objectId\",\"type\":\"uint256\"}],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"objectId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"ethItemAmount\",\"type\":\"uint256\"}],\"name\":\"toInteroperableInterfaceAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"interoperableInterfaceAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"objectId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"erc20WrapperAmount\",\"type\":\"uint256\"}],\"name\":\"toMainInterfaceAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"mainInterfaceAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"objectId\",\"type\":\"uint256\"}],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"objectId\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\n    \"DFOBasedLiquidityMiningExtensionABI\": [{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"backToYou\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"data\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"liquidityMiningContract\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"byMint\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"host\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"rewardTokenAddress\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"byMint\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"host\",\"type\":\"address\"}],\"name\":\"init\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newDoubleProxy\",\"type\":\"address\"}],\"name\":\"setHost\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"add\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"ammPlugin\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"objectId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"liquidityPoolTokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"mainTokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"startBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewardPerBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"currentRewardPerBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastBlockUpdate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maximumLiquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"currentStakedLiquidity\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"free\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"renewTimes\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"penaltyFee\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"involvingETH\",\"type\":\"bool\"}],\"internalType\":\"struct LiquidityMiningSetup\",\"name\":\"data\",\"type\":\"tuple\"}],\"internalType\":\"struct LiquidityMiningSetupConfiguration[]\",\"name\":\"liquidityMiningSetups\",\"type\":\"tuple[]\"},{\"internalType\":\"bool\",\"name\":\"clearPinned\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"setPinned\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"pinnedIndex\",\"type\":\"uint256\"}],\"name\":\"setLiquidityMiningSetups\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"transferTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\n    \"ILiquidityMiningABI\": [{\"inputs\":[],\"name\":\"_rewardTokenAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"add\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"ammPlugin\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"objectId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"liquidityPoolTokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"mainTokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"startBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewardPerBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"currentRewardPerBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastBlockUpdate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maximumLiquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"currentStakedLiquidity\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"free\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"renewTimes\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"penaltyFee\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"involvingETH\",\"type\":\"bool\"}],\"internalType\":\"struct LiquidityMiningSetup\",\"name\":\"data\",\"type\":\"tuple\"}],\"internalType\":\"struct LiquidityMiningSetupConfiguration[]\",\"name\":\"liquidityMiningSetups\",\"type\":\"tuple[]\"},{\"internalType\":\"bool\",\"name\":\"clearPinned\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"setPinned\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"pinnedIndex\",\"type\":\"uint256\"}],\"name\":\"setLiquidityMiningSetups\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setups\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"ammPlugin\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"objectId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"liquidityPoolTokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"mainTokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"startBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewardPerBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"currentRewardPerBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastBlockUpdate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maximumLiquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"currentStakedLiquidity\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"free\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"renewTimes\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"penaltyFee\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"involvingETH\",\"type\":\"bool\"}],\"internalType\":\"struct LiquidityMiningSetup[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\n    \"ILiquidityMiningExtensionABI\": [{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"backToYou\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"data\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"liquidityMiningContract\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"byMint\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"host\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"rewardTokenAddress\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"byMint\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"host\",\"type\":\"address\"}],\"name\":\"init\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"host\",\"type\":\"address\"}],\"name\":\"setHost\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"add\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"ammPlugin\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"objectId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"liquidityPoolTokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"mainTokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"startBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewardPerBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"currentRewardPerBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastBlockUpdate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maximumLiquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"currentStakedLiquidity\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"free\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"renewTimes\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"penaltyFee\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"involvingETH\",\"type\":\"bool\"}],\"internalType\":\"struct LiquidityMiningSetup\",\"name\":\"data\",\"type\":\"tuple\"}],\"internalType\":\"struct LiquidityMiningSetupConfiguration[]\",\"name\":\"liquidityMiningSetups\",\"type\":\"tuple[]\"},{\"internalType\":\"bool\",\"name\":\"clearPinned\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"setPinned\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"pinnedIndex\",\"type\":\"uint256\"}],\"name\":\"setLiquidityMiningSetups\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"transferTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\n    \"ILiquidityMiningFactoryABI\": [{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"ExtensionCloned\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"cloneLiquidityMiningDefaultExtension\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feePercentageInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLiquidityFarmTokenCollectionURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLiquidityFarmTokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidityMiningDefaultExtension\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\n    \"LiquidityMiningABI\": [{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"objectId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"liquidityPoolToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"setupIndex\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"endBlock\",\"type\":\"uint256\"}],\"name\":\"FarmToken\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"rewardTokenAddress\",\"type\":\"address\"}],\"name\":\"RewardToken\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"mainToken\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"involvedToken\",\"type\":\"address\"}],\"name\":\"SetupToken\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"positionId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ONE_HUNDRED\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_extension\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"_finishedLockedSetups\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_hasPinned\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_liquidityFarmTokenCollection\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"_partiallyRedeemed\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_pinnedSetupIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"_positionRedeemed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"_positions\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"uniqueOwner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"setupIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"setupStartBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"setupEndBlock\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"free\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"liquidityPoolTokenAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lockedRewardPerBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"creationBlock\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"_rewardPerTokenPerSetupPerBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_rewardTokenAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"_setupUpdateBlocks\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"positionId\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"setupIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"amountIsLiquidityPool\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"positionOwner\",\"type\":\"address\"}],\"internalType\":\"struct LiquidityMiningPositionRequest\",\"name\":\"request\",\"type\":\"tuple\"}],\"name\":\"addLiquidity\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"positionId\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isExt\",\"type\":\"bool\"}],\"name\":\"calculateFreeLiquidityMiningSetupReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"setupIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"mainTokenAmount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isPartial\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"positionId\",\"type\":\"uint256\"}],\"name\":\"calculateLockedLiquidityMiningSetupReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"relativeRewardPerBlock\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"objectId\",\"type\":\"uint256\"}],\"name\":\"getObjectIdSetupIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"setupIndex\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"extension\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"extensionInitData\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"orchestrator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"rewardTokenAddress\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"liquidityMiningSetupsBytes\",\"type\":\"bytes\"},{\"internalType\":\"bool\",\"name\":\"setPinned\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"pinnedIndex\",\"type\":\"uint256\"}],\"name\":\"init\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"extensionReturnCall\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"setupIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"amountIsLiquidityPool\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"positionOwner\",\"type\":\"address\"}],\"internalType\":\"struct LiquidityMiningPositionRequest\",\"name\":\"request\",\"type\":\"tuple\"}],\"name\":\"openPosition\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"positionId\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"position\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"uniqueOwner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"setupIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"setupStartBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"setupEndBlock\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"free\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"liquidityPoolTokenAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lockedRewardPerBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"creationBlock\",\"type\":\"uint256\"}],\"internalType\":\"struct LiquidityMiningPosition\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rebalancePinnedSetup\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"setupIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"rewardPerToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"add\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"ammPlugin\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"objectId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"liquidityPoolTokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"mainTokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"startBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewardPerBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"currentRewardPerBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastBlockUpdate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maximumLiquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"currentStakedLiquidity\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"free\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"renewTimes\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"penaltyFee\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"involvingETH\",\"type\":\"bool\"}],\"internalType\":\"struct LiquidityMiningSetup\",\"name\":\"data\",\"type\":\"tuple\"}],\"internalType\":\"struct LiquidityMiningSetupConfiguration[]\",\"name\":\"liquidityMiningSetups\",\"type\":\"tuple[]\"},{\"internalType\":\"bool\",\"name\":\"clearPinned\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"setPinned\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"pinnedIndex\",\"type\":\"uint256\"}],\"name\":\"setLiquidityMiningSetups\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setups\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"ammPlugin\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"objectId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"liquidityPoolTokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"mainTokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"startBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewardPerBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"currentRewardPerBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastBlockUpdate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maximumLiquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"currentStakedLiquidity\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"free\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"renewTimes\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"penaltyFee\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"involvingETH\",\"type\":\"bool\"}],\"internalType\":\"struct LiquidityMiningSetup[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"positionId\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"positionId\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"unwrapPair\",\"type\":\"bool\"}],\"name\":\"unlock\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"positionId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"objectId\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"unwrapPair\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"removedLiquidity\",\"type\":\"uint256\"}],\"name\":\"withdrawLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"positionId\",\"type\":\"uint256\"}],\"name\":\"withdrawReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\n    \"LiquidityMiningExtensionABI\": [{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"backToYou\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"data\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"liquidityMiningContract\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"byMint\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"host\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"rewardTokenAddress\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"byMint\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"host\",\"type\":\"address\"}],\"name\":\"init\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"host\",\"type\":\"address\"}],\"name\":\"setHost\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"add\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"ammPlugin\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"objectId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"liquidityPoolTokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"mainTokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"startBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewardPerBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"currentRewardPerBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastBlockUpdate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maximumLiquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"currentStakedLiquidity\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"free\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"renewTimes\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"penaltyFee\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"involvingETH\",\"type\":\"bool\"}],\"internalType\":\"struct LiquidityMiningSetup\",\"name\":\"data\",\"type\":\"tuple\"}],\"internalType\":\"struct LiquidityMiningSetupConfiguration[]\",\"name\":\"liquidityMiningSetups\",\"type\":\"tuple[]\"},{\"internalType\":\"bool\",\"name\":\"clearPinned\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"setPinned\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"pinnedIndex\",\"type\":\"uint256\"}],\"name\":\"setLiquidityMiningSetups\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"transferTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\n    \"LiquidityMiningFactoryABI\": [{\"inputs\":[{\"internalType\":\"address\",\"name\":\"doubleProxy\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_liquidityMiningImplementationAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_liquidityMiningDefaultExtension\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"feePercentage\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"liquidityFarmTokenCollectionUri\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"liquidityFarmTokenUri\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"ExtensionCloned\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newFeePercentage\",\"type\":\"uint256\"}],\"name\":\"FeePercentageSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"LiquidityMiningDefaultExtensionSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"liquidityMiningAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"liquidityMiningInitResultData\",\"type\":\"bytes\"}],\"name\":\"LiquidityMiningDeployed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"LiquidityMiningLogicSet\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"_doubleProxy\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cloneLiquidityMiningDefaultExtension\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"clonedExtension\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"deploy\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"initResultData\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feePercentageInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLiquidityFarmTokenCollectionURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLiquidityFarmTokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidityFarmTokenCollectionURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidityFarmTokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidityMiningDefaultExtension\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidityMiningImplementationAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newDoubleProxy\",\"type\":\"address\"}],\"name\":\"setDoubleProxy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_liquidityMiningDefaultExtensionAddress\",\"type\":\"address\"}],\"name\":\"updateDefaultExtensionAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"feePercentage\",\"type\":\"uint256\"}],\"name\":\"updateFeePercentage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"liquidityFarmTokenCollectionUri\",\"type\":\"string\"}],\"name\":\"updateLiquidityFarmTokenCollectionURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"liquidityFarmTokenUri\",\"type\":\"string\"}],\"name\":\"updateLiquidityFarmTokenURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_liquidityMiningImplementationAddress\",\"type\":\"address\"}],\"name\":\"updateLogicAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\n    \"IWUSDExtensionControllerABI\": [{\"inputs\":[],\"name\":\"lastRebalanceByCreditBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rebalanceByCreditBlockInterval\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"wusdInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\n    \"IWUSDNoteControllerABI\": [{\"inputs\":[],\"name\":\"info\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_wusdCollection\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_wusdObjectId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_wusdNoteObjectId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_multiplier\",\"type\":\"uint256\"}],\"name\":\"init\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"multiplier\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"wusdCollection\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"wusdNoteObjectId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"wusdObjectId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\n    \"WUSDExtensionABI\": [{\"inputs\":[{\"internalType\":\"address\",\"name\":\"orchestrator\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"collectionUri\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"mainItemName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"mainItemSymbol\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"mainItemUri\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"ammPlugin\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"liquidityPoolAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidityPoolAmount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"liquidityPoolReceiver\",\"type\":\"address\"}],\"name\":\"burnFor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"objectId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"burnFor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"collection\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"controller\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"data\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"objectId\",\"type\":\"uint256\"}],\"name\":\"makeReadOnly\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"tokenName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"tokenSymbol\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"objectUri\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"editable\",\"type\":\"bool\"}],\"name\":\"mintEmpty\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"objectId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"interoperableInterfaceAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"ammPlugin\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"liquidityPoolAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidityPoolAmount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"mintFor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"ammAddress\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"liquidityPools\",\"type\":\"address[]\"}],\"internalType\":\"struct AllowedAMM[]\",\"name\":\"amms\",\"type\":\"tuple[]\"}],\"name\":\"mintForRebalanceByCredit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"credit\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"name\":\"setCollectionUri\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"existingObjectId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"name\":\"setItemUri\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\n    \"WUSDExtensionControllerABI\": [{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"wusdInitializerBytes\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ONE_HUNDRED\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"ammPosition\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidityPoolPosition\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidityPoolAmount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"byLiquidityPool\",\"type\":\"bool\"}],\"name\":\"addLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"toMint\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"allowedAMMs\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"ammAddress\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"liquidityPools\",\"type\":\"address[]\"}],\"internalType\":\"struct AllowedAMM[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"collection\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"differences\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"credit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"debt\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"doubleProxy\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"extension\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"fromTokenToStable\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"controllers\",\"type\":\"address[]\"},{\"internalType\":\"string[]\",\"name\":\"names\",\"type\":\"string[]\"},{\"internalType\":\"string[]\",\"name\":\"symbols\",\"type\":\"string[]\"},{\"internalType\":\"string[]\",\"name\":\"uris\",\"type\":\"string[]\"}],\"name\":\"initNotes\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastRebalanceByCreditBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rebalanceByCredit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rebalanceByCreditBlockInterval\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rebalanceByCreditReceiversInfo\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"ammAddress\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"liquidityPools\",\"type\":\"address[]\"}],\"internalType\":\"struct AllowedAMM[]\",\"name\":\"newAllowedAMMs\",\"type\":\"tuple[]\"}],\"name\":\"setAllowedAMMs\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"name\":\"setCollectionUri\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newDoubleProxy\",\"type\":\"address\"}],\"name\":\"setDoubleProxy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"existingObjectId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"name\":\"setItemUri\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"rebalanceByCreditReceivers\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"rebalanceByCreditPercentages\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"rebalanceByCreditPercentageForCaller\",\"type\":\"uint256\"}],\"name\":\"setRebalanceByCreditData\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newrebalanceByCreditBlockInterval\",\"type\":\"uint256\"}],\"name\":\"setrebalanceByCreditBlockInterval\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"wusdInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"wusdNote2Info\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"wusdNote5Info\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\n    \"WUSDLiquidityMiningExtensionABI\": [{\"inputs\":[],\"name\":\"ONE_HUNDRED\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"backToYou\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"data\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"liquidityMiningContract\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"byMint\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"host\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"rewardTokenAddress\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"byMint\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"host\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_wusdExtensionControllerAddress\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"_rebalancePercentages\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"_rebalanceByCreditBlockIntervalMultiplier\",\"type\":\"uint256\"}],\"name\":\"init\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"init\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rebalanceByCreditBlockIntervalMultiplier\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"rebalancePercentages\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rebalanceRewardsPerBlock\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newDoubleProxy\",\"type\":\"address\"}],\"name\":\"setHost\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"add\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"ammPlugin\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"objectId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"liquidityPoolTokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"mainTokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"startBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewardPerBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"currentRewardPerBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastBlockUpdate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maximumLiquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"currentStakedLiquidity\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"free\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"renewTimes\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"penaltyFee\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"involvingETH\",\"type\":\"bool\"}],\"internalType\":\"struct LiquidityMiningSetup\",\"name\":\"data\",\"type\":\"tuple\"}],\"internalType\":\"struct LiquidityMiningSetupConfiguration[]\",\"name\":\"liquidityMiningSetups\",\"type\":\"tuple[]\"},{\"internalType\":\"bool\",\"name\":\"clearPinned\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"setPinned\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"pinnedIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"_rebalancePercentages\",\"type\":\"uint256[]\"}],\"name\":\"setLiquidityMiningSetups\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"add\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"ammPlugin\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"objectId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"liquidityPoolTokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"mainTokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"startBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewardPerBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"currentRewardPerBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastBlockUpdate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maximumLiquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"currentStakedLiquidity\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"free\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"renewTimes\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"penaltyFee\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"involvingETH\",\"type\":\"bool\"}],\"internalType\":\"struct LiquidityMiningSetup\",\"name\":\"data\",\"type\":\"tuple\"}],\"internalType\":\"struct LiquidityMiningSetupConfiguration[]\",\"name\":\"\",\"type\":\"tuple[]\"},{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"setLiquidityMiningSetups\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_wusdExtensionControllerAddress\",\"type\":\"address\"}],\"name\":\"setWusdExtensionControllerAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"transferTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"wusdExtensionControllerAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\n    \"WUSDNoteControllerABI\": [{\"inputs\":[],\"name\":\"info\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_wusdCollection\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_wusdObjectId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_wusdNoteObjectId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_multiplier\",\"type\":\"uint256\"}],\"name\":\"init\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"multiplier\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"wusdCollection\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"wusdNoteObjectId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"wusdObjectId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\n    \"ERC20ABI\": [{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalSupply\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getProxy\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalSupply\",\"type\":\"uint256\"}],\"name\":\"init\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setProxy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\n      \"uniswapV2RouterABI\" : [{\"inputs\":[],\"name\":\"WETH\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountADesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBDesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"addLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenDesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"addLiquidityETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveOut\",\"type\":\"uint256\"}],\"name\":\"getAmountIn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveOut\",\"type\":\"uint256\"}],\"name\":\"getAmountOut\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"}],\"name\":\"getAmountsIn\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"}],\"name\":\"getAmountsOut\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveB\",\"type\":\"uint256\"}],\"name\":\"quote\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"removeLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"removeLiquidityETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"removeLiquidityETHSupportingFeeOnTransferTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"approveMax\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"removeLiquidityETHWithPermit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"approveMax\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"removeLiquidityETHWithPermitSupportingFeeOnTransferTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"approveMax\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"removeLiquidityWithPermit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapETHForExactTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactETHForTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactETHForTokensSupportingFeeOnTransferTokens\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForETH\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForETHSupportingFeeOnTransferTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForTokensSupportingFeeOnTransferTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMax\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapTokensForExactETH\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMax\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapTokensForExactTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\n  }","C:\\Users\\marco\\Documents\\BUIDL\\covenants-fe\\src\\store\\types\\index.js",[],"C:\\Users\\marco\\Documents\\BUIDL\\covenants-fe\\src\\store\\actions\\index.js",[],"C:\\Users\\marco\\Documents\\BUIDL\\covenants-fe\\src\\core\\index.js",["323"],"import Web3 from \"web3\";\nimport Web3Modal from \"web3modal\";\nimport { ethers } from \"ethers\";\n\nconst abi = new ethers.utils.AbiCoder();\n\nexport default class DFOCore {\n    address = '0x0000000000000000000000000000000000000000';\n    chainId;\n    context;\n    contracts = {};\n    deployedLiquidityMiningContracts = [];\n    eventEmitters = {};\n    initialized = false;\n    positions = [];\n    provider;\n    voidEthereumAddress = '0x0000000000000000000000000000000000000000';\n    web3;\n\n    /**\n     * constructs the DFOCore object by passing the context json object.\n     * @param {*} context app context.\n     */\n    constructor(context) { \n        this.context = context;\n    }\n\n    /**\n     * initializes the DFOCore object.\n     * the logic is not inside the constructor function since we need\n     * to leverage async/await syntax.\n     * @param {*} web3 \n     * @param {*} providerOptions \n     */\n    init = async (web3, providerOptions = {}) => {\n        // return if already initialized\n        if (this.initialized) return;\n        // retrieve the web3 passed in the function\n        this.web3 = web3;\n        if (!this.web3) {\n            // no web3 instance is passed, we create it by opening the modal\n            const web3Modal = new Web3Modal({\n                providerOptions,\n            });\n            // retrieve the provider\n            const provider = await web3Modal.connect();\n            // initialize the web3 instance\n            this.web3 = new Web3(provider);\n            // set the address\n            const accounts = await this.web3.eth.getAccounts();\n            this.address = accounts[0];\n            // check for accounts changes\n            provider.on('accountsChanged', (accounts) => {\n                this.address = accounts[0] || this.voidEthereumAddress;\n                \n            });\n            // check for chain id changes\n            provider.on('chainChanged', (chainId) => {\n                this.chainId = this.context.ethereumNetwork[chainId] ? chainId : 0;\n                \n            })\n            // check for connection\n            provider.on('connect', ({ chainId }) => {\n                this.chainId = chainId;\n            });\n            // check for disconnect\n            provider.on('disconnect', ({ code, message }) => {\n                \n                this.address = this.voidEthereumAddress;\n                this.chainId = 0;\n            });\n            this.provider = provider;\n        }\n        // set the core as initialized\n        this.initialized = true;\n    }\n\n    /**\n     * returns the contract with the given abi and address if it's already stored\n     * in the state, otherwise it creates it and stores it inside a variable.\n     * @param {*} abi contract ABI.\n     * @param {*} address contract address.\n     */\n    getContract = async (abi, address) => {\n        address = address || this.voidEthereumAddress;\n        // create the key\n        const key = address.toLowerCase();\n        this.contracts[key] = this.contracts[key] || new this.web3.eth.Contract(abi, address);\n        return this.contracts[key];\n    }\n\n    /**\n     * returns the element with the given elementName from the context.\n     * @param {*} elementName name of the element to retrieve from the context.\n     */\n    getContextElement = (elementName) => {\n        return this.context[elementName];\n    }\n\n    /**\n     * returns the element with the given elementName from the context for the current chain network.\n     * @param {*} elementName name of the element to retrieve from the context.\n     */\n    getNetworkContextElement = (elementName) => {\n        const network = this.context.ethereumNetwork[this.chainId];\n        return this.context[`${elementName}${network}`];\n    }\n\n    /**\n     * returns the sending options for the given method and value.\n     * if no params are used, the {from: address, gas: '99999999'} object is returned.\n     * @param {*} method contract method that will be called.\n     * @param {*} value eventual amount of ETH that will be sent.\n     */\n    getSendingOptions = async (method, value) => {\n        try {\n            // if a method is provided we use it to estimate the gas\n            if (method) {\n                // retrieve the nonce\n                const nonce = await this.web3.eth.getTransactionCount(this.address);\n                // estimate the gase for the method\n                const gas = await method.estimateGas({\n                    nonce,\n                    from: this.address,\n                    gasPrice: this.web3.utils.toWei('13', 'gwei'),\n                    value: value || 0,\n                    gas: '7900000',\n                    gasLimit: '7900000',  \n                });\n                // return the sending options\n                return { nonce, from: this.address, gas: gas || '7900000', value: value || 0, }\n            }\n        } catch (error) {\n            // catch any error and log it\n            \n        } finally {\n            // return this after any error or if no method is provided\n            return { from: this.address, gas: '99999999', };\n        }\n    }\n\n    /**\n     * returns the current block number.\n     */\n    getBlockNumber = async () => {\n        return await this.web3.eth.getBlockNumber();\n    }\n\n    /**\n     * retrieves all the deployed liquidity mining contracts from the given factory address.\n     */\n    loadDeployedLiquidityMiningContracts = async (factoryAddress) => {\n        if (this.deployedLiquidityMiningContracts.length > 0) return;\n        try {\n            if (!factoryAddress) factoryAddress = this.getContextElement(\"liquidityMiningFactoryAddress\");\n            const factoryContract = new this.web3.eth.Contract(this.getContextElement(\"LiquidityMiningFactoryABI\"), factoryAddress);\n            const events = await factoryContract.getPastEvents('LiquidityMiningDeployed', { fromBlock: 11790157 });\n            await Promise.all(events.map(async (event) => {\n                this.deployedLiquidityMiningContracts.push({ address: event.returnValues.liquidityMiningAddress, sender: event.returnValues.sender });\n            }));\n        } catch (error) {\n            console.error(error);\n            this.deployedLiquidityMiningContracts = [];\n        }\n    }\n\n    getHostedLiquidityMiningContracts = () => {\n        return this.deployedLiquidityMiningContracts.filter((item) => item.sender.toLowerCase() === this.address.toLowerCase());\n    }\n\n    loadPositions = async (force = false) => {\n        console.log(this.positions);\n        if (this.positions > 0 && !force) return;\n        try {\n            this.positions = [];\n            await this.loadDeployedLiquidityMiningContracts();\n            await Promise.all(this.deployedLiquidityMiningContracts.map(async (c) => {\n                const contract = new this.web3.eth.Contract(this.getContextElement(\"LiquidityMiningABI\"), c.address);\n                const events = await contract.getPastEvents('Transfer', { filter: { to: this.address }, fromBlock: 11790157 });\n                await Promise.all(events.map(async (event) => {\n                    const { returnValues } = event;\n                    const { positionId } = returnValues;\n                    const position = await contract.methods.position(positionId).call();\n                    const setup = (await contract.methods.setups().call())[position.setupIndex];\n                    this.positions.push({ ...setup, contract, position, positionId });\n                }))\n            }));\n        } catch (error) {\n            console.error(error);\n        }\n    }\n\n    /**\n     * pushes the contract address inside the core array.\n     * @param {*} contractAddress new liquidity mining contract address.\n     */\n    addDeployedLiquidityMiningContract = async (contractAddress) => {\n        if (!this.deployedLiquidityMiningContracts.includes(contractAddress)) {\n            this.deployedLiquidityMiningContracts.push(contractAddress);\n        }\n    }\n\n    /**\n     * starts listening for the provided event emitted by the contract with the given abi and address using\n     * the input filter and fromBlock.\n     * @param {*} abi contract abi.\n     * @param {*} address contract address.\n     * @param {*} eventName event name to start listening for.\n     * @param {*} filter event filter.\n     * @param {*} fromBlock event from block.\n     */\n    getEventEmitter = async (abi, address, eventName, filter, fromBlock) => {\n        const contract = await this.getContract(abi, address);\n        if (!this.eventEmitters[address]) {\n            this.eventEmitters[address] = {};\n        }\n        this.eventEmitters[address] = {\n            ...this.eventEmitters[address],\n            eventName: contract.events[eventName]({ filter: filter || {}, fromBlock: fromBlock || await this.getBlockNumber() }),\n        };\n    }\n\n    fromDecimals = (amount, decimals = 18) => {\n        return decimals === 18 ? this.web3.utils.toWei(toFixed(amount), 'ether') : parseInt(toFixed(amount)) * 10**decimals;\n    }\n\n    toFixed = (amount) => {\n        return toFixed(amount);\n    }\n\n    toDecimals = (amount, decimals = 18, precision = 4) => {\n        if (parseInt(amount) === 0) return 0;\n       \n        const res = decimals === 18 ? this.web3.utils.fromWei(amount, 'ether') : parseInt(amount) / 10**decimals;\n        return parseFloat(res).toFixed(precision);\n    }\n\n    normalizeValue = (amount, decimals) => {\n        return amount * 10**(18-decimals);\n    }\n\n    normalizeFixed = (amount, decimals) => {\n        return this.toFixed(this.normalizeValue(amount, decimals));\n    }\n\n    toDecimalsNormalizedFixed = (amount, decimals = 18, precision = 4) => {\n        return this.toDecimals(this.normalizeFixed(amount, decimals), decimals, precision);\n    }\n\n    deployLiquidityMiningContract = async (data, sender) => {\n        const factoryAddress = data.factoryAddress || this.getContextElement(\"liquidityMiningFactoryAddress\");\n        const liquidityMiningFactory = await this.getContract(this.getContextElement(\"LiquidityMiningFactoryABI\"), factoryAddress);\n        const cloneExtensionTransaction = await liquidityMiningFactory.methods.cloneLiquidityMiningDefaultExtension().send({ from: sender, gasLimit: 10000000 });\n        const cloneExtensionReceipt = await this.web3.eth.getTransactionReceipt(cloneExtensionTransaction.transactionHash);\n        const clonedDefaultLiquidityMiningExtensionAddress = this.web3.eth.abi.decodeParameter(\"address\", cloneExtensionReceipt.logs.filter(it => it.topics[0] === this.web3.utils.sha3('ExtensionCloned(address)'))[0].topics[1])\n        const { setups, rewardTokenAddress, byMint, hasLoadBalancer, pinnedSetupIndex } = data;\n        const types = [\"address\", \"bytes\", \"address\", \"address\", \"bytes\", \"bool\", \"uint256\"];\n        const encodedSetups = abi.encode([\"tuple(address,uint256,address,address,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,bool,uint256,uint256,bool)[]\"], [setups]);\n        const liquidityMiningExtension = new this.web3.eth.Contract(this.getContextElement(\"LiquidityMiningExtensionABI\"), clonedDefaultLiquidityMiningExtensionAddress);\n        console.log(clonedDefaultLiquidityMiningExtensionAddress);\n        const extensionInitData = liquidityMiningExtension.methods.init(byMint, sender).encodeABI()\n        const params = [clonedDefaultLiquidityMiningExtensionAddress, extensionInitData, this.getContextElement(\"ethItemOrchestratorAddress\"), rewardTokenAddress, encodedSetups, hasLoadBalancer, pinnedSetupIndex || 0];\n        const payload = this.web3.utils.sha3(`init(${types.join(',')})`).substring(0, 10) + (this.web3.eth.abi.encodeParameters(types, params).substring(2));\n        console.log(payload);\n        console.log(extensionInitData);\n        const deployTransaction = await liquidityMiningFactory.methods.deploy(payload).send({ from: sender, gasLimit: 10000000 });\n        console.log(deployTransaction);\n    }\n\n    /**\n     * returns the dfo with the given dfoAddress (proxy or doubleProxy depending on the version we're in).\n     * @param {*} dfoAddress proxy or double proxy address of the dfo to retrieve.\n     * @param {*} dfoAddresses other dfo addresses.\n     */\n    async loadDFO(dfoAddress, dfoAddresses) {\n        dfoAddresses = dfoAddresses ? dfoAddresses.concat(dfoAddress) : [dfoAddress];\n        // TODO retrieve DFO\n    }\n\n    \n\n}\n\nfunction toFixed(x) {\n    if (Math.abs(x) < 1.0) {\n      var e = parseInt(x.toString().split('e-')[1]);\n      if (e) {\n          x *= Math.pow(10,e-1);\n          x = '0.' + (new Array(e)).join('0') + x.toString().substring(2);\n      }\n    } else {\n      var e = parseInt(x.toString().split('+')[1]);\n      if (e > 20) {\n          e -= 20;\n          x /= Math.pow(10,e);\n          x += (new Array(e+1)).join('0');\n      }\n    }\n    return x;\n  }","C:\\Users\\marco\\Documents\\BUIDL\\covenants-fe\\src\\store\\types\\session\\index.js",[],"C:\\Users\\marco\\Documents\\BUIDL\\covenants-fe\\src\\store\\types\\core\\index.js",[],"C:\\Users\\marco\\Documents\\BUIDL\\covenants-fe\\src\\store\\actions\\core\\index.js",[],"C:\\Users\\marco\\Documents\\BUIDL\\covenants-fe\\src\\store\\actions\\session\\index.js",[],"C:\\Users\\marco\\Documents\\BUIDL\\covenants-fe\\src\\pages\\index.js",[],"C:\\Users\\marco\\Documents\\BUIDL\\covenants-fe\\src\\pages\\index\\Index.jsx",["324"],"import dragonImage from '../../assets/images/dragon.png';\n\nconst lorem = 'Lorem ipsum dolor, sit amet consectetur adipisicing elit. Eaque quia consequuntur id magnam tempore animi eveniet quod dolor ipsa illo? Iure illo alias rem sapiente illum error laborum voluptatum quasi!';\n\nconst Index = () => {\n    return (\n        <div className=\"page-container-wrapper\">\n            <div className=\"page-container\">\n                <div className=\"page-container-row index-container-row\">\n                    <div className=\"page-container-col index-container-col\">\n                        <img src={dragonImage} className=\"index-image\" />\n                        <h2 className=\"index-title\">COVENANTS</h2>\n                    </div>\n                    <div className=\"page-container-col\">\n                        <p className=\"index-paragraph\">{lorem}</p>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Index;","C:\\Users\\marco\\Documents\\BUIDL\\covenants-fe\\src\\pages\\grimoire\\Grimoire.jsx",[],"C:\\Users\\marco\\Documents\\BUIDL\\covenants-fe\\src\\pages\\arbitrage\\Arbitrage.jsx",[],"C:\\Users\\marco\\Documents\\BUIDL\\covenants-fe\\src\\pages\\farm\\Farm.jsx",["325"],"import { PageContainer } from \"../../components\";\nimport dragonImage from '../../assets/images/dragon.png';\nimport { Route, Switch, useParams } from \"react-router-dom\";\nimport FarmDapp from './dapp/dapp';\n\nconst lorem = 'Lorem ipsum dolor, sit amet consectetur adipisicing elit. Eaque quia consequuntur id magnam tempore animi eveniet quod dolor ipsa illo? Iure illo alias rem sapiente illum error laborum voluptatum quasi!';\n\nconst Farm = () => {\n\n    return (\n        <Switch>\n            <Route path=\"/farm/dapp\">\n                <FarmDapp />\n            </Route>\n            <Route path=\"/farm/\">\n                <PageContainer image={dragonImage} imageHeight={300} text={lorem} launchDapp={true} title={\"Farm\"} link={\"/farm/dapp\"} />\n            </Route>\n        </Switch>\n    )\n}\n\nexport default Farm;","C:\\Users\\marco\\Documents\\BUIDL\\covenants-fe\\src\\pages\\bazaar\\Bazaar.jsx",[],"C:\\Users\\marco\\Documents\\BUIDL\\covenants-fe\\src\\pages\\convenants\\Covenants.jsx",[],"C:\\Users\\marco\\Documents\\BUIDL\\covenants-fe\\src\\pages\\multiswap\\Multiswap.jsx",[],"C:\\Users\\marco\\Documents\\BUIDL\\covenants-fe\\src\\pages\\crafting\\Crafting.jsx",[],"C:\\Users\\marco\\Documents\\BUIDL\\covenants-fe\\src\\pages\\inflation\\Inflation.jsx",[],"C:\\Users\\marco\\Documents\\BUIDL\\covenants-fe\\src\\pages\\wusd\\WUSD.jsx",[],"C:\\Users\\marco\\Documents\\BUIDL\\covenants-fe\\src\\pages\\bazaar\\dapp\\dapp.jsx",[],"C:\\Users\\marco\\Documents\\BUIDL\\covenants-fe\\src\\pages\\crafting\\dapp\\dapp.jsx",[],"C:\\Users\\marco\\Documents\\BUIDL\\covenants-fe\\src\\pages\\wusd\\dapp\\dapp.jsx",[],"C:\\Users\\marco\\Documents\\BUIDL\\covenants-fe\\src\\pages\\inflation\\dapp\\dapp.jsx",[],"C:\\Users\\marco\\Documents\\BUIDL\\covenants-fe\\src\\pages\\farm\\dapp\\dapp.jsx",[],"C:\\Users\\marco\\Documents\\BUIDL\\covenants-fe\\src\\pages\\wusd\\dapp\\components\\index.js",[],"C:\\Users\\marco\\Documents\\BUIDL\\covenants-fe\\src\\pages\\inflation\\dapp\\components\\index.js",[],"C:\\Users\\marco\\Documents\\BUIDL\\covenants-fe\\src\\pages\\farm\\dapp\\components\\index.js",[],"C:\\Users\\marco\\Documents\\BUIDL\\covenants-fe\\src\\pages\\wusd\\dapp\\components\\Arbitrate.jsx",[],"C:\\Users\\marco\\Documents\\BUIDL\\covenants-fe\\src\\pages\\inflation\\dapp\\components\\Explore.jsx",["326","327","328"],"import { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { FixedInflationComponent, FarmingComponent } from '../../../../components';\n\nconst extFixedInflationContracts = [{address: '0xc3BE549499f1e504c793a6c89371Bd7A98229500'}, {address: '0x761E02FEC5A21C6d3F284bd536dB2D2d33d5540B'}];\n\nconst Explore = (props) => {\n    const [executable, setExecutable] = useState(false);\n    const [fixedInflationContracts, setFixedInflationContracts] = useState([]);\n    const [loading, setLoading] = useState(false);\n\n    useEffect(() => {\n        if (props.dfoCore) {\n            getEntries();\n        }\n    }, []);\n\n    const getEntries = async () => {\n        setLoading(true);\n        try {\n            setFixedInflationContracts(extFixedInflationContracts);\n        } catch (error) {\n            console.error(error);\n            setFixedInflationContracts([]);\n        } finally {\n            setLoading(false);\n        }\n    }\n\n    return (\n        <div className=\"explore-component\">\n            <div className=\"row mb-4 align-items-center\">\n                <div className=\"col-12 col-md-6 mb-4 mb-md-0\">\n                    <select className=\"custom-select wusd-pair-select\">\n                        <option value=\"\">Sort by..</option>\n                        <option value=\"1\">One</option>\n                        <option value=\"2\">Two</option>\n                        <option value=\"3\">Three</option>\n                    </select>\n                </div>\n                <div className=\"col-12 col-md-6 mb-4 mb-md-0\">\n                    <div className=\"form-check my-4\">\n                        <input className=\"form-check-input\" type=\"checkbox\" value={executable} onChange={(e) => setExecutable(e.target.checked)} id=\"setExecutable\" />\n                        <label className=\"form-check-label\" htmlFor=\"setExecutable\">\n                            Executable\n                        </label>\n                    </div>\n                </div>\n            </div>\n            <div className=\"row\">\n                {\n                    fixedInflationContracts.length === 0 && <div className=\"col-12 text-left\">\n                        <h6><b>No fixed inflation contracts!</b></h6>\n                    </div>\n                }\n                {\n                    fixedInflationContracts.map((entry) => {\n                        return (\n                            <FixedInflationComponent className={\"col-12 mb-4\"} showButton={true} hasBorder={true} />\n                        )\n                    })\n                }\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    const { core } = state;\n    return { dfoCore: core.dfoCore };\n}\n\nexport default connect(mapStateToProps)(Explore);","C:\\Users\\marco\\Documents\\BUIDL\\covenants-fe\\src\\pages\\wusd\\dapp\\components\\Farm.jsx",["329","330"],"import { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { FarmingComponent } from '../../../../components'; \n\nconst Farm = (props) => {\n    const [loading, setLoading] = useState(false);\n    const [farmingContracts, setFarmingContracts] = useState([]);\n\n    useEffect(() => {\n        getFarmingSetups();\n    }, []);\n\n    const getFarmingSetups = async () => {\n        setLoading(true);\n        try {\n            await props.dfoCore.loadDeployedLiquidityMiningContracts();\n        } catch (error) {\n            console.error(error);\n        } finally {\n            setLoading(false);\n        }\n    }\n\n    if (loading) {\n        return (\n            <div className=\"explore-component\">\n                <div className=\"row\">\n                    <div className=\"col-12 justify-content-center\">\n                        <div className=\"spinner-border text-secondary\" role=\"status\">\n                            <span className=\"visually-hidden\"></span>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n\n    return (\n        <div className=\"container bg-white dapp-container\">\n            <div className=\"row\">\n                {\n                    farmingContracts.length === 0 && <div className=\"col-12 text-left\">\n                        <h6><b>No farming contract available!</b></h6>\n                    </div>\n                }\n                {\n                    farmingContracts.length > 0 && farmingContracts.map((farmingContract) => {\n                        return (\n                            <FarmingComponent className=\"col-12 mb-4\" dfoCore={props.dfoCore} contract={farmingContract} hasBorder />\n                        )\n                    })\n                }\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    const { core } = state;\n    return { dfoCore: core.dfoCore };\n}\n\nexport default connect(mapStateToProps)(Farm);","C:\\Users\\marco\\Documents\\BUIDL\\covenants-fe\\src\\pages\\inflation\\dapp\\components\\Create.jsx",["331"],"import { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { setInflationContractStep, updateInflationContract, addEntry, removeEntry, addInflationSetup, removeInflationSetup  } from '../../../../store/actions';\nimport CreateSetup from './CreateSetup';\n\nconst Create = (props) => {\n    const [step, setStep] = useState(0);\n    const [add, setAdd] = useState(false);\n    const [editSetup, setEditSetup] = useState(null);\n    const [selectedHost, setSelectedHost] = useState(\"\");\n\n    const addSetup = (setup) => {\n        if (editSetup) {\n            props.removeInflationSetup(setup.index);\n        }\n        props.addInflationSetup(setup);\n        setAdd(false);\n        setEditSetup(null);\n    }\n\n    const removeSetup = (index) => {\n        props.removeInflationSetup(index);\n    }\n\n    const getSteps = () => {\n        switch (step) {\n            case 0:\n                return getFirstStep();\n            case 1:\n                return getSecondStep();\n            default:\n                return <div/>\n        }\n    }\n\n    const getFirstStep = () => {\n        if (add || editSetup) {\n            return <div className=\"create-inflation-component\">\n                <div className=\"row mb-4\">\n                    <CreateSetup onCancel={() => { setAdd(false); setEditSetup(null); }} onFinish={(setup) => addSetup(setup)} setup={editSetup} />\n                </div>\n            </div>;\n        }\n    \n        return (\n            <div className=\"create-inflation-component\">\n                <div className=\"row mb-4\">\n                    { props.inflationSetups.length === 0 && <CreateSetup onFinish={(setup) => addSetup(setup)} /> }\n                    { props.inflationSetups.length > 0 && listSetups() }\n                </div>\n            </div>\n        );\n    }\n\n    const listSetups = () => {\n        return <div className=\"col-12 p-0\">\n            <div className=\"row flex-column align-items-start mb-4\">\n                <h6 className=\"text-secondary\"><b>Setup inflation contract</b></h6>\n                <p><b>Entry list</b></p>\n            </div>\n            {\n                props.inflationSetups.map((setup, i) => {\n                    return (\n                        <div key={i} className=\"row align-items-center text-left mb-md-2 mb-4\">\n                            <div className=\"col-md-9 col-12\">\n                                <b style={{fontSize: 14}}>{setup.title} ({setup.recurringExecution})</b>\n                            </div>\n                            <div className=\"col-md-3 col-12 flex\">\n                                <button className=\"btn btn-sm btn-outline-danger mr-1\" onClick={() => removeSetup(i)}><b>X</b></button> <button onClick={() => setEditSetup({ ...setup, index: i })} className=\"btn btn-sm btn-danger ml-1\"><b>EDIT</b></button>\n                            </div>\n                        </div>\n                    )\n                })\n            }\n            <div className=\"row justify-content-between mt-4\">\n                <div className=\"col-12 flex justify-content-start mb-4\">\n                    <button onClick={() => setAdd(true)} className=\"btn btn-light\">Add entry</button>\n                </div>\n                <div className=\"col-12 mt-4\">\n                    <button onClick={() => {\n                        props.inflationSetups.forEach((_, i) => props.removeInflationSetup(i));\n                    }} className=\"btn btn-light mr-4\">Cancel</button> <button onClick={() => setStep(step + 1)} className=\"btn btn-secondary ml-4\">Next</button>\n                </div>\n            </div>\n        </div>\n    }\n\n    const getSecondStep = () => {\n        return <div className=\"col-12 p-0\">\n            <div className=\"row flex-column align-items-start mb-4\">\n                <h6 className=\"text-secondary\"><b>Setup inflation contract</b></h6>\n                <p><b>Deploy</b></p>\n            </div>\n            <div className=\"row\">\n                <h6><b>Host</b></h6>\n            </div>\n            <div className=\"row mb-2\">\n                <p className=\"text-left text-small\">Lorem, ipsum dolor sit amet consectetur adipisicing elit. Omnis delectus incidunt laudantium distinctio velit reprehenderit quaerat, deserunt sint fugit ex consectetur voluptas suscipit numquam. Officiis maiores quaerat quod necessitatibus perspiciatis!</p>\n            </div>\n            <div className=\"row mb-4\">\n                <div className=\"col-12 p-0\">\n                    <select className=\"custom-select wusd-pair-select\" value={selectedHost} onChange={(e) => setSelectedHost(e.target.value)}>\n                        <option value=\"\">Choose an host..</option>\n                        <option value=\"deployed-contract\">Deployed Contract</option>\n                        <option value=\"deploy-contract\">Deploy Contract</option>\n                        <option value=\"wallet\">Wallet</option>\n                    </select>\n                </div>\n            </div>\n            <div className=\"row\">\n                <div className=\"col-12 mt-4\">\n                    <button onClick={() => {\n                        setStep(step - 1);\n                    }} className=\"btn btn-light mr-4\">Cancel</button> <button onClick={() => console.log('deploy')} className=\"btn btn-secondary ml-4\">Deploy</button>\n                </div>\n            </div>\n        </div>\n    }\n\n    return getSteps();\n}\n\nconst mapStateToProps = (state) => {\n    const { core, session } = state;\n    const { inflationContract, inflationSetups, entries, inflationCreationStep } = session;\n    return { dfoCore: core.dfoCore, inflationSetups, inflationContract, entries, inflationCreationStep };\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        setInflationContractStep: (index) => dispatch(setInflationContractStep(index)),\n        updateInflationContract: (contract) => dispatch(updateInflationContract(contract)),\n        addInflationSetup: (setup) => dispatch(addInflationSetup(setup)),\n        removeInflationSetup: (index) => dispatch(removeInflationSetup(index)),\n        addEntry: (entry) => dispatch(addEntry(entry)), \n        removeEntry: (index) => dispatch(removeEntry(index)),\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Create);","C:\\Users\\marco\\Documents\\BUIDL\\covenants-fe\\src\\pages\\wusd\\dapp\\components\\Mint.jsx",["332","333","334","335","336","337","338"],"import { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { useEffect } from 'react/cjs/react.development';\nimport { ApproveButton, Input } from '../../../../components';\n\nconst Mint = (props) => {\n    const [pair, setPair] = useState(\"\");\n    const [pairs, setPairs] = useState([]);\n    const [useLpToken, setUseLpToken] = useState(false);\n    const [lpTokenAmount, setLpTokenAmount] = useState(0);\n    const [firstAmount, setFirstAmount] = useState(0);\n    const [secondAmount, setSecondAmount] = useState(0);\n    const [firstTokenApproved, setFirstTokenApproved] = useState(false);\n    const [secondTokenApproved, setSecondTokenApproved] = useState(false);\n    const [firstTokenBalance, setFirstTokenBalance] = useState(0);\n    const [secondTokenBalance, setSecondTokenBalance] = useState(0);\n    const [lpTokenBalance, setLpTokenBalance] = useState(0);\n    const [lpTokenApproved, setLpTokenApproved] = useState(false);\n    const [wusdExtensionController, setWusdExtensionController] = useState(null);\n    const [loading, setLoading] = useState(false);\n\n    useEffect(() => {\n        getController();\n    }, [])\n\n    const getController = async () => {\n        setLoading(true);\n        try {\n            const contract = await props.dfoCore.getContract(props.dfoCore.getContextElement(\"WUSDExtensionControllerABI\"), props.dfoCore.getContextElement(\"WUSDExtensionControllerAddress\"));\n            console.log(contract);\n            setWusdExtensionController(contract);\n            const allowedAMMS = await contract.methods.allowedAMMs().call();\n            let allowedPairs = [];\n            await Promise.all(allowedAMMS.map(async (allowedAMM, ammIndex) => {\n                const { ammAddress, liquidityPools } = allowedAMM;\n                const pools = [];\n                await Promise.all(liquidityPools.map(async (liquidityPool, lpIndex) => {\n                    const ammContract = await props.dfoCore.getContract(props.dfoCore.getContextElement(\"AMMABI\"), ammAddress);\n                    const poolInfo = await ammContract.methods.byLiquidityPool(liquidityPool).call();\n                    const totalAmount = poolInfo['0'];\n                    const [token0Amount, token1Amount] = poolInfo['1'];\n                    const [token0, token1] = poolInfo['2'];\n                    const token0Contract = await props.dfoCore.getContract(props.dfoCore.getContextElement('ERC20ABI'), token0);\n                    const token1Contract = await props.dfoCore.getContract(props.dfoCore.getContextElement('ERC20ABI'), token1);\n                    const symbol0 = await token0Contract.methods.symbol().call();\n                    const symbol1 = await token1Contract.methods.symbol().call();\n                    const balance0 = await token0Contract.methods.balanceOf(props.dfoCore.address).call();\n                    const token0decimals = await token0Contract.methods.decimals().call();\n                    const balance1 = await token1Contract.methods.balanceOf(props.dfoCore.address).call();\n                    const token1decimals = await token1Contract.methods.decimals().call();\n                    const lpContract = await props.dfoCore.getContract(props.dfoCore.getContextElement('ERC20ABI'), liquidityPool);\n                    const balanceLp = await lpContract.methods.balanceOf(props.dfoCore.address).call();\n                    const decimalsLp = await lpContract.methods.decimals().call();\n                    setLpTokenBalance(props.dfoCore.toDecimals(balanceLp, parseInt(decimalsLp)));\n                    setFirstTokenBalance(props.dfoCore.toDecimals(balance0, parseInt(token0decimals)));\n                    setSecondTokenBalance(props.dfoCore.toDecimals(balance1, parseInt(token1decimals)));\n                    pools.push({ ammContract, ammIndex, lpIndex, totalAmount, token0Amount, token1Amount, liquidityPool, token0, token1, symbol0, symbol1, token0decimals, token1decimals, decimalsLp, token0Contract, token1Contract });\n                }));\n                allowedPairs = [...allowedPairs, ...pools ];\n            }))\n            setPairs(allowedPairs);\n        } catch (error) {\n            console.error(error);\n        } finally {\n            setLoading(false);\n        }\n    }\n\n    const onTokenApproval = (type) => {\n        switch (type) {\n            case 'first':\n                setFirstTokenApproved(true);\n            case 'second':\n                setSecondTokenApproved(true);\n            case 'lp':\n                setLpTokenApproved(true);\n            default:\n                return;\n        }\n    }\n\n    const setChosenPair = async (pairIndex) => {\n        setPair(pairIndex);\n        if (pairIndex) {\n            const chosenPair = pairs[pairIndex];\n            const allowance0 = await chosenPair.token0Contract.methods.allowance(props.dfoCore.address, props.dfoCore.getContextElement(\"WUSDExtensionControllerAddress\")).call();\n            const allowance1 = await chosenPair.token1Contract.methods.allowance(props.dfoCore.address, props.dfoCore.getContextElement(\"WUSDExtensionControllerAddress\")).call();\n            console.log(allowance0, allowance1);\n            setFirstTokenApproved(parseInt(allowance0) !== 0);\n            setSecondTokenApproved(parseInt(allowance1) !== 0);\n        }\n    }\n\n    const mintWUSD = async () => {\n        setLoading(true);\n        try {\n            if (firstAmount > 0 && secondAmount > 0) {\n                const chosenPair = pairs[pair];\n                const { ammIndex, lpIndex, token0Contract, token1Contract, token0decimals, token1decimals } = chosenPair;\n                await wusdExtensionController.methods.addLiquidity(ammIndex, lpIndex, props.dfoCore.fromDecimals(lpTokenAmount.toString(), 18).toString(), false).send({ from: props.dfoCore.address, gasLimit: 1000000 });\n                const balance0 = await token0Contract.methods.balanceOf(props.dfoCore.address).call();\n                const balance1 = await token1Contract.methods.balanceOf(props.dfoCore.address).call();\n                setFirstTokenBalance(props.dfoCore.toDecimals(balance0, parseInt(token0decimals)));\n                setSecondTokenBalance(props.dfoCore.toDecimals(balance1, parseInt(token1decimals)));\n            } else if (lpTokenAmount > 0) {\n                \n            } else {\n                return;\n            }\n            setFirstAmount(0);\n            setSecondAmount(0);\n            setLpTokenAmount(0);\n        } catch (error) {\n            console.error(error);\n        } finally {\n            setLoading(false);\n        }\n    }\n\n    const updateFirstAmount = async (amount) => {\n        if (!amount) return;\n        setFirstAmount(amount);\n        const chosenPair = pairs[pair];\n        const { ammContract, liquidityPool, token0, token0decimals, token1decimals, decimalsLp } = chosenPair;\n        const amount0 = props.dfoCore.fromDecimals(amount.toString(), token0decimals).toString();\n\n        const res = await ammContract.methods.byTokenAmount(liquidityPool, token0, props.dfoCore.toFixed(amount0)).call();\n        const { tokensAmounts, liquidityPoolAmount } = res;\n\n        const fixedSecondAmount = props.dfoCore.toDecimals(tokensAmounts[1], token1decimals);\n        const fixedLpAmount = props.dfoCore.toDecimals(liquidityPoolAmount, decimalsLp);\n\n        setSecondAmount(fixedSecondAmount);\n        setLpTokenAmount(fixedLpAmount);\n    }\n\n    const updateSecondAmount = async (amount) => {\n        if (!amount) return;\n        setSecondAmount(amount);\n        const chosenPair = pairs[pair];\n        const { ammContract, liquidityPool, token1, token0decimals, token1decimals, decimalsLp } = chosenPair;\n        const amount1 = props.dfoCore.fromDecimals(amount.toString(), token1decimals).toString();\n\n        const res = await ammContract.methods.byTokenAmount(liquidityPool, token1, props.dfoCore.toFixed(amount1)).call();\n\n        const { tokensAmounts, liquidityPoolAmount } = res;\n\n        const fixedFirstAmount = props.dfoCore.toDecimals(tokensAmounts[0], token0decimals);\n        const fixedLpAmount = props.dfoCore.toDecimals(liquidityPoolAmount, decimalsLp);\n\n        setLpTokenAmount(fixedLpAmount);\n        setFirstAmount(fixedFirstAmount);\n    }\n\n    const updateLpAmount = async (amount) => {\n        if (!amount) return;\n        setLpTokenAmount(amount);\n        const chosenPair = pairs[pair];\n        const { ammContract, liquidityPool, token0decimals, token1decimals } = chosenPair;\n        const lpAmount = props.dfoCore.fromDecimals(amount.toString(), 18).toString();\n        const res = await ammContract.methods.byLiquidityPoolAmount(liquidityPool, lpAmount).call();\n        const { tokensAmounts } = res;\n        setFirstAmount(props.dfoCore.toDecimals(tokensAmounts[0], token0decimals));\n        setSecondAmount(props.dfoCore.toDecimals(tokensAmounts[1], token1decimals));\n    }\n\n    const getEstimatedAmount = () => {\n        if (firstAmount != 0 && secondAmount != 0) {\n            return parseFloat(firstAmount) + parseFloat(secondAmount);\n        }\n        return 0;\n    }\n\n    const getLpToken = () => {\n        const chosenPair = pairs[pair];\n\n        return (\n            <div className=\"col-12 mb-4\">\n                <Input showMax={true} step={0.0001} value={lpTokenAmount} balance={lpTokenBalance} min={0} onChange={(e) => updateLpAmount(parseFloat(e.target.value))} showCoin={true} showBalance={true} name={`${chosenPair.symbol0}/${chosenPair.symbol1}`} />\n            </div>\n        )\n    }\n\n    const getMultipleTokens = () => {\n        \n        return (\n            <>\n                <div className=\"col-12 mb-4\">\n                    <Input showMax={true} step={0.0001}  value={firstAmount} address={pairs[pair].token0} balance={firstTokenBalance} min={0} onChange={(e) => updateFirstAmount(parseFloat(e.target.value))} showCoin={true} showBalance={true} name={pairs[pair].symbol0} />\n                </div>\n                <div className=\"col-12 mb-2\">\n                    <p><b>And</b></p>\n                </div>\n                <div className=\"col-12 mb-4\">\n                    <Input showMax={true} step={0.0001}  value={secondAmount} address={pairs[pair].token1} balance={secondTokenBalance} min={0} onChange={(e) => updateSecondAmount(parseFloat(e.target.value))} showCoin={true} showBalance={true} name={pairs[pair].symbol1} />\n                </div>\n            </>\n        )\n    }\n\n    const getButtons = () => {\n        return (\n            <div className=\"col-12 mb-4\">\n                <div className=\"row\">\n                    <div className=\"col-12 col-md-6\">\n                        {\n                            !firstTokenApproved ? \n                                <ApproveButton contract={pairs[pair].token0Contract} from={props.dfoCore.address} spender={props.dfoCore.getContextElement(\"WUSDExtensionControllerAddress\")} onError={(error) => console.log(error)} onApproval={() => onTokenApproval('first')} text={`Approve ${pairs[pair].symbol0}`} />\n                                :\n                                !secondTokenApproved ?\n                                    <ApproveButton contract={pairs[pair].token1Contract} from={props.dfoCore.address} spender={props.dfoCore.getContextElement(\"WUSDExtensionControllerAddress\")} onError={(error) => console.log(error)} onApproval={() => onTokenApproval('second')} text={`Approve ${pairs[pair].symbol1}`} />\n                                : <ApproveButton disabled={true} onError={(error) => console.log(error)} />\n                        }\n                    </div>\n                    <div className=\"col-12 col-md-6\">\n                        <button className=\"btn btn-secondary\" onClick={() => mintWUSD()} disabled={(!firstAmount || !secondAmount) && !lpTokenAmount}>Mint</button>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n\n    if (loading) {\n        return (\n            <div className=\"mint-component\">\n                <div className=\"row\">\n                    <div className=\"col-12 justify-content-center\">\n                        <div className=\"spinner-border text-secondary\" role=\"status\">\n                            <span className=\"visually-hidden\"></span>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n\n    return (\n        <div className=\"mint-component\">\n            <div className=\"row\">\n                <div className=\"col-12 mb-4\">\n                    <select className=\"custom-select wusd-pair-select\" value={pair} onChange={(e) => setChosenPair(e.target.value)}>\n                        <option value=\"\">Choose pair..</option>\n                        {\n                            pairs.map((pair, index) => {\n                                return <option key={index} value={index}>{pair.symbol0}/{pair.symbol1}</option>\n                            })\n                        }\n                    </select>\n                    <div className=\"form-check mt-4\">\n                        <input className=\"form-check-input\" type=\"checkbox\" value={useLpToken} onChange={(e) => setUseLpToken(e.target.checked)} id=\"useLpToken\" disabled={!pair} />\n                        <label className=\"form-check-label\" htmlFor=\"useLpToken\">\n                            Use liquidity pool token\n                        </label>\n                    </div>\n                </div>\n                {\n                    pair ? useLpToken ? getLpToken() : getMultipleTokens() : <div/>\n                }\n                {\n                    pair ? <div className=\"col-12 mb-4\">\n                        <div className=\"row justify-content-center\">\n                            <b>For</b>\n                        </div>\n                        <div className=\"row justify-content-center\">\n                            { getEstimatedAmount() } WUSD\n                        </div>\n                    </div> : <div/>\n                }\n                {\n                    pair ? getButtons() : <div/>\n                }\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    const { core } = state;\n    return { dfoCore: core.dfoCore };\n}\n\nexport default connect(mapStateToProps)(Mint);","C:\\Users\\marco\\Documents\\BUIDL\\covenants-fe\\src\\pages\\wusd\\dapp\\components\\Burn.jsx",["339","340","341","342","343","344","345","346","347","348","349"],"import { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { ApproveButton, Input } from '../../../../components';\nimport { ethers } from 'ethers';\n\nconst abi = new ethers.utils.AbiCoder();\n\nconst Burn = (props) => {\n    const [pair, setPair] = useState(\"\");\n    const [pairs, setPairs] = useState([]);\n    const [getLpToken, setGetLpToken] = useState(false);\n    const [amount, setAmount] = useState(0);\n    const [firstTokenBalance, setFirstTokenBalance] = useState(0);\n    const [secondTokenBalance, setSecondTokenBalance] = useState(0);\n    const [lpTokenBalance, setLpTokenBalance] = useState(0);\n    const [wusdAmount, setWusdAmount] = useState(0);\n    const [wusdContract, setWusdContract] = useState(null);\n    const [wusdBalance, setWusdBalance] = useState(0);\n    const [wusdApproved, setWusdApproved] = useState(false);\n    const [estimatedToken0, setEstimatedToken0] = useState(0);\n    const [estimatedToken1, setEstimatedToken1] = useState(0);\n    const [estimatedLpToken, setEstimatedLpToken] = useState(0);\n    const [wusdExtensionController, setWusdExtensionController] = useState(null);\n    const [loading, setLoading] = useState(false);\n\n    useEffect(() => {\n        getController();\n    }, [])\n\n    const getController = async () => {\n        setLoading(true);\n        try {\n            const contract = await props.dfoCore.getContract(props.dfoCore.getContextElement(\"WUSDExtensionControllerABI\"), props.dfoCore.getContextElement(\"WUSDExtensionControllerAddress\"));\n            console.log(contract);\n            setWusdExtensionController(contract);\n            const allowedAMMS = await contract.methods.allowedAMMs().call();\n            let allowedPairs = [];\n            await Promise.all(allowedAMMS.map(async (allowedAMM, ammIndex) => {\n                const { ammAddress, liquidityPools } = allowedAMM;\n                const pools = [];\n                await Promise.all(liquidityPools.map(async (liquidityPool, lpIndex) => {\n                    const ammContract = await props.dfoCore.getContract(props.dfoCore.getContextElement(\"AMMABI\"), ammAddress);\n                    const poolInfo = await ammContract.methods.byLiquidityPool(liquidityPool).call();\n                    const totalAmount = poolInfo['0'];\n                    const [token0Amount, token1Amount] = poolInfo['1'];\n                    const [token0, token1] = poolInfo['2'];\n                    const token0Contract = await props.dfoCore.getContract(props.dfoCore.getContextElement('ERC20ABI'), token0);\n                    const token1Contract = await props.dfoCore.getContract(props.dfoCore.getContextElement('ERC20ABI'), token1);\n                    const symbol0 = await token0Contract.methods.symbol().call();\n                    const symbol1 = await token1Contract.methods.symbol().call();\n                    const balance0 = await token0Contract.methods.balanceOf(props.dfoCore.address).call();\n                    const token0decimals = await token0Contract.methods.decimals().call();\n                    const balance1 = await token1Contract.methods.balanceOf(props.dfoCore.address).call();\n                    const token1decimals = await token1Contract.methods.decimals().call();\n                    const lpContract = await props.dfoCore.getContract(props.dfoCore.getContextElement('ERC20ABI'), liquidityPool);\n                    const lpSymbol = await lpContract.methods.symbol().call();\n                    const decimalsLp = await lpContract.methods.decimals().call();\n                    const approval = await lpContract.methods.allowance(props.dfoCore.address, props.dfoCore.getContextElement(\"WUSDExtensionControllerAddress\")).call();\n                    setFirstTokenBalance(props.dfoCore.toDecimals(balance0, parseInt(token0decimals)));\n                    setSecondTokenBalance(props.dfoCore.toDecimals(balance1, parseInt(token1decimals)));\n                    pools.push({ ammContract, ammIndex, lpContract, lpIndex, lpSymbol, totalAmount, token0Amount, token1Amount, liquidityPool, token0, token1, symbol0, symbol1, token0decimals, token1decimals, decimalsLp, token0Contract, token1Contract, lpTokenApproved: parseInt(approval) !== 0 });\n                }));\n                allowedPairs = [...allowedPairs, ...pools ];\n            }))\n            const wusdInfo = await contract.methods.wusdInfo().call();  \n            const wusdContract = await props.dfoCore.getContract(props.dfoCore.getContextElement(\"ERC20ABI\"), props.dfoCore.getContextElement(\"WUSDAddress\"));\n            const balance = await wusdContract.methods.balanceOf(props.dfoCore.address).call();\n            const approval = await wusdContract.methods.allowance(props.dfoCore.address, props.dfoCore.getContextElement(\"WUSDExtensionControllerAddress\")).call();\n            setWusdContract(wusdContract);\n            console.log(approval);\n            setWusdApproved(parseInt(approval) !== 0);\n            setWusdBalance(props.dfoCore.toDecimals(balance, await wusdContract.methods.decimals().call()));\n            setPairs(allowedPairs);\n        } catch (error) {\n            console.error(error);\n        } finally {\n            setLoading(false);\n        }\n    }\n\n    const onTokenApproval = (type) => {\n        switch (type) {\n            case 'wusd':\n                setWusdApproved(true);\n            default:\n                setPairs(pairs.map((pair, i) => i === parseInt(type) ? {...pair, lpTokenApproved: true} : pair));\n                return;\n        }\n    }\n\n    const clearTokens = () => {\n        setEstimatedToken0(0);\n        setEstimatedToken1(0);\n        setEstimatedLpToken(0);\n    }\n\n    const onWUSDAmountChange = async (amount) => {\n        setAmount(amount);\n        if (!amount) {\n            clearTokens();\n            return;\n        }\n        if (parseInt(amount) <= 0) {\n            clearTokens();\n            return;\n        }\n        const chosenPair = pairs[pair];\n        const { ammContract, liquidityPool, token0decimals, token1decimals, decimalsLp } = chosenPair;\n        const wusdAmount = props.dfoCore.fromDecimals(amount.toString(), 18);\n\n        const res = await ammContract.methods.byLiquidityPool(liquidityPool).call();\n\n        const liquidityPoolAmount = res[0];\n        const tokensAmounts = res[1];\n        const liquidityPoolTokens = res[2];\n        const updatedSecondTokenAmount = props.dfoCore.normalizeValue(tokensAmounts[1], token1decimals);\n\n        const ratio = tokensAmounts[0] / updatedSecondTokenAmount;\n        const ratio2 = updatedSecondTokenAmount / tokensAmounts[0];\n\n        const wusdRealAmount = (parseInt(wusdAmount) * ratio) / 2;\n\n        const result = await ammContract.methods.byTokenAmount(liquidityPool, liquidityPoolTokens[0], props.dfoCore.toFixed(wusdRealAmount).toString()).call();\n        const [token0, token1] = result.tokensAmounts;\n        const stableCoinOutput = parseInt(token0) + parseInt(token1 * 10**12);\n        const rate = parseInt(wusdAmount) / stableCoinOutput;\n        const lpResult = await ammContract.methods.byTokenAmount(liquidityPool, liquidityPoolTokens[0], props.dfoCore.toFixed(parseInt(token0) * rate).toString()).call();\n\n        setEstimatedToken0(props.dfoCore.toDecimals(props.dfoCore.toFixed(parseInt(token0) * rate), token0decimals));\n        setEstimatedToken1(props.dfoCore.toDecimals(props.dfoCore.toFixed(parseInt(token1) * rate), token1decimals));\n        setEstimatedLpToken(props.dfoCore.toDecimals(lpResult.liquidityPoolAmount, decimalsLp));\n    }\n\n    const burnWUSD = async () => {\n        const info = await wusdExtensionController.methods.wusdInfo().call();\n        const collectionAddress = info['0'];\n        const wusdObjectId = info['1'];\n\n        const wusdCollection = await props.dfoCore.getContract(props.dfoCore.getContextElement('INativeV1ABI'), collectionAddress);\n\n        console.log(props.dfoCore.fromDecimals(estimatedLpToken, 18));\n        const burnData = abi.encode([\"uint256\",\"uint256\",\"uint256\",\"bool\"], [pairs[pair].ammIndex, pairs[pair].lpIndex, props.dfoCore.fromDecimals(estimatedLpToken, 18), !getLpToken])\n        const data = abi.encode([\"uint256\", \"bytes\"], [0, burnData]);\n        console.log(props.dfoCore.fromDecimals(amount, 18).toString());\n        const gasLimit = await wusdCollection.methods.safeBatchTransferFrom(props.dfoCore.address, wusdExtensionController.options.address, [wusdObjectId], [props.dfoCore.fromDecimals(amount, 18).toString()], abi.encode([\"bytes[]\"], [[data]])).estimateGas({ from: props.dfoCore.address});\n        const res = await wusdCollection.methods.safeBatchTransferFrom(props.dfoCore.address, wusdExtensionController.options.address, [wusdObjectId], [props.dfoCore.fromDecimals(amount, 18).toString()], abi.encode([\"bytes[]\"], [[data]])).send({ from: props.dfoCore.address, gasLimit });\n        console.log(res);\n        await getController();\n    }\n\n    const getWUSDToken = () => {\n        return (\n            <div className=\"col-12 mb-4\">\n                <Input showMax={true} value={amount} balance={wusdBalance} min={0} onChange={(e) => onWUSDAmountChange(e.target.value)} address={props.dfoCore.getContextElement(\"WUSDAddress\")} showCoin={true} showBalance={true} name=\"WUSD\" />\n            </div>\n        )\n    }\n\n    const getBurnAmount = () => {\n        if (!pair) {\n            return (<div/>);\n        }\n        \n        if (getLpToken) {\n            return (\n                <div className=\"col-12 mb-4\">\n                    <div className=\"row justify-content-center\">\n                        <b>For</b>\n                    </div>\n                    <div className=\"row justify-content-center\">\n                        { estimatedLpToken } { pairs[pair].symbol0 }/{ pairs[pair].symbol1 }\n                    </div>\n                </div>\n            )\n        }\n        return (\n            <div className=\"col-12 mb-4\">\n                <div className=\"row justify-content-center\">\n                    <b>For</b>\n                </div>\n                <div className=\"row justify-content-center\">\n                    { estimatedToken0 } { pairs[pair].symbol0 } / { estimatedToken1 } { pairs[pair].symbol1 }\n                </div>\n            </div>\n        )\n    }\n\n    const getButtons = () => {\n        console.log(pairs[pair]);\n        return (\n            <div className=\"col-12 mb-4\">\n                <div className=\"row justify-content-center\">\n                    {\n                        !wusdApproved ? <div className=\"col-12 col-md-6\">\n                            <ApproveButton contract={wusdContract} from={props.dfoCore.address} spender={props.dfoCore.getContextElement(\"WUSDExtensionControllerAddress\")} onError={(error) => console.log(error)} onApproval={() => onTokenApproval('wusd')} text={`Approve WUSD`} />\n                        </div> : <div/>\n                    }\n                    {\n                        !pairs[pair].lpTokenApproved ? <div className=\"col-12 col-md-6\">\n                            <ApproveButton contract={pairs[pair].lpContract} from={props.dfoCore.address} spender={props.dfoCore.getContextElement(\"WUSDExtensionControllerAddress\")} onError={(error) => console.log(error)} onApproval={() => onTokenApproval(pair)} text={`Approve ${pairs[pair].lpSymbol}`} />\n                        </div> : <div/>\n                    }\n                    <div className=\"col-12 col-md-6\">\n                        <button onClick={() => burnWUSD()} className=\"btn btn-secondary\">Burn</button>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n    \n    if (loading) {\n        return (\n            <div className=\"explore-component\">\n                <div className=\"row\">\n                    <div className=\"col-12 justify-content-center\">\n                        <div className=\"spinner-border text-secondary\" role=\"status\">\n                            <span className=\"visually-hidden\"></span>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n\n    return (\n        <div className=\"burn-component\">\n            <div className=\"row\">\n                <div className=\"col-12 mb-4\">\n                    <select className=\"custom-select wusd-pair-select\" value={pair} onChange={(e) => setPair(e.target.value)}>\n                        <option value=\"\">Choose pair..</option>\n                        {\n                            pairs.map((pair, index) => {\n                                return <option key={index} value={index}>{pair.symbol0}/{pair.symbol1}</option>\n                            })\n                        }\n                    </select>\n                    <div className=\"form-check mt-4\">\n                        <input className=\"form-check-input\" type=\"checkbox\" value={getLpToken} onChange={(e) => setGetLpToken(e.target.checked)} id=\"getLpToken\" disabled={!pair} />\n                        <label className=\"form-check-label\" htmlFor=\"getLpToken\">\n                            Get liquidity pool token\n                        </label>\n                    </div>\n                </div>\n                {\n                    pair ? getWUSDToken() : <div/>\n                }\n                { getBurnAmount() }\n                {\n                    pair ? getButtons() : <div/>\n                }\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    const { core } = state;\n    return { dfoCore: core.dfoCore };\n}\n\nexport default connect(mapStateToProps)(Burn);","C:\\Users\\marco\\Documents\\BUIDL\\covenants-fe\\src\\pages\\wusd\\dapp\\components\\Stats.jsx",["350","351","352","353","354","355","356","357","358","359","360","361"],"import { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { ChevronDownIcon, ChevronUpIcon } from '@primer/octicons-react';\n\nconst Stats = (props) => {\n    const [showAdvanced, setShowAdvanced] = useState(false);\n    const [health, setHealth] = useState(100);\n    const [credit, setCredit] = useState(0);\n    const [debit, setDebit] = useState(0);\n    const [loading, setLoading] = useState(false);\n    const [farmTreasury, setFarmTreasury] = useState(0);\n    const [farmReward, setFarmReward] = useState(10);\n    const [newFarmReward, setNewFarmReward] = useState(20);\n    const [unifiTreasury, setUnifiTreasury] = useState(1000.15);\n    const [rebalanceReward, setRebalanceReward] = useState(50);\n    const [currentBlock, setCurrentBlock] = useState(0);\n    const [rebalanceBlock, setRebalanceBlock] = useState(0);\n    const [usdRebalanceByDebit, setUsdRebalanceByDebit] = useState(0);\n    const [selectedUsdn, setSelectedUsdn] = useState(\"\");\n    const [totalSupply, setTotalSupply] = useState(0);\n    const [wusdContract, setWusdContract] = useState(null);\n    const [x2USDContract, setx2USDContract] = useState(null);\n    const [x5USDContract, setx5USDContract] = useState(null);\n    const [x2USDNoteControllerContract, setx2USDNoteControllerContract] = useState(null);\n    const [x5USDNoteControllerContract, setx5USDNoteControllerContract] = useState(null);\n    const [x2USDSupply, setx2USDSupply] = useState(0);\n    const [x2USDTreasury, setx2USDTreasury] = useState(0);\n    const [x5USDSupply, setx5USDSupply] = useState(0);\n    const [x5USDTreasury, setx5USDTreasury] = useState(0);\n    const [wusdExtensionController, setWusdExtensionController] = useState(null);\n    const [collateralData, setCollateralData] = useState([]);\n\n    // TODO add health calc\n    useEffect(() => {\n        getStats();\n    }, []);\n\n    const getStats = async () => {\n        setLoading(true);\n        try {\n            const contract = await props.dfoCore.getContract(props.dfoCore.getContextElement(\"WUSDExtensionControllerABI\"), props.dfoCore.getContextElement(\"WUSDExtensionControllerAddress\"));\n            setWusdExtensionController(contract);\n            const wusdContract = await props.dfoCore.getContract(props.dfoCore.getContextElement(\"ERC20ABI\"), props.dfoCore.getContextElement(\"WUSDAddress\"));\n            setWusdContract(wusdContract);\n            const supply = await wusdContract.methods.totalSupply().call();\n            const decimals = await wusdContract.methods.decimals().call();\n            setTotalSupply(supply);\n            const differences = await contract.methods.differences().call();\n            \n            setCredit(props.dfoCore.toDecimals(differences.credit, decimals));\n            setDebit(props.dfoCore.toDecimals(differences.debt, decimals));\n\n            const wusdNote2Info = await contract.methods.wusdNote2Info().call();\n            const wusdNote5Info = await contract.methods.wusdNote5Info().call();\n            const x2USDcontract = await props.dfoCore.getContract(props.dfoCore.getContextElement(\"IEthItemInteroperableInterfaceABI\"), wusdNote2Info[2]);\n            const x5USDcontract = await props.dfoCore.getContract(props.dfoCore.getContextElement(\"IEthItemInteroperableInterfaceABI\"), wusdNote5Info[2]);\n            const x2USDNoteController = await props.dfoCore.getContract(props.dfoCore.getContextElement(\"WUSDNoteControllerABI\"), wusdNote2Info[3]);\n            const x5USDNoteController = await props.dfoCore.getContract(props.dfoCore.getContextElement(\"WUSDNoteControllerABI\"), wusdNote5Info[3]);\n            \n            setx2USDContract(x2USDcontract);\n            setx2USDContract(x5USDcontract);\n            setx2USDNoteControllerContract(x2USDNoteController);\n            setx5USDNoteControllerContract(x5USDNoteController);\n\n            setx2USDSupply(props.dfoCore.toDecimals(await x2USDcontract.methods.totalSupply().call(), decimals));\n            setx5USDSupply(props.dfoCore.toDecimals(await x5USDcontract.methods.totalSupply().call(), decimals));\n            setx2USDTreasury(props.dfoCore.toDecimals(await wusdContract.methods.balanceOf(x2USDNoteController.options.address).call(), decimals));\n            setx5USDTreasury(props.dfoCore.toDecimals(await wusdContract.methods.balanceOf(x5USDNoteController.options.address).call(), decimals));\n            \n            const info = await contract.methods.rebalanceByCreditReceiversInfo().call();\n            setUnifiTreasury(props.dfoCore.toDecimals(info[2], decimals));\n            const lastRebalanceBlock = await contract.methods.lastRebalanceByCreditBlock().call();\n            const interval = await contract.methods.rebalanceByCreditBlockInterval().call();\n            setCurrentBlock(await props.dfoCore.getBlockNumber());\n            if (lastRebalanceBlock === \"0\") {\n                setRebalanceBlock(await props.dfoCore.getBlockNumber());\n            } else {\n                setRebalanceBlock(parseInt(lastRebalanceBlock) * parseInt(interval));\n            }\n            await getCollateralData(contract, supply);\n        } catch (error) {\n            console.error(error);\n        } finally {\n            setLoading(false);\n        }\n    }\n\n    const getCollateralData = async (contract, supply) => {\n        const ammAggregatorContract = await props.dfoCore.getContract(props.dfoCore.getContextElement('AMMAggregatorABI'), props.dfoCore.getContextElement('ammAggregatorAddress'));\n        const allowedAMMs = await contract.methods.allowedAMMs().call();\n        const data = {\n            collateral: {},\n            liquidity: {},\n            total: 0,\n        };\n        const extensionAddress = await contract.methods.extension().call();\n        await Promise.all(allowedAMMs.map(async (allowedAMM) => {\n            const ammContract = await props.dfoCore.getContract(props.dfoCore.getContextElement('AMMABI'), allowedAMM.ammAddress);\n            const info = await ammContract.methods.info().call();\n            const basePool = { ammAddress: allowedAMM.ammAddress, info: { name: info[0], version: info[1] } };\n            await Promise.all(allowedAMM.liquidityPools.map(async (liquidityPool) => {\n                const balanceOf = await ammAggregatorContract.methods.balanceOf(liquidityPool, extensionAddress).call();\n                \n                await Promise.all(balanceOf['1'].map(async (balance, index) => {\n                    const address = balanceOf['2'][index];\n                    \n                    const currentToken = await props.dfoCore.getContract(props.dfoCore.getContextElement('ERC20ABI'), address);\n                    const symbol = await currentToken.methods.symbol().call();\n                    const decimals = await currentToken.methods.decimals().call();\n                    const value = props.dfoCore.normalizeValue(balance, decimals);\n                    data.total += value;\n                    if (!data.liquidity[basePool.info.name]) {\n                        data.liquidity[basePool.info.name] = value;\n                    } else {\n                        data.liquidity[basePool.info.name] += value;\n                    }\n                    if (!data.collateral[symbol]) {\n                        data.collateral[symbol] = value;\n                    } else {\n                        data.collateral[symbol] += value;\n                    }\n                }))\n            }))\n        }))\n        setCollateralData(data);\n        await getHealth(data, supply);\n    }\n\n    const getHealth = async (data, supply) => {\n        const ratio = data.total / parseInt(supply);\n        setHealth(props.dfoCore.toDecimals(100 * ratio, 0, 2));\n    }\n\n    const rebalanceByCredit = async () => {\n        try {\n            const gasLimit = await wusdExtensionController.methods.rebalanceByCredit().estimateGas({ from: props.dfoCore.address });\n            await wusdExtensionController.methods.rebalanceByCredit().send({ from: props.dfoCore.address, gasLimit });\n            await getStats();\n        } catch (error) {\n            console.error(error);\n        }\n    }\n\n    const getHealthBarStatus = () => {\n        return {\n            border: `1px ${health > 90 ? \"#1abc9c\" : health > 50 ? \"#f1c40f\" : \"#e74c3c\"} solid`,\n            background: `linear-gradient(90deg, ${health > 90 ? \"#1abc9c\" : health > 50 ? \"#f1c40f\" : \"#e74c3c\"} 65%, #fff 35%)`\n        }\n    }\n\n    const getFirstCol = () => {\n        return (\n            <div className=\"col-3 text-left\">\n                <div className=\"row\">\n                    <div className=\"col-12\">\n                        <p><b>uSD: $1</b></p>\n                    </div>\n                </div>\n                <hr />\n                <div className=\"row\">\n                    <div className=\"col-12\">\n                        <div className=\"row mb-3\">\n                            <div className=\"col-12\">\n                                <b>Supply</b>\n                            </div>\n                            <div className=\"col-12\" style={{wordBreak: 'break-word'}}>\n                                { totalSupply ? props.dfoCore.toDecimals(props.dfoCore.toFixed(totalSupply), 18) : totalSupply } WUSD\n                            </div>\n                        </div>\n                        <div className=\"row mb-3\">\n                            <div className=\"col-12\">\n                                <b>Collateral</b>\n                            </div>\n                            <div className=\"col-12\">\n                                {\n                                    (collateralData && collateralData.collateral) ?\n                                        Object.entries(collateralData.collateral).map((entry, i) => {\n                                            return <p>{props.dfoCore.toDecimals(props.dfoCore.toFixed(entry[1]).toString())} {entry[0]}</p>\n                                        })\n                                    : <div/>\n                                }\n                            </div>\n                        </div>\n                        <div className=\"row mb-3\">\n                            <div className=\"col-12\">\n                                <b>Liquidity</b>\n                            </div>\n                            <div className=\"col-12\">\n                                {\n                                    (collateralData && collateralData.liquidity) ?\n                                        Object.entries(collateralData.liquidity).map((entry, i) => {\n                                            return <p>{entry[0]}: {(entry[1]/collateralData.total) * 100}%</p>\n                                        })\n                                    : <div/>\n                                }\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n\n    const getSecondCol = () => {\n        return (\n            <div className=\"col-9 text-left\">\n                <div className=\"row mb-4\">\n                    <div className=\"col-12 health-bar\" style={getHealthBarStatus()}>\n                        Health: {health}%\n                    </div>\n                </div>\n                <div className=\"my-4\" />\n                <div className=\"row mb-4\">\n                    <div className=\"col-6\">\n                        <b>Credit</b>\n                        <br/>\n                        {credit} uSD\n                    </div>\n                    <div className=\"col-6\">\n                        <b>Debit</b>\n                        <br/>\n                        {debit} uSD\n                    </div>\n                </div>\n                <div className=\"row mb-4\">\n                    <div className=\"col-6\">\n                        <b>x2USD supply</b>\n                        <br/>\n                        {x2USDSupply}\n                    </div>\n                    <div className=\"col-6\">\n                        <b>x2USD treasury</b>\n                        <br/>\n                        {x2USDTreasury}\n                    </div>\n                </div>\n                <div className=\"row mb-4\">\n                    <div className=\"col-6\">\n                        <b>x5USD supply</b>\n                        <br/>\n                        {x5USDSupply}\n                    </div>\n                    <div className=\"col-6\">\n                        <b>x5USD treasury</b>\n                        <br/>\n                        {x5USDTreasury}\n                    </div>\n                </div>\n                <div className=\"row mb-4\">\n                    <div className=\"col-6\">\n                        <b>Farm treasury</b>\n                        <br/>\n                        {farmTreasury} uSD\n                    </div>\n                    <div className=\"col-6\">\n                        <b>Farm reward</b>\n                        <br/>\n                        {farmReward} uSD per block\n                    </div>\n                </div>\n            </div>\n        )\n    }\n\n    const getAdvancedCol = () => {\n        return (\n            <div className=\"col-12\">\n                <div className=\"row flex justify-content-center\">\n                    <p onClick={() => setShowAdvanced(!showAdvanced)} className=\"text-secondary wusd-stats-advanced\">Advanced {showAdvanced ? <ChevronDownIcon /> : <ChevronUpIcon /> }</p>\n                </div>\n                {\n                    showAdvanced ? \n                    <>\n                        <div className=\"container\">\n                            { getAdvancedRow() }\n                            <div className=\"row\">\n                                <div className=\"col-12\">\n                                    <div className=\"row mb-2\">\n                                        <div className=\"col-12\">\n                                            <b>Farm Reward rebalance</b>\n                                            <br/>\n                                            next reward: {newFarmReward} uSD per block\n                                        </div>\n                                    </div>\n                                    <div className=\"row justify-content-center\">\n                                        <button className=\"btn btn-outline-secondary\">Rebalance</button>\n                                    </div>\n                                </div>\n                            </div>   \n                        </div>\n                    </> : <div/>\n                }\n            </div>\n        )\n    } \n\n    const getAdvancedRow = () => {\n        if (credit > debit) {\n            return (\n                <>\n                    <div className=\"row mb-4\">\n                        <div className=\"col-6 text-left\">\n                            <b>Available credit</b>\n                            <br/>\n                            {farmTreasury} uSD Farm treasury\n                            <br/>\n                            {x2USDTreasury + x5USDTreasury} uSDN treasury\n                            <br/>\n                            {unifiTreasury} Unifi treasury\n                            <br/>\n                            {parseFloat(credit) - parseFloat(unifiTreasury) - parseFloat(x2USDTreasury) - parseFloat(x5USDTreasury) - parseFloat(farmTreasury)} uSD rebalance reward\n                        </div>\n                        <div className=\"col-6\">\n                            {\n                                rebalanceBlock <= currentBlock ? <>\n                                    <div className=\"row mb-2\">\n                                        <div className=\"col-12\">\n                                            <b>Rebalance by credit</b>\n                                            <br/>\n                                            Rebalance block: #{rebalanceBlock}\n                                        </div>\n                                    </div>\n                                    <div className=\"row justify-content-center mb-2\">\n                                        <button className=\"btn btn-outline-secondary\" onClick={() => rebalanceByCredit()} disabled={rebalanceBlock > currentBlock}>Rebalance</button>\n                                    </div>\n                                    <div className=\"row justify-content-center\">\n                                       Reward: {credit * (2/100)}\n                                    </div>\n                                </> : <div className=\"row mb-2\">\n                                    <div className=\"col-12\">\n                                        <b>Rebalance by credit</b>\n                                        <br/>\n                                        Next rebalance block: #{rebalanceBlock}\n                                    </div>\n                                </div>\n                                \n                            }\n                            \n                        </div>\n                    </div>    \n                    <hr/>\n                </>\n            );\n        } else if (debit < credit) {\n            return (\n                <>\n                <div className=\"row mb-4\">\n                    <div className=\"col-6 text-left\">\n                        <b>Rebalance by debit</b>\n                        <div className=\"input-group mt-4\">\n                            <div className=\"input-group-prepend\">\n                                <button className=\"btn btn-secondary\" type=\"button\">MAX</button>\n                            </div>\n                            <input type=\"number\" className=\"form-control\" value={usdRebalanceByDebit} min={0} onChange={(e) => setUsdRebalanceByDebit(parseFloat(e.target.value))} />\n                            <div className=\"input-group-append\">\n                                <span className=\"input-group-text\" id=\"\"> uSD</span>\n                            </div>\n                        </div>\n                        <small className=\"form-text text-muted\">Balance: 0 uSD</small>\n                    </div>\n                    <div className=\"col-6\">\n                        <div className=\"row mb-2\">\n                            <div className=\"col-12\">\n                                <select className=\"custom-select wusd-pair-select\" value={selectedUsdn} onChange={(e) => setSelectedUsdn(e.target.value)}>\n                                    <option value=\"\">Choose uSD..</option>\n                                    <option value=\"x2\">x2USD</option>\n                                    <option value=\"x5\">x5USD</option>\n                                </select>\n                                {\n                                    selectedUsdn ? \n                                    <div className=\"mt-2\">\n                                        For\n                                        <br/>\n                                        { selectedUsdn === 'x2' ? \"700 x2USD\" : \"500 x5USD\"}\n                                    </div> : <div/>\n                                }\n                                \n                            </div>\n                        </div>\n                        {\n                            selectedUsdn ? \n                            <div className=\"row justify-content-center\">\n                                <button className=\"btn btn-outline-secondary\" disabled={usdRebalanceByDebit === 0}>Rebalance</button>\n                            </div> : <div/>\n                        }\n                    </div>\n                </div>   \n                <hr/>\n                </>\n            );\n        } else {\n            return <div/>\n        }\n    }\n\n    if (loading) {\n        return (\n            <div className=\"col-12 justify-content-center\">\n                <div className=\"spinner-border text-secondary\" role=\"status\">\n                    <span className=\"visually-hidden\"></span>\n                </div>\n            </div>\n        )\n    }\n\n    return (\n        <div className=\"stats-container\">\n            <div className=\"row\">\n                { getFirstCol() }\n                { getSecondCol() }\n            </div>\n            <hr />\n            <div className=\"row\">\n                { getAdvancedCol() }\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    const { core } = state;\n    return { dfoCore: core.dfoCore };\n}\n\nexport default connect(mapStateToProps)(Stats);","C:\\Users\\marco\\Documents\\BUIDL\\covenants-fe\\src\\pages\\wusd\\dapp\\components\\USDN.jsx",["362","363","364","365","366","367","368","369","370"],"import { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { ApproveButton, Input } from '../../../../components';\n\nconst USDN = (props) => {\n    const [x2Amount, setx2Amount] = useState(0);\n    const [x5Amount, setx5Amount] = useState(0);\n    const [wusdContract, setWusdContract] = useState(null);\n    const [x2USDContract, setx2USDContract] = useState(null);\n    const [x5USDContract, setx5USDContract] = useState(null);\n    const [x2USDNoteControllerContract, setx2USDNoteControllerContract] = useState(null);\n    const [x5USDNoteControllerContract, setx5USDNoteControllerContract] = useState(null);\n    const [wusdExtensionController, setWusdExtensionController] = useState(null);\n    const [x2Balance, setx2Balance] = useState(0);\n    const [x5Balance, setx5Balance] = useState(0);\n    const [x2Approved, setx2Approved] = useState(false);\n    const [x5Approved, setx5Approved] = useState(false);\n    const [x2USDSupply, setx2USDSupply] = useState(0);\n    const [x2USDTreasury, setx2USDTreasury] = useState(0);\n    const [x5USDSupply, setx5USDSupply] = useState(0);\n    const [x5USDTreasury, setx5USDTreasury] = useState(0);\n    const [x2USDNoteInfo, setx2USDNoteInfo] = useState(null);\n    const [x5USDNoteInfo, setx5USDNoteInfo] = useState(null);\n\n    useEffect(() => {\n        getData();\n    }, []);\n\n    const getData = async () => {\n        const contract = await props.dfoCore.getContract(props.dfoCore.getContextElement(\"WUSDExtensionControllerABI\"), props.dfoCore.getContextElement(\"WUSDExtensionControllerAddress\"));\n        setWusdExtensionController(contract);\n\n        const wusdContract = await props.dfoCore.getContract(props.dfoCore.getContextElement(\"ERC20ABI\"), props.dfoCore.getContextElement(\"WUSDAddress\"));\n        setWusdContract(wusdContract);\n        const decimals = await wusdContract.methods.decimals().call();\n\n        const wusdNote2Info = await contract.methods.wusdNote2Info().call();\n        const wusdNote5Info = await contract.methods.wusdNote5Info().call();\n        setx2USDNoteInfo(wusdNote2Info);\n        setx2USDNoteInfo(wusdNote5Info);\n\n        const x2USDcontract = await props.dfoCore.getContract(props.dfoCore.getContextElement(\"ERC20ABI\"), wusdNote2Info[2]);\n        const x5USDcontract = await props.dfoCore.getContract(props.dfoCore.getContextElement(\"ERC20ABI\"), wusdNote5Info[2]);\n        const x2USDNoteController = await props.dfoCore.getContract(props.dfoCore.getContextElement(\"WUSDNoteControllerABI\"), wusdNote2Info[3]);\n        const x5USDNoteController = await props.dfoCore.getContract(props.dfoCore.getContextElement(\"WUSDNoteControllerABI\"), wusdNote5Info[3]);\n        \n        setx2USDContract(x2USDcontract);\n        setx2USDContract(x5USDcontract);\n        setx2USDNoteControllerContract(x2USDNoteController);\n        setx5USDNoteControllerContract(x5USDNoteController);\n\n        setx2USDSupply(props.dfoCore.toDecimals(await x2USDcontract.methods.totalSupply().call(), decimals));\n        setx5USDSupply(props.dfoCore.toDecimals(await x5USDcontract.methods.totalSupply().call(), decimals));\n        setx2USDTreasury(props.dfoCore.toDecimals(await wusdContract.methods.balanceOf(x2USDNoteController.options.address).call(), decimals));\n        setx5USDTreasury(props.dfoCore.toDecimals(await wusdContract.methods.balanceOf(x5USDNoteController.options.address).call(), decimals));\n\n        const x2balance = await x2USDcontract.methods.balanceOf(props.dfoCore.address).call();\n        const x5balance = await x5USDcontract.methods.balanceOf(props.dfoCore.address).call();\n        setx2Balance(x2balance);\n        setx5Balance(x5balance);\n\n        const allowance0 = await x2USDcontract.methods.allowance(props.dfoCore.address, props.dfoCore.getContextElement(\"WUSDExtensionControllerAddress\")).call();\n        const allowance1 = await x5USDcontract.methods.allowance(props.dfoCore.address, props.dfoCore.getContextElement(\"WUSDExtensionControllerAddress\")).call();\n \n        setx2Approved(parseInt(allowance0) !== 0);\n        setx5Approved(parseInt(allowance1) !== 0);\n    }\n\n    const redeemX2 = async () => {\n        if (x2Amount > x2USDTreasury) return;\n        const x2USDCollection = await props.dfoCore.getContract(props.dfoCore.getContextElement('INativeV1ABI'), x2USDNoteInfo['0']);\n        console.log(x2USDCollection);\n        await x2USDCollection.methods.safeBatchTransferFrom(props.dfoCore.address, x2USDNoteControllerContract.options.address, [x2USDNoteInfo['1']], [props.dfoCore.fromDecimals(x2Amount, 18).toString()], \"\");\n        await getData();\n    }\n\n    const redeemX5 = async () => {\n        if (x5Amount > x5USDTreasury) return;\n        const x5USDCollection = await props.dfoCore.getContract(props.dfoCore.getContextElement('INativeV1ABI'), x2USDNoteInfo['0']);\n        await x5USDCollection.methods.safeBatchTransferFrom(props.dfoCore.address, x5USDNoteControllerContract.options.address, [x5USDNoteInfo['1']], [props.dfoCore.fromDecimals(x5Amount, 18).toString()], \"\");\n        await getData();\n    }\n\n    const onTokenApproval = (type) => {\n        switch (type) {\n            case 'x2':\n                setx2Approved(true);\n            case 'x5':\n                setx5Approved(true);\n            default:\n                return;\n        }\n    }\n\n    const getx2Input = () => {\n        return (\n            <>\n            <div className=\"col-12 mb-4\">\n                <Input showMax={true} value={x2Amount} balance={x2Balance} extra={`| Treasury ${x2USDTreasury} WUSD`} min={0} onChange={(e) => setx2Amount(e.target.value)} showCoin={true} showBalance={true} name=\"x2USD\" />\n            </div>\n            {\n                x2Amount ? \n                <div className=\"col-12 mb-4\">\n                    <div className=\"row justify-content-center\">\n                        For\n                    </div>\n                    <div className=\"row justify-content-center\">\n                        700 uSD\n                    </div>\n                </div> : <div/>\n            }\n            </>\n        )\n    }\n\n    const getx2Buttons = () => {\n        return (\n            <div className=\"col-12 mb-4\">\n                <div className=\"row\">\n                    {\n                        !x2Approved ? \n                        <div className=\"col\">\n                            <ApproveButton contract={x2USDContract} isERC1155={true} from={props.dfoCore.address} spender={props.dfoCore.getContextElement(\"WUSDExtensionControllerAddress\")}  onError={(error) => console.log(error)} onApproval={() => onTokenApproval('x2')} text={\"Approve x2USD\"} />\n                        </div> : <></>\n                    }\n                    <div className=\"col\">\n                        <button onClick={() => redeemX2()} className=\"btn btn-secondary\">Redeem</button>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n\n    const getx5Input = () => {\n        return (\n            <>\n                <div className=\"col-12 mb-4\">\n                    <Input showMax={true} value={x5Amount} balance={x5Balance} extra={`| Treasury ${x5USDTreasury} WUSD`} min={0} onChange={(e) => setx5Amount(e.target.value)} showCoin={true} showBalance={true} name=\"x5USD\" />\n                </div>\n                {\n                    x5Amount ?\n                    <div className=\"col-12 mb-4\">\n                        <div className=\"row justify-content-center\">\n                            For\n                        </div>\n                        <div className=\"row justify-content-center\">\n                            700 uSD\n                        </div>\n                    </div> : <div/>\n                }\n            </>\n        )\n    }\n\n    const getx5Buttons = () => {\n        return (\n            <div className=\"col-12 mb-4\">\n                <div className=\"row\">\n                    {\n                        !x5Approved ? \n                        <div className=\"col\">\n                            <ApproveButton contract={x5USDContract} isERC1155={true} from={props.dfoCore.address} spender={props.dfoCore.getContextElement(\"WUSDExtensionControllerAddress\")}  onError={(error) => console.log(error)} onApproval={() => onTokenApproval('x5')} text={\"Approve x5USD\"} />\n                        </div> : <></>\n                    }\n                    <div className=\"col-12 col-md-6\">\n                        <button onClick={() => redeemX5()} className=\"btn btn-secondary\">Redeem</button>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n\n    return (\n        <div className=\"usdn-component\">\n            <div className=\"row\">\n                { getx2Input() }\n                { getx2Buttons() }\n                <div className=\"col-12 my-4\" />\n                { getx5Input() }\n                { getx5Buttons() }\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    const { core } = state;\n    return { dfoCore: core.dfoCore };\n}\n\nexport default connect(mapStateToProps)(USDN);","C:\\Users\\marco\\Documents\\BUIDL\\covenants-fe\\src\\pages\\inflation\\dapp\\components\\ExploreInflationContract.jsx",["371","372","373","374"],"import { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { FixedInflationComponent } from '../../../../components';\n\nconst ExploreInflationContract = (props) => {\n    const [loading, setLoading] = useState(false);\n    const [entries, setEntries] = useState([]);\n\n    return (\n        <div className=\"explore-inflation-component\">\n            <div className=\"row mb-4 align-items-center\">\n                <FixedInflationComponent className={\"col-12 mb-4\"} showButton={false} hasBorder={false} />\n            </div>\n            <div className=\"row\">\n                {\n                    entries.length === 0 && <div className=\"col-12 text-left\">\n                        <h6><b>No entries available!</b></h6>\n                    </div>\n                }\n                {\n                    entries.map((entry) => {\n                        return (\n                           <div/>\n                        )\n                    })\n                }\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    const { core } = state;\n    return { dfoCore: core.dfoCore };\n}\n\nexport default connect(mapStateToProps)(ExploreInflationContract);","C:\\Users\\marco\\Documents\\BUIDL\\covenants-fe\\src\\pages\\farm\\dapp\\components\\Positions.jsx",["375"],"import { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { SetupComponent } from '../../../../components';\n\nconst Positions = (props) => {\n    const [farmingSetups, setFarmingSetups] = useState([]);\n\n    useEffect(() => {\n        getPositions();\n    }, []);\n\n    const getPositions = async () => {\n        await props.dfoCore.loadPositions();\n        setFarmingSetups(props.dfoCore.positions);\n    }\n\n    return (\n        <div className=\"positions-component\">\n            <div className=\"row mb-4\">\n                {\n                    farmingSetups.map((farmingSetup, setupIndex) => {\n                        return (\n                            <SetupComponent className=\"col-12 mb-4\" setupIndex={setupIndex} positionId={farmingSetup.positionId} position={farmingSetup.position} lmContract={farmingSetup.contract} dfoCore={props.dfoCore} setup={farmingSetup} manage={true} hasBorder />\n                        )\n                    })\n                }\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    const { core } = state;\n    return { dfoCore: core.dfoCore };\n}\n\nexport default connect(mapStateToProps)(Positions);","C:\\Users\\marco\\Documents\\BUIDL\\covenants-fe\\src\\pages\\farm\\dapp\\components\\ExploreFarmingContract.jsx",["376","377","378"],"import { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { useHistory, useParams } from 'react-router';\nimport { FarmingComponent, SetupComponent } from '../../../../components';\n\nconst setups = [\n    {\n        type: 'Free farm',\n        mainToken: null,\n        secondaryToken: null,\n        rewardToken: null,\n        sharedRewardFrom: 'Uniswap V2',\n        mainTokenLiquidity: 10,\n        secondaryTokenLiquidity: 1000,\n        estimated: '1 SSJ/block = 1 ETH + 1,000 BUIDL',\n        manage: true,\n    },\n    {\n        type: 'Free farm',\n        mainToken: null,\n        secondaryToken: null,\n        rewardToken: null,\n        sharedRewardFrom: 'Uniswap V2',\n        mainTokenLiquidity: 10,\n        secondaryTokenLiquidity: 1000,\n        estimated: '1 SSJ/block = 1 ETH + 1,000 BUIDL',\n        redeem: true,\n    },\n    {\n        type: 'Free farm',\n        mainToken: null,\n        secondaryToken: null,\n        rewardToken: null,\n        sharedRewardFrom: 'Uniswap V2',\n        mainTokenLiquidity: 10,\n        secondaryTokenLiquidity: 1000,\n        estimated: '1 SSJ/block = 1 ETH + 1,000 BUIDL',\n        farm: true,\n    }\n];\n\nconst ExploreFarmingContract = (props) => {\n    const { address } = useParams();\n    const [farmingSetups, setFarmingSetups] = useState([]);\n    const [contract, setContract] = useState(null);\n\n    useEffect(() => {\n        getContractMetadata()\n    }, []);\n\n    const getContractMetadata = async () => {\n        const lmContract = await props.dfoCore.getContract(props.dfoCore.getContextElement('LiquidityMiningABI'), address);\n        console.log(await lmContract.methods._extension().call());\n        const rewardTokenAddress = await lmContract.methods._rewardTokenAddress().call();\n        setContract(lmContract);\n        const setups = await lmContract.methods.setups().call();\n        setFarmingSetups(setups.map((setup) => { return {...setup, rewardTokenAddress }}));\n    }\n\n    return (\n        <div className=\"explore-farming-contract-component\">\n            {\n                contract ? \n                <div className=\"row\">\n                    <FarmingComponent dfoCore={props.dfoCore} contract={contract} goBack={true} hostedBy={true} />\n                </div> : <div/>\n            }\n            <div className=\"row\">\n                {\n                    farmingSetups.length > 0 ? farmingSetups.map((farmingSetup, setupIndex) => {\n                        return (\n                            <SetupComponent className=\"col-12 mb-4\" setupIndex={setupIndex} lmContract={contract} dfoCore={props.dfoCore} setup={farmingSetup} hostedBy={true} hasBorder />\n                        )\n                    }) : <div className=\"col-12 justify-content-center\">\n                        <div className=\"spinner-border text-secondary\" role=\"status\">\n                            <span className=\"visually-hidden\"></span>\n                        </div>\n                    </div>\n                }\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    const { core } = state;\n    return { dfoCore: core.dfoCore };\n}\n\nexport default connect(mapStateToProps)(ExploreFarmingContract);","C:\\Users\\marco\\Documents\\BUIDL\\covenants-fe\\src\\pages\\farm\\dapp\\components\\Explore.jsx",["379","380"],"import { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { FarmingComponent } from '../../../../components';\n\nconst contracts = [{address: '0xc3BE549499f1e504c793a6c89371Bd7A98229500'}, {address: '0x761E02FEC5A21C6d3F284bd536dB2D2d33d5540B'}];\n\nconst Explore = (props) => {\n    const [tokenFilter, setTokenFilter] = useState(\"\");\n    const [farmingContracts, setFarmingContracts] = useState([]);\n    const [startingContracts, setStartingContracts] = useState([]);\n    const [loading, setLoading] = useState(false);\n\n    useEffect(() => {\n        if (props.dfoCore) {\n            getDeployedContracts();\n        }\n    }, []);\n\n    const getDeployedContracts = async () => {\n        setLoading(true);\n        try {\n            await props.dfoCore.loadDeployedLiquidityMiningContracts();\n            const mappedContracts = await Promise.all(\n                props.dfoCore.deployedLiquidityMiningContracts.map(async (contract) => { \n                    return props.dfoCore.getContract(props.dfoCore.getContextElement('LiquidityMiningABI'), contract.address);\n                })\n            );\n            setFarmingContracts(mappedContracts);\n            setStartingContracts(mappedContracts);\n        } catch (error) {\n            \n            setFarmingContracts([]);\n            setStartingContracts([]);\n        } finally {\n            setLoading(false);\n        }\n    }\n\n    const onChangeTokenFilter = async (value) => {\n        if (!value) {\n            setTokenFilter(\"\");\n            setFarmingContracts(startingContracts);\n            return;\n        }\n        setTokenFilter(value);\n        const filteredFarmingContracts = [];\n        await Promise.all(startingContracts.map(async (contract) => {\n            const rewardTokenAddress = await contract.methods._rewardTokenAddress().call();\n            if (rewardTokenAddress.toLowerCase().includes(value.toLowerCase())) {\n                filteredFarmingContracts.push(contract);\n            }\n        }));\n        setFarmingContracts(filteredFarmingContracts);\n    }\n    \n    if (loading) {\n        return (\n            <div className=\"explore-component\">\n                <div className=\"row\">\n                    <div className=\"col-12 justify-content-center\">\n                        <div className=\"spinner-border text-secondary\" role=\"status\">\n                            <span className=\"visually-hidden\"></span>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n\n    return (\n        <div className=\"explore-component\">\n            <div className=\"row mb-4\">\n                <div className=\"col-12 col-md-6 mb-4 mb-md-0\">\n                    <select className=\"custom-select wusd-pair-select\">\n                        <option value=\"\">Sort by..</option>\n                        <option value=\"1\">One</option>\n                        <option value=\"2\">Two</option>\n                        <option value=\"3\">Three</option>\n                    </select>\n                </div>\n                <div className=\"col-12 col-md-6 mb-4 mb-md-0\">\n                    <input type=\"text\" className=\"form-control token-filter-input\" placeholder=\"Reward token address..\" value={tokenFilter} onChange={(e) => onChangeTokenFilter(e.target.value)} />\n                </div>\n            </div>\n            <div className=\"row\">\n                {\n                    farmingContracts.length === 0 && <div className=\"col-12 text-left\">\n                        <h6><b>No farming contract available!</b></h6>\n                    </div>\n                }\n                {\n                    farmingContracts.length > 0 && farmingContracts.map((farmingContract) => {\n                        return (\n                            <FarmingComponent className=\"col-12 mb-4\" dfoCore={props.dfoCore} contract={farmingContract} hasBorder />\n                        )\n                    })\n                }\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    const { core } = state;\n    return { dfoCore: core.dfoCore };\n}\n\nexport default connect(mapStateToProps)(Explore);","C:\\Users\\marco\\Documents\\BUIDL\\covenants-fe\\src\\pages\\farm\\dapp\\components\\Hosted.jsx",["381","382"],"import { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { FarmingComponent } from '../../../../components';\n\nconst contracts = [{address: '0xc3BE549499f1e504c793a6c89371Bd7A98229500'}, {address: '0x761E02FEC5A21C6d3F284bd536dB2D2d33d5540B'}];\n\nconst Hosted = (props) => {\n    const [farmingContracts, setFarmingContracts] = useState([]);\n\n    useEffect(() => {\n        getContracts();\n    }, [])\n\n    const getContracts = async () => {\n        const hostedContracts = props.dfoCore.getHostedLiquidityMiningContracts();\n        const mappedContracts = await Promise.all(\n            hostedContracts.map(async (contract) => { \n                console.log(contract);\n                return props.dfoCore.getContract(props.dfoCore.getContextElement('LiquidityMiningABI'), contract.address);\n            })\n        );\n        console.log(mappedContracts);\n        setFarmingContracts(mappedContracts);\n    }\n\n    return (\n        <div className=\"hosted-component\">\n            <div className=\"row mb-4\">\n                {\n                    farmingContracts.map((farmingContract) => {\n                        return (\n                            <FarmingComponent className=\"col-12 mb-4\" dfoCore={props.dfoCore} contract={farmingContract} hostedBy={true} hasBorder />\n                        )\n                    })\n                }\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    const { core } = state;\n    return { dfoCore: core.dfoCore };\n}\n\nexport default connect(mapStateToProps)(Hosted);","C:\\Users\\marco\\Documents\\BUIDL\\covenants-fe\\src\\pages\\farm\\dapp\\components\\Create.jsx",["383","384","385"],"import { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { Coin, Input, TokenInput } from '../../../../components/shared';\nimport { setFarmingContractStep, updateFarmingContract, addFarmingSetup, removeFarmingSetup  } from '../../../../store/actions';\nimport Editor from 'react-simple-code-editor';\nimport { highlight, languages } from 'prismjs/components/prism-core';\nimport 'prismjs/components/prism-clike';\nimport 'prismjs/components/prism-solidity';\n\nconst code = `function add(a, b) {\n    return a + b;\n}`;\n\nconst Create = (props) => {\n    const [currentBlockNumber, setCurrentBlockNumber] = useState(0);\n    const [selectedRewardToken, setSelectedRewardToken] = useState(null);\n    const [selectedFarmingType, setSelectedFarmingType] = useState(null);\n    const [selectedHost, setSelectedHost] = useState(null);\n    const [hostWalletAddress, setHostWalletAddress] = useState(null);\n    const [hostDeployedContract, setHostDeployedContract] = useState(null);\n    const [deployContractCode, setDeployContractCode] = useState(\"\");\n    const [hasLoadBalancer, setHasLoadBalancer] = useState(false);\n    const [pinnedSetupIndex, setPinnedSetupIndex] = useState(null);\n    const [byMint, setByMint] = useState(false);\n    const [freeLiquidityPoolToken, setFreeLiquidityPoolToken] = useState(null);\n    const [freeRewardPerBlock, setFreeRewardPerBlock] = useState(0);\n    const [lockedPeriod, setLockedPeriod] = useState(null);\n    const [lockedStartBlock, setLockedStartBlock] = useState(0);\n    const [lockedMainToken, setLockedMainToken] = useState(null);\n    const [lockedMaxLiquidity, setLockedMaxLiquidity] = useState(0);\n    const [lockedRewardPerBlock, setLockedRewardPerBlock] = useState(0);\n    const [lockedSecondaryToken, setLockedSecondaryToken] = useState(null);\n    const [lockedHasPenaltyFee, setLockedHasPenaltyFee] = useState(false);\n    const [lockedPenaltyFee, setLockedPenaltyFee] = useState(0);\n    const [lockedIsRenewable, setLockedIsRenewable] = useState(false);\n    const [lockedRenewTimes, setLockedRenewTimes] = useState(0);\n    const [loading, setLoading] = useState(false);\n    const [isAdd, setIsAdd] = useState(false);\n    const [isEdit, setIsEdit] = useState(false);\n    const [editIndex, setEditIndex] = useState(null);\n    const [isAddLoadBalancer, setIsAddLoadBalancer] = useState(false);\n    const [isDeploy, setIsDeploy] = useState(false);\n\n    useEffect(() => {\n        if (props.farmingContract?.rewardToken) {\n            setSelectedRewardToken(props.farmingContract.rewardToken);\n        }\n        if (currentBlockNumber === 0) {\n            props.dfoCore.getBlockNumber().then((blockNumber) => {\n                setCurrentBlockNumber(blockNumber);\n                setLockedStartBlock(blockNumber);\n            });\n        }\n    }, []);\n\n    const isWeth = (address) => {\n        return address.toLowerCase() === props.dfoCore.getContextElement('wethTokenAddress').toLowerCase();\n    }\n\n    const isValidAddress = (address) => {\n        // TODO update check\n        return address.length === 42;\n    }\n\n    const addFreeFarmingSetup = () => {\n        const setup = {\n            rewardPerBlock: freeRewardPerBlock,\n            data: freeLiquidityPoolToken,\n        }\n        if (isAdd && editIndex) {\n            props.removeFarmingSetup(editIndex);\n            setIsEdit(false);\n            setEditIndex(null);\n        }\n        props.addFarmingSetup(setup);\n        setFreeLiquidityPoolToken(null);\n        setFreeRewardPerBlock(0);\n        setSelectedFarmingType(null);\n        setIsAdd(false);\n    }\n\n    const addLockedFarmingSetup = () => {\n        const setup = {\n            period: lockedPeriod,\n            startBlock: lockedStartBlock,\n            endBlock: lockedStartBlock + lockedPeriod,\n            data: lockedMainToken,\n            maxLiquidity: lockedMaxLiquidity,\n            rewardPerBlock: lockedRewardPerBlock,\n            penaltyFee: lockedPenaltyFee,\n            renewTimes: lockedRenewTimes,\n            secondaryToken: lockedSecondaryToken,\n        }\n        if (isAdd && editIndex) {\n            props.removeFarmingSetup(editIndex);\n            setIsEdit(false);\n            setEditIndex(null);\n        }\n        props.addFarmingSetup(setup);\n        setLockedPeriod(null);\n        setLockedStartBlock(0);\n        setLockedMainToken(null);\n        setLockedMaxLiquidity(0);\n        setLockedRewardPerBlock(0);\n        setLockedHasPenaltyFee(false);\n        setLockedPenaltyFee(0);\n        setLockedIsRenewable(false);\n        setLockedRenewTimes(0);\n        setLockedSecondaryToken(null);\n        setSelectedFarmingType(null);\n        setIsAdd(false);\n        props.setFarmingContractStep(0);\n    }\n\n    const editSetup = (setup, index) => {\n        if (!setup.endBlock) {\n            // free setup\n            setFreeLiquidityPoolToken(setup.data);\n            setFreeRewardPerBlock(setup.rewardPerBlock);\n            setSelectedFarmingType('free');\n        } else {\n            // locked setup\n            setLockedPeriod(setup.period);\n            setLockedStartBlock(setup.startBlock);\n            setLockedMainToken(setup.data);\n            setLockedMaxLiquidity(setup.maxLiquidity);\n            setLockedRewardPerBlock(setup.rewardPerBlock);\n            setLockedHasPenaltyFee(setup.penaltyFee !== 0);\n            setLockedPenaltyFee(setup.penaltyFee);\n            setLockedIsRenewable(setup.renewTimes !== 0);\n            setLockedRenewTimes(setup.renewTimes);\n            setLockedSecondaryToken(setup.secondaryToken);\n            setSelectedFarmingType('locked');\n        }\n        setIsAdd(true);\n        setIsEdit(true);\n        setEditIndex(index);\n    }\n\n    const onSelectRewardToken = async (address) => {\n        if (!address) address = \"0x7b123f53421b1bF8533339BFBdc7C98aA94163db\";\n        setLoading(true);\n        const rewardToken = await props.dfoCore.getContract(props.dfoCore.getContextElement('ERC20ABI'), address);\n        console.log(rewardToken);\n        const symbol = await rewardToken.methods.symbol().call();\n        setSelectedRewardToken({ symbol, address });\n        setLoading(false);\n    }\n\n    const deployContract = async () => {\n        const data = { setups: [], rewardTokenAddress: selectedRewardToken.address, byMint, hasLoadBalancer, pinnedSetupIndex };\n        const ammAggregator = await props.dfoCore.getContract(props.dfoCore.getContextElement('AMMAggregatorABI'), props.dfoCore.getContextElement('ammAggregatorAddress'));\n        await Promise.all(props.farmingSetups.map(async (setup) => {\n            const isFree = !setup.endBlock;\n            const result = await ammAggregator.methods.findByLiquidityPool(isFree ? setup.data.address : setup.secondaryToken).call();\n            const { amm } = result;\n            data.setups.push(\n                [\n                    amm,//uniswapAMM.options.address,\n                    0,\n                    isFree ? setup.data.address : setup.secondaryToken,\n                    isFree ? setup.data.token0 : setup.data.address,\n                    isFree ? 0 : setup.startBlock,\n                    isFree ? 0 : (setup.startBlock + parseInt(setup.period)),\n                    props.dfoCore.fromDecimals(setup.rewardPerBlock),\n                    isFree ? props.dfoCore.fromDecimals(setup.rewardPerBlock) : 0,\n                    0,\n                    0,\n                    isFree ? 0 : props.dfoCore.fromDecimals(setup.maxLiquidity),\n                    0,\n                    isFree,\n                    isFree ? 0 : setup.renewTimes,\n                    isFree ? 0 : setup.penaltyFee,\n                    false//mainToken == utilities.voidEthereumAddress || secondaryToken == utilities.voidEthereumAddress\n                ]\n            )\n        }))\n        console.log(data);\n        await props.dfoCore.deployLiquidityMiningContract(data, props.dfoCore.address);\n    }\n\n    const getCreationComponent = () => {\n        return <div className=\"col-12\">\n            <div className=\"row justify-content-center mb-4\">\n                <div className=\"col-9\">\n                    <TokenInput placeholder={\"Reward token\"} onClick={(address) => onSelectRewardToken(address)} text={\"Load\"} />\n                </div>\n            </div>\n            {\n                loading ? <div className=\"row justify-content-center\">\n                    <div className=\"spinner-border text-secondary\" role=\"status\">\n                        <span className=\"visually-hidden\"></span>\n                    </div>\n                </div> : <>  \n                <div className=\"row mb-4\">\n                    { selectedRewardToken && <div className=\"col-12\">\n                            <Coin address={selectedRewardToken.address} /> {selectedRewardToken.symbol}    \n                        </div>\n                    }\n                </div>\n                {\n                    selectedRewardToken && <div className=\"col-12\">\n                        <p style={{fontSize: 14}}>Lorem, ipsum dolor sit amet consectetur adipisicing elit. Quaerat animi ipsam nemo at nobis odit temporibus autem possimus quae vel, ratione numquam modi rem accusamus, veniam neque voluptates necessitatibus enim!</p>\n                    </div>\n                }\n                {\n                    selectedRewardToken && <div className=\"form-check my-4\">\n                        <input className=\"form-check-input\" type=\"checkbox\" value={byMint} onChange={(e) => setByMint(e.target.checked)} id=\"setByMint\" />\n                        <label className=\"form-check-label\" htmlFor=\"setByMint\">\n                            By mint\n                        </label>\n                    </div>\n                }\n                {\n                    selectedRewardToken && <div className=\"col-12\">\n                        <button className=\"btn btn-secondary\" onClick={() => props.updateFarmingContract({ rewardToken: { ...selectedRewardToken, byMint } })}>Start</button>\n                    </div>\n                }\n                </>\n            }\n           \n        </div>\n    }\n\n    const getFarmingSetups = () => {\n        return <div className=\"col-12 p-0\">\n            {\n                props.farmingSetups.map((setup, i) => {\n                    return (\n                        <div key={i} className=\"row align-items-center text-left mb-md-2 mb-4\">\n                            <div className=\"col-md-9 col-12\">\n                                <b style={{fontSize: 14}}>{ !setup.startBlock ? \"Free setup\" : \"Locked setup\" } { setup.data.name }{ setup.startBlock ? `${setup.data.symbol}` : ` | ${ setup.data.symbol1} ${ setup.data.symbol2 }` } - Reward: {setup.rewardPerBlock} {props.farmingContract.rewardToken.symbol}/block</b>\n                            </div>\n                            <div className=\"col-md-3 col-12 flex\">\n                                <button className=\"btn btn-sm btn-outline-danger mr-1\" onClick={() => props.removeFarmingSetup(i)}><b>X</b></button> <button onClick={() => editSetup(setup, i)} className=\"btn btn-sm btn-danger ml-1\"><b>EDIT</b></button>\n                            </div>\n                        </div>\n                    )\n                })\n            }\n            <div className=\"row justify-content-between mt-4\">\n                <div className=\"col-12 flex justify-content-start mb-4\">\n                    <button onClick={() => setIsAdd(true)} className=\"btn btn-light\">Add setup</button>\n                </div>\n                <div className=\"col-12 mt-4\">\n                    <button onClick={() => {\n                        setSelectedRewardToken(null);\n                        props.farmingSetups.forEach((_, index) => props.removeFarmingSetup(index));\n                        props.updateFarmingContract(null);\n                    }} className=\"btn btn-light mr-4\">Cancel</button> <button onClick={() => setIsAddLoadBalancer(true)} className=\"btn btn-secondary ml-4\">Next</button>\n                </div>\n            </div>\n        </div>\n    }\n\n    const getEmptyFarmingSetups = () => {\n        if (props.creationStep === 0) {\n            return (\n                <div className=\"col-12\">\n                    <div className=\"row justify-content-center mb-4\">\n                        <h6><b>Select farming type</b></h6>\n                    </div>\n                    <div className=\"row justify-content-center mb-4\">\n                        <button onClick={() => setSelectedFarmingType(selectedFarmingType !== 'free' ? 'free' : null)} className={`btn ${selectedFarmingType === 'free' ? \"btn-secondary\" : \"btn-outline-secondary\"} mr-4`}>Free Farming</button>\n                        <button onClick={() => setSelectedFarmingType(selectedFarmingType !== 'locked' ? 'locked' : null)} className={`btn ${selectedFarmingType === 'locked' ? \"btn-secondary\" : \"btn-outline-secondary\"}`}>Locked</button>\n                    </div>\n                    <div className=\"row mb-4\">\n                        <p style={{fontSize: 14}}>Lorem, ipsum dolor sit amet consectetur adipisicing elit. Quaerat animi ipsam nemo at nobis odit temporibus autem possimus quae vel, ratione numquam modi rem accusamus, veniam neque voluptates necessitatibus enim!</p>\n                    </div>\n                    <div className=\"row justify-content-center\">\n                        <button onClick={() => props.setFarmingContractStep(1)} disabled={!selectedFarmingType} className=\"btn btn-primary\">Next</button>\n                    </div>\n                </div>\n            );\n        } else if (props.creationStep === 1) {\n            if (!selectedFarmingType) {\n                props.setFarmingContractStep(0);\n                return <div/>;\n            }\n            return selectedFarmingType === 'free' ? getFreeFirstStep() : getLockedFirstStep();\n        } else if (props.creationStep === 2) {\n            return getLockedSecondStep();\n        }\n        return <div/>\n    }\n\n    const onSelectFreeLiquidityPoolToken = async (address) => {\n        if (!address) address = \"0xb0fb35cc576034b01bed6f4d0333b1bd3859615c\";\n        try {\n            setLoading(true);\n            const liquidityPoolToken = await props.dfoCore.getContract(props.dfoCore.getContextElement('uniswapV2PairABI'), address);\n            const name = await liquidityPoolToken.methods.name().call();\n            const token0 = await liquidityPoolToken.methods.token0().call();\n            const token1 = await liquidityPoolToken.methods.token1().call();\n            const token0Contract = await props.dfoCore.getContract(props.dfoCore.getContextElement('ERC20ABI'), token0);\n            const token1Contract = await props.dfoCore.getContract(props.dfoCore.getContextElement('ERC20ABI'), token1);\n            const symbol1 = await token0Contract.methods.symbol().call();\n            const symbol2 = await token1Contract.methods.symbol().call();\n            setFreeLiquidityPoolToken({ \n                address, \n                name,\n                token0: isWeth(token0) ? props.dfoCore.voidEthereumAddress : token0, \n                token1: isWeth(token1) ? props.dfoCore.voidEthereumAddress : token1, \n                symbol1: isWeth(token0) ? 'ETH' : symbol1,\n                symbol2: isWeth(token1) ? 'ETH' : symbol2 \n            });\n        } catch (error) {\n            setFreeLiquidityPoolToken(null);\n            console.error(error);\n        } finally {\n            setLoading(false);\n        }\n    }\n\n    const onSelectMainToken = async (address) => {\n        if (!address) address = \"0x7b123f53421b1bF8533339BFBdc7C98aA94163db\";\n        setLoading(true);\n        const mainTokenContract = await props.dfoCore.getContract(props.dfoCore.getContextElement('ERC20ABI'), address);\n        const symbol = await mainTokenContract.methods.symbol().call();\n        setLockedMainToken({ symbol, address });\n        setLoading(false);\n    }\n\n    const goToFirstStep = () => {\n        setFreeLiquidityPoolToken(null);\n        setFreeRewardPerBlock(0);\n        setLockedPeriod(null);\n        setLockedStartBlock(0);\n        setLockedMainToken(null);\n        setLockedMaxLiquidity(0);\n        setLockedRewardPerBlock(0);\n        setLockedHasPenaltyFee(false);\n        setLockedPenaltyFee(0);\n        setLockedIsRenewable(false);\n        setLockedRenewTimes(0);\n        setLockedSecondaryToken(null);\n        props.setFarmingContractStep(0);\n    }\n\n    const getFreeFirstStep = () => {\n        return <div className=\"col-12\">\n            <div className=\"row justify-content-center mb-4\">\n                <div className=\"col-9\">\n                    <TokenInput label={\"Liquidity pool address\"} placeholder={\"Liquidity pool address\"} width={60} onClick={(address) => onSelectFreeLiquidityPoolToken(address)} text={\"Load\"} />\n                </div>\n            </div>\n            {\n                loading ? <div className=\"row justify-content-center\">\n                    <div className=\"spinner-border text-secondary\" role=\"status\">\n                        <span className=\"visually-hidden\"></span>\n                    </div>\n                </div> :  <>\n                    <div className=\"row mb-4\">\n                        { freeLiquidityPoolToken && <div className=\"col-12\">\n                                <b>{freeLiquidityPoolToken.name} | {freeLiquidityPoolToken.symbol0} {freeLiquidityPoolToken.symbol1}</b> <Coin address={freeLiquidityPoolToken.token0} className=\"mr-2\" /> <Coin address={freeLiquidityPoolToken.token1} />\n                            </div>\n                        }\n                    </div>\n                    {\n                        freeLiquidityPoolToken && <>\n                            <div className=\"row justify-content-center mb-4\">\n                                <div className=\"col-6\">\n                                    <Input min={0} showCoin={true} address={selectedRewardToken.address} value={freeRewardPerBlock} name={selectedRewardToken.symbol} onChange={(e) => setFreeRewardPerBlock(e.target.value)} />\n                                </div>\n                            </div>\n                            <div className=\"row justify-content-center align-items-center flex-column mb-2\">\n                                <p className=\"text-center\"><b>Monthly*: {freeRewardPerBlock * 3000} {selectedRewardToken.symbol}</b></p>\n                                <p className=\"text-center\"><b>Yearly*: {freeRewardPerBlock * 36000} {selectedRewardToken.symbol}</b></p>\n                            </div>\n                            <div className=\"row mb-4\">\n                                <p className=\"text-center\">*Monthly/yearly reward are calculated in a forecast based on 3000 Blocks/m and 36000/y.</p>\n                            </div>\n                            <div className=\"row justify-content-center mb-4\">\n                                <button onClick={() => goToFirstStep() } className=\"btn btn-light mr-4\">Cancel</button>\n                                <button onClick={() => addFreeFarmingSetup() } disabled={!freeLiquidityPoolToken || freeRewardPerBlock <= 0} className=\"btn btn-secondary ml-4\">Add</button>\n                            </div>\n                        </>\n                    }\n                </>\n            }\n        </div>\n    }\n\n    const getLockedFirstStep = () => {\n        return <div className=\"col-12\">\n            <div className=\"row mb-4\">\n                <div className=\"col-12\">\n                    <select className=\"custom-select wusd-pair-select\" value={lockedPeriod} onChange={(e) => setLockedPeriod(e.target.value)}>\n                        <option value={0}>Choose locked period</option>\n                        <option value={750}>1 week</option>\n                        <option value={1500}>2 weeks</option>\n                        <option value={2250}>3 weeks</option>\n                        <option value={3000}>1 month</option>\n                        <option value={6000}>2 months</option>\n                        <option value={9000}>3 months</option>\n                        <option value={18000}>6 months</option>\n                        <option value={36000}>1 year</option>\n                    </select>\n                </div>\n            </div>\n            <div className=\"row mb-4\">\n                <p className=\"text-center text-small\">Lorem, ipsum dolor sit amet consectetur adipisicing elit. Omnis delectus incidunt laudantium distinctio velit reprehenderit quaerat, deserunt sint fugit ex consectetur voluptas suscipit numquam. Officiis maiores quaerat quod necessitatibus perspiciatis!</p>\n            </div>\n            <div className=\"row justify-content-center mb-4\">\n                <div className=\"col-6\">\n                    <Input label={\"Start block\"} min={currentBlockNumber} value={lockedStartBlock || currentBlockNumber} onChange={(e) => setLockedStartBlock(e.target.value)} />\n                </div>\n            </div>\n            <div className=\"row mb-4\">\n                <p className=\"text-center text-small\">Lorem, ipsum dolor sit amet consectetur adipisicing elit. Omnis delectus incidunt laudantium distinctio velit reprehenderit quaerat, deserunt sint fugit ex consectetur voluptas suscipit numquam. Officiis maiores quaerat quod necessitatibus perspiciatis!</p>\n            </div>\n            <div className=\"row justify-content-center mb-4\">\n                <div className=\"col-9\">\n                    <TokenInput label={\"Main token\"} placeholder={\"Main token address\"} width={60} onClick={(address) => onSelectMainToken(address)} text={\"Load\"} />\n                </div>\n            </div>\n            {\n                loading ? <div className=\"row justify-content-center\">\n                    <div className=\"spinner-border text-secondary\" role=\"status\">\n                        <span className=\"visually-hidden\"></span>\n                    </div>\n                </div> :  <>\n                    <div className=\"row mb-4\">\n                        { lockedMainToken && <div className=\"col-12\">\n                                <b>{lockedMainToken.symbol}</b> <Coin address={lockedMainToken.address} className=\"ml-2\" />\n                            </div>\n                        }\n                    </div>\n                    {\n                        lockedMainToken && <>\n                            <hr/>\n                            <div className=\"row justify-content-center my-4\">\n                                <div className=\"col-9\">\n                                    <TokenInput label={\"Liquidity pool token\"} placeholder={\"Liquidity pool token address\"} width={60} onClick={(address) => setLockedSecondaryToken(address !== lockedMainToken.address ? address : lockedSecondaryToken)} text={\"Load\"} />\n                                </div>\n                            </div>\n                            {\n                                lockedSecondaryToken && <div key={lockedSecondaryToken} className=\"row align-items-center justify-content-around mb-2\">\n                                    { /* <Coin address={secondaryToken} className=\"mr-2\" />  */ } <p>{lockedSecondaryToken}</p> <button className=\"btn btn-outline-danger btn-sm\" onClick={() => setLockedSecondaryToken(null)}>Remove</button>\n                                </div>\n                            }\n                            <div className=\"row justify-content-center mt-4 mb-4\">\n                                <div className=\"col-6\">\n                                    <Input label={\"Max stakeable\"} min={0} showCoin={true} address={lockedMainToken.address} value={lockedMaxLiquidity} name={lockedMainToken.symbol} onChange={(e) => setLockedMaxLiquidity(e.target.value)} />\n                                </div>\n                            </div>\n                            <div className=\"row mb-4\">\n                                <p className=\"text-center text-small\">Lorem, ipsum dolor sit amet consectetur adipisicing elit. Omnis delectus incidunt laudantium distinctio velit reprehenderit quaerat, deserunt sint fugit ex consectetur voluptas suscipit numquam. Officiis maiores quaerat quod necessitatibus perspiciatis!</p>\n                            </div>\n                            <div className=\"row justify-content-center mb-4\">\n                                <div className=\"col-6\">\n                                    <Input label={\"Reward per block\"} min={0} showCoin={true} address={lockedMainToken.address} value={lockedRewardPerBlock} name={lockedMainToken.symbol} onChange={(e) => setLockedRewardPerBlock(e.target.value)} />\n                                </div>\n                            </div>\n                            <div className=\"row mb-4\">\n                                <p className=\"text-center text-small\">Lorem, ipsum dolor sit amet consectetur adipisicing elit. Omnis delectus incidunt laudantium distinctio velit reprehenderit quaerat, deserunt sint fugit ex consectetur voluptas suscipit numquam. Officiis maiores quaerat quod necessitatibus perspiciatis!</p>\n                            </div>\n                            <div className=\"row justify-content-center align-items-center flex-column mb-2\">\n                                <p className=\"text-center\"><b>Reward/block per {lockedMainToken.symbol}: {!lockedMaxLiquidity ? 0 : parseFloat((lockedRewardPerBlock * (1 / lockedMaxLiquidity)).toPrecision(4))} {lockedMainToken.symbol}</b></p>\n                            </div>\n                        </>\n                    }\n                    <div className=\"row justify-content-center mb-4\">\n                        <button onClick={() => goToFirstStep() } className=\"btn btn-light mr-4\">Cancel</button>\n                        <button onClick={() => props.setFarmingContractStep(2) } disabled={!lockedMainToken || lockedRewardPerBlock <= 0 || !lockedMaxLiquidity || !lockedSecondaryToken || !lockedStartBlock || !lockedPeriod} className=\"btn btn-secondary ml-4\">Next</button>\n                    </div>\n                </>\n            }\n        </div>\n    }\n\n    const getLockedSecondStep = () => {\n        return (\n            <div className=\"col-12\">\n                <div className=\"row justify-content-center\">\n                    <div className=\"form-check my-4\">\n                        <input className=\"form-check-input\" type=\"checkbox\" value={lockedHasPenaltyFee} onChange={(e) => setLockedHasPenaltyFee(e.target.checked)} id=\"penaltyFee\" />\n                        <label className=\"form-check-label\" htmlFor=\"penaltyFee\">\n                            Penalty fee\n                        </label>\n                    </div>\n                </div>\n                {\n                    lockedHasPenaltyFee && <div className=\"row mb-4 justify-content-center\">\n                        <div className=\"col-md-6 col-12\">\n                            <Input step={0.001} max={100} min={0} showCoin={true} address={lockedMainToken.address} value={lockedPenaltyFee} name={lockedMainToken.symbol} onChange={(e) => setLockedPenaltyFee(e.target.value)} />\n                        </div>\n                    </div>\n                }\n                <div className=\"row mb-4\">\n                    <p className=\"text-center text-small\">Lorem, ipsum dolor sit amet consectetur adipisicing elit. Omnis delectus incidunt laudantium distinctio velit reprehenderit quaerat, deserunt sint fugit ex consectetur voluptas suscipit numquam. Officiis maiores quaerat quod necessitatibus perspiciatis!</p>\n                </div>\n                <div className=\"row justify-content-center\">\n                    <div className=\"form-check my-4\">\n                        <input className=\"form-check-input\" type=\"checkbox\" value={lockedIsRenewable} onChange={(e) => setLockedIsRenewable(e.target.checked)} id=\"repeat\" />\n                        <label className=\"form-check-label\" htmlFor=\"repeat\">\n                            Repeat\n                        </label>\n                    </div>\n                </div>\n                {\n                    lockedIsRenewable && <div className=\"row mb-4 justify-content-center\">\n                        <div className=\"col-md-6 col-12\">\n                            <Input min={0} width={50} address={lockedMainToken.address} value={lockedRenewTimes} onChange={(e) => setLockedRenewTimes(e.target.value)} />\n                        </div>\n                    </div>\n                }\n                <div className=\"row mb-4\">\n                    <p className=\"text-center text-small\">Lorem, ipsum dolor sit amet consectetur adipisicing elit. Omnis delectus incidunt laudantium distinctio velit reprehenderit quaerat, deserunt sint fugit ex consectetur voluptas suscipit numquam. Officiis maiores quaerat quod necessitatibus perspiciatis!</p>\n                </div>\n                <div className=\"row justify-content-center mb-4\">\n                    <button onClick={() => goToFirstStep() } className=\"btn btn-light mr-4\">Cancel</button>\n                    <button onClick={() => addLockedFarmingSetup() } disabled={(lockedIsRenewable && lockedRenewTimes === 0) || (lockedHasPenaltyFee && lockedPenaltyFee === 0)} className=\"btn btn-secondary ml-4\">Next</button>\n                </div>\n            </div>\n        )\n    }\n\n    const getLockedThirdStep = () => {\n        return (\n            <div className=\"col-12\">\n                <div className=\"row justify-content-center\">\n                    <div className=\"form-check my-4\">\n                        <input className=\"form-check-input\" type=\"checkbox\" value={hasLoadBalancer} onChange={(e) => setHasLoadBalancer(e.target.checked)} id=\"penaltyFee\" />\n                        <label className=\"form-check-label\" htmlFor=\"penaltyFee\">\n                            Load balancer\n                        </label>\n                    </div>\n                </div>\n                {\n                    hasLoadBalancer && <div className=\"row mb-4 justify-content-center\">\n                        <div className=\"col-md-9 col-12\">\n                            <select className=\"custom-select wusd-pair-select\" value={pinnedSetupIndex} onChange={(e) => setPinnedSetupIndex(e.target.value)}>\n                                <option value={null}>Choose setup..</option>\n                                {\n                                    props.farmingSetups.map((setup, index) => {\n                                        \n                                        return <option key={index} value={index} disabled={setup.startBlock}>\n                                            { !setup.startBlock ? \"Free setup\" : \"Locked setup\" } { setup.data.name }{ setup.startBlock ? `${setup.data.symbol}` : ` | ${ setup.data.symbol1} ${ setup.data.symbol2 }` } - Reward: {setup.rewardPerBlock} {props.farmingContract.rewardToken.symbol}/block\n                                        </option>;\n                                    })\n                                }\n                            </select>\n                        </div>\n                    </div>\n                }\n                <div className=\"row mb-4\">\n                    <p className=\"text-center text-small\">Lorem, ipsum dolor sit amet consectetur adipisicing elit. Omnis delectus incidunt laudantium distinctio velit reprehenderit quaerat, deserunt sint fugit ex consectetur voluptas suscipit numquam. Officiis maiores quaerat quod necessitatibus perspiciatis!</p>\n                </div>\n                <div className=\"row justify-content-center mb-4\">\n                    <button onClick={() => {\n                        setHasLoadBalancer(false);\n                        setPinnedSetupIndex(null);\n                        setIsAddLoadBalancer(false);\n                    } } className=\"btn btn-light mr-4\">Cancel</button>\n                    <button onClick={() => {\n                        setIsAddLoadBalancer(false);\n                        setIsDeploy(true);\n                    }} className=\"btn btn-secondary ml-4\">Next</button>\n                </div>\n            </div>\n        )\n    }\n\n    const getLockedFourthStep = () => {\n        return (\n            <div className=\"col-12\">\n                <div className=\"row\">\n                    <h6><b>Host</b></h6>\n                </div>\n                <div className=\"row mb-2\">\n                    <p className=\"text-left text-small\">Lorem, ipsum dolor sit amet consectetur adipisicing elit. Omnis delectus incidunt laudantium distinctio velit reprehenderit quaerat, deserunt sint fugit ex consectetur voluptas suscipit numquam. Officiis maiores quaerat quod necessitatibus perspiciatis!</p>\n                </div>\n                <div className=\"row mb-4\">\n                    <div className=\"col-12 p-0\">\n                        <select className=\"custom-select wusd-pair-select\" value={selectedHost} onChange={(e) => setSelectedHost(e.target.value)}>\n                            <option value=\"\">Choose an host..</option>\n                            <option value=\"deployed-contract\">Deployed Contract</option>\n                            <option value=\"wallet\">Wallet</option>\n                            <option value=\"deploy-contract\">Deploy Contract</option>\n                            <option value=\"no-host\">No host</option>\n                        </select>\n                    </div>\n                </div>\n                {\n                    selectedHost === 'wallet' ? <>\n                        <div className=\"row mb-2\">\n                            <input type=\"text\" className=\"form-control\" value={hostWalletAddress} onChange={(e) => setHostWalletAddress(e.target.value.toString())} placeholder={\"Wallet address\"} aria-label={\"Wallet address\"}/>\n                        </div>\n                        <div className=\"row mb-4\">\n                            <p className=\"text-left text-small\">Lorem, ipsum dolor sit amet consectetur adipisicing elit. Omnis delectus incidunt laudantium distinctio velit reprehenderit quaerat, deserunt sint fugit ex consectetur voluptas suscipit numquam. Officiis maiores quaerat quod necessitatibus perspiciatis!</p>\n                        </div>\n                    </> : selectedHost === 'deployed-contract' ? <>\n                        <div className=\"row mb-2\">\n                            <input type=\"text\" className=\"form-control\" value={hostDeployedContract} onChange={(e) => setHostDeployedContract(e.target.value.toString())} placeholder={\"Deployed contract address\"} aria-label={\"Deployed contract address\"}/>\n                        </div>\n                        <div className=\"row mb-4 justify-content-between\">\n                            <button className=\"btn btn-sm btn-dark\">Choose file</button>\n                            <button className=\"btn btn-sm btn-secondary\">VERIFY</button>\n                        </div>\n                    </> : selectedHost === 'deploy-contract' ? <>\n                        <Editor\n                            className=\"deploy-contract-editor\"\n                            value={deployContractCode}\n                            onValueChange={code => setDeployContractCode(code)}\n                            highlight={code => highlight(code, languages.sol)}\n                            padding={10}\n                            style={{\n                                fontFamily: '\"Fira code\", \"Fira Mono\", monospace',\n                                fontSize: 14,\n                                minHeight: 500\n                            }}\n                        />\n                    </> : <div/>\n                }\n                <div className=\"row justify-content-center my-4\">\n                    <button onClick={() => {\n                        setSelectedHost(null);\n                        setIsAddLoadBalancer(true);\n                        setIsDeploy(false);\n                    } } className=\"btn btn-light mr-4\">Cancel</button>\n                    <button onClick={() => {\n                        // setIsDeploy(false);\n                        deployContract();\n                    }} className=\"btn btn-secondary ml-4\" disabled={!selectedHost || (selectedHost === 'wallet' && (!hostWalletAddress || !isValidAddress(hostWalletAddress))) || (selectedHost === 'deployed-contract' && (!hostDeployedContract || !isValidAddress(hostDeployedContract)))}>Deploy</button>\n                </div>\n            </div>\n        )\n    }\n\n    const getFarmingContractStatus = () => {\n        return (\n            <div className=\"col-12\">\n                <div className=\"row flex-column align-items-start mb-4\">\n                    <h5 className=\"text-secondary\"><b>Farm {props.farmingContract.rewardToken.symbol}</b></h5>\n                    <b>{isAddLoadBalancer || isDeploy ? \"Advanced setup\" : \"Setups list\"}</b>\n                </div>\n                {\n                    isAddLoadBalancer ? getLockedThirdStep() : isDeploy ? getLockedFourthStep() : <div className=\"col-12\">\n                        {\n                            (props.farmingSetups.length > 0 && !isAdd) && getFarmingSetups()\n                        }\n                        {\n                            (props.farmingSetups.length === 0 || isAdd) && getEmptyFarmingSetups()\n                        }\n                    </div>\n                }\n            </div>\n        )\n    }\n\n    return (\n        <div className=\"create-component\">\n            <div className=\"row mb-4\">\n                { !props.farmingContract && getCreationComponent() }\n                { props.farmingContract && getFarmingContractStatus() }\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    const { core, session } = state;\n    const { farmingContract, farmingSetups, creationStep } = session;\n    return { dfoCore: core.dfoCore, farmingContract, farmingSetups, creationStep };\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        setFarmingContractStep: (index) => dispatch(setFarmingContractStep(index)),\n        updateFarmingContract: (contract) => dispatch(updateFarmingContract(contract)),\n        addFarmingSetup: (setup) => dispatch(addFarmingSetup(setup)), \n        removeFarmingSetup: (index) => dispatch(removeFarmingSetup(index)),\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Create);","C:\\Users\\marco\\Documents\\BUIDL\\covenants-fe\\src\\pages\\inflation\\dapp\\components\\CreateSetup.jsx",["386","387"],"import { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { useEffect } from 'react/cjs/react.development';\nimport { Input } from '../../../../components';\nimport { addInflationSetup, removeEntry, removeInflationSetup  } from '../../../../store/actions';\nimport CreateEntry from './CreateEntry';\n\nconst CreateSetup = (props) => {\n    const { onFinish, onCancel, editSetup } = props;\n    // first step\n    const [title, setTitle] = useState(\"\");\n    const [recurringExecution, setRecurringExecution] = useState(\"\");\n    // second step\n    const [setup, setSetup] = useState({});\n    // third step\n    const [hasExecutionReward, setHasExecutionReward] = useState(false);\n    const [executionRewardAmount, setExecutionRewardAmount] = useState(0);\n    // general\n    const [step, setStep] = useState(0);\n    const [loading, setLoading] = useState(false);\n    const [add, setAdd] = useState(false);\n    const [editEntry, setEditEntry] = useState(null);\n\n    // general methods\n    useEffect(() => {\n        if (editSetup) {\n            setTitle(editSetup.title);\n            setRecurringExecution(editSetup.recurringExecution);\n            setSetup(editSetup);\n            setHasExecutionReward(editSetup.hasExecutionReward);\n            setExecutionRewardAmount(editSetup.executionRewardAmount);\n        }\n    })\n\n    const getSetup = () => {\n        return {\n            ...setup,\n            hasExecutionReward,\n            executionRewardAmount,\n        }\n    }\n\n    // first step methods\n    const finishFirstStep = () => {\n        setLoading(true);\n        setSetup({ title, recurringExecution, entries: [] });\n        setStep(1);\n        setLoading(false);\n    }\n\n    // second step methods\n    const addInflationEntry = (entry) => {\n        if (editEntry) {\n            setSetup({\n                ...setup,\n                entries: setup.entries.map((e, i) => i === editEntry.index ? entry : e),\n            })\n        } else {\n            setSetup({\n                ...setup,\n                entries: setup.entries.concat(entry),\n            });\n        }\n        setAdd(false);\n        setEditEntry(null);\n    }\n\n    const removeEntry = (index) => {\n        setSetup({\n            ...setup,\n            entries: setup.entries.filter((_, i) => i !== index),\n        })\n    }\n\n    // third step methods\n\n\n    // step retrieval methods\n    const getStep = () => {\n        switch (step) {\n            case 0:\n                return getFirstStep();\n            case 1:\n                return getSecondStep();\n            case 2:\n                return getThirdStep();\n            default:\n                return getFirstStep();\n        }\n    }\n\n    const getFirstStep = () => {\n        return <div className=\"col-12\">\n            <div className=\"row mb-4\">\n                <h6 className=\"text-secondary\"><b>Setup inflation contract</b></h6>\n            </div>\n            <div className=\"row justify-content-center mb-4\">\n                <div className=\"col-12 col-md-6 flex flex-column align-items-center\">\n                    <div className=\"row mb-2 justify-content-center\">\n                        <h4><b>Create setup</b></h4>\n                    </div>\n                    <div className=\"row\">\n                        <p style={{fontSize: 12}}>Lorem, ipsum dolor sit amet consectetur adipisicing elit. Quaerat animi ipsam nemo at nobis odit temporibus autem possimus quae vel, ratione numquam modi rem accusamus, veniam neque voluptates necessitatibus enim!</p>\n                    </div>\n                    <div className=\"row justify-content-center mb-4\">\n                        <input type=\"text\" className=\"form-control inflation-name-input\" placeholder=\"Name\" value={title} onChange={(e) => setTitle(e.target.value)} />\n                    </div>\n                    <div className=\"row justify-content-center\">\n                        <h6><b>Recurring execution</b></h6>\n                        <p style={{fontSize: 12}}>Lorem, ipsum dolor sit amet consectetur adipisicing elit. Quaerat animi ipsam nemo at nobis odit temporibus autem possimus quae vel, ratione numquam modi rem accusamus, veniam neque voluptates necessitatibus enim!</p>\n                    </div>\n                    <div className=\"row w-100 mb-4\">\n                        <select value={recurringExecution} onChange={(e) => setRecurringExecution(e.target.value)} className=\"custom-select wusd-pair-select\">\n                            <option value=\"\">Select one</option>\n                            <option value=\"daily\">Daily</option>\n                            <option value=\"monthly\">Monthly</option>\n                            <option value=\"yearly\">Yearly</option>\n                        </select>\n                    </div>\n                    <div className=\"row\">\n                        { onCancel ? <button onClick={() => onCancel()} className=\"btn btn-light mr-4\">Cancel</button> : <></> }\n                        <button onClick={() => finishFirstStep()} disabled={!title || !recurringExecution} className=\"btn btn-secondary ml-4\">Create</button>\n                    </div>\n                </div>\n            </div>\n        </div>;\n    }\n\n    const getSecondStep = () => {\n        if (add || editEntry) {\n            return <CreateEntry onCancel={() => { setAdd(false); setEditEntry(null); }} onFinish={(entry) => addInflationEntry(entry)} entry={editEntry} setup={setup} />;\n        }\n        return (\n            setup.entries.length === 0 ? <CreateEntry onCancel={() => setStep(0)} onFinish={(entry) => addInflationEntry(entry)} setup={setup} /> : listSetupEntries()\n        )\n    }\n\n    const getThirdStep = () => {\n        return (<div className=\"col-12 p-0\">\n            <div className=\"row flex-column align-items-start mb-4\">\n                <h6 className=\"text-secondary\"><b>Setup inflation contract</b></h6>\n                <p><b>{ title } setup</b></p>\n            </div>\n            <div className=\"row justify-content-center\">\n                <div className=\"form-check my-4\">\n                    <input className=\"form-check-input\" type=\"checkbox\" value={hasExecutionReward} onChange={(e) => setHasExecutionReward(e.target.checked)} id=\"executionReward\" />\n                    <label className=\"form-check-label\" htmlFor=\"executionReward\">\n                        Execution reward\n                    </label>\n                </div>\n            </div>\n            <div className=\"row mb-4\">\n                <p className=\"text-center text-small\">Lorem, ipsum dolor sit amet consectetur adipisicing elit. Omnis delectus incidunt laudantium distinctio velit reprehenderit quaerat, deserunt sint fugit ex consectetur voluptas suscipit numquam. Officiis maiores quaerat quod necessitatibus perspiciatis!</p>\n            </div>\n            {\n                hasExecutionReward && <div className=\"row mb-4 justify-content-center\">\n                    <div className=\"col-md-6 col-12\">\n                        <Input min={0} max={100} value={executionRewardAmount} onChange={(e) => setExecutionRewardAmount(e.target.value)} />\n                    </div>\n                </div>\n            }\n            <div className=\"col-12 mt-4\">\n                <button onClick={() => {\n                    setStep(step - 1);\n                }} className=\"btn btn-light mr-4\">Cancel</button> <button onClick={() => onFinish(getSetup())} className=\"btn btn-secondary ml-4\">Add</button>\n            </div>\n        </div>)\n    }\n\n    const listSetupEntries = () => {\n        return <div className=\"col-12 p-0\">\n                <div className=\"row flex-column align-items-start mb-4\">\n                    <h6 className=\"text-secondary\"><b>Setup inflation contract</b></h6>\n                    <p><b>{ title } setup</b></p>\n                </div>\n            {\n                setup.entries.map((entry, i) => {\n                    return (\n                        <div key={i} className=\"row align-items-center text-left mb-md-2 mb-4\">\n                            <div className=\"col-md-9 col-12\">\n                                <b style={{fontSize: 14}}>{entry.actionType} {entry.amount !== 0 ? entry.amount : `${entry.percentage}%`} {entry.inputToken.symbol} to {entry.receivers.length} wallet</b>\n                            </div>\n                            <div className=\"col-md-3 col-12 flex\">\n                                <button className=\"btn btn-sm btn-outline-danger mr-1\" onClick={() => removeEntry(i)}><b>X</b></button> <button onClick={() => setEditEntry({ ...entry, index: i })} className=\"btn btn-sm btn-danger ml-1\"><b>EDIT</b></button>\n                            </div>\n                        </div>\n                    )\n                })\n            }\n            <div className=\"row justify-content-between mt-4\">\n                <div className=\"col-12 flex justify-content-start mb-4\">\n                    <button onClick={() => setAdd(true)} className=\"btn btn-light\">Add entry</button>\n                </div>\n                <div className=\"col-12 mt-4\">\n                    <button onClick={() => {\n                        setStep(step - 1);\n                    }} className=\"btn btn-light mr-4\">Cancel</button> <button onClick={() => setStep(step + 1)} className=\"btn btn-secondary ml-4\">Next</button>\n                </div>\n            </div>\n        </div>\n    }\n\n    const getLoading = () => {\n        return <div className=\"col-12\">\n            <div className=\"row justify-content-center\">\n                <div className=\"spinner-border text-secondary\" role=\"status\">\n                    <span className=\"visually-hidden\"></span>\n                </div>\n            </div>\n        </div>\n\n    }\n\n    return loading ? getLoading() : getStep();\n}\n\nconst mapStateToProps = (state) => {\n    const { session } = state;\n    const { inflationSetups } = session;\n    return { inflationSetups };\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        addInflationSetup: (setup) => dispatch(addInflationSetup(setup)),\n        removeInflationSetup: (index) => dispatch(removeInflationSetup(index)),\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateSetup);","C:\\Users\\marco\\Documents\\BUIDL\\covenants-fe\\src\\pages\\inflation\\dapp\\components\\CreateEntry.jsx",["388","389","390","391"],"import { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { addEntry  } from '../../../../store/actions';\nimport { Coin, Input, TokenInput } from '../../../../components/shared';\nimport { useEffect } from 'react/cjs/react.development';\n\nconst CreateEntry = (props) => {\n    const { setup, onCancel, onFinish, entry } = props;\n    const [step, setStep] = useState(0);\n    // first step\n    const [actionType, setActionType] = useState(\"\");\n    // second step\n    const [inputToken, setInputToken] = useState(null);\n    const [inputTokenMethod, setInputTokenMethod] = useState(\"\");\n    // third step\n    const [transferType, setTransferType] = useState(\"\");\n    const [percentage, setPercentage] = useState(0);\n    const [amount, setAmount] = useState(0);\n    const [currentReceiver, setCurrentReceiver] = useState(\"\");\n    const [pathTokens, setPathTokens] = useState([]);\n    const [receivers, setReceivers] = useState([]);\n    // general\n    const [loading, setLoading] = useState(false);\n\n    // check if an entry has been passed in the props\n    useEffect(() => {\n        if (entry) {\n            setActionType(entry.actionType);\n            setInputToken(entry.inputToken);\n            setInputTokenMethod(entry.inputTokenMethod)\n            setAmount(entry.amount);\n            setPercentage(entry.percentage);\n            setTransferType(entry.transferType);\n            setReceivers(entry.receivers);\n            setPathTokens(entry.pathTokens);\n        }\n    }, []);\n\n    // second step methods\n    const onSelectInputToken = async (address) => {\n        if (!address) return;\n        setLoading(true);\n        const inputTokenContract = await props.dfoCore.getContract(props.dfoCore.getContextElement('ERC20ABI'), address);\n        const symbol = await inputTokenContract.methods.symbol().call();\n        setInputToken({ symbol, address });\n        setLoading(false);\n    }\n\n    // third step methods\n    const isValidPercentage = () => {\n        const totalPercentage = receivers.map((receiver) => receiver.percentage).reduce((acc, num) => acc + num);\n        return totalPercentage == 100;\n    }\n\n    const onPercentageChange = (index, percentage) => {\n        percentage = parseInt(percentage);\n        const updatedReceivers = receivers.map((receiver, i) => {\n            if (i === index) {\n                return { ...receiver, percentage };\n            }\n            return receiver;\n        });\n        setReceivers(updatedReceivers);\n    }\n\n    const onAddPathToken = async (address) => {\n        if (!address) return;\n        setLoading(true);\n        const pathTokenContract = await props.dfoCore.getContract(props.dfoCore.getContextElement('ERC20ABI'), address);\n        const symbol = await pathTokenContract.methods.symbol().call();\n        setPathTokens(pathTokens.concat({ symbol, address, output: null }));\n        setLoading(false);\n    }\n\n    const getEntry = () => {\n        return { \n            actionType,\n            inputToken, \n            inputTokenMethod, \n            amount, \n            percentage, \n            transferType, \n            receivers, \n            pathTokens,\n            index: entry ? entry.index : -1\n        }\n    }\n\n    // step retrieval methods\n    const getStep = () => {\n        switch (step) {\n            case 0:\n                return getFirstStep();\n            case 1:\n                return getSecondStep();\n            case 2:\n                return getThirdStep();\n            case 3:\n                return getFourthStep();\n            default:\n                return <div/>\n        }\n    }\n\n    const getFirstStep = () => {\n        return <div className=\"col-12\">\n            <div className=\"row flex-column align-items-start mb-4\">\n                <h6 className=\"text-secondary\"><b>Setup inflation contract</b></h6>\n                <p><b>{setup.title} setup</b></p>\n            </div>\n            <div className=\"row justify-content-center mb-4\">\n                <h6><b>Select action type</b></h6>\n            </div>\n            <div className=\"row justify-content-center mb-4\">\n                <button onClick={() => setActionType(actionType !== 'transfer' ? 'transfer' : \"\")} className={`btn ${actionType === 'transfer' ? \"btn-secondary\" : \"btn-outline-secondary\"} mr-4`}>Transfer</button>\n                <button onClick={() => setActionType(actionType !== 'swap' ? 'swap' : \"\")} className={`btn ${actionType === 'swap' ? \"btn-secondary\" : \"btn-outline-secondary\"}`}>Swap</button>\n            </div>\n            <div className=\"row mb-4\">\n                <p style={{fontSize: 14}}>Lorem, ipsum dolor sit amet consectetur adipisicing elit. Quaerat animi ipsam nemo at nobis odit temporibus autem possimus quae vel, ratione numquam modi rem accusamus, veniam neque voluptates necessitatibus enim!</p>\n            </div>\n            <div className=\"row justify-content-center\">\n                <button onClick={() => {\n                    setActionType(\"\");\n                    onCancel();\n                }} className=\"btn btn-light mr-4\">Cancel</button>\n                <button onClick={() => setStep(1)} disabled={!actionType} className=\"btn btn-primary\">Next</button>\n            </div>\n        </div>\n    }\n\n    const getSecondStep = () => {\n        return <div className=\"col-12 flex flex-column align-items-center\">\n            <div className=\"row\">\n                <TokenInput label={\"Input token\"} placeholder={\"Input token address\"} width={60} onClick={(address) => onSelectInputToken(address)} text={\"Load\"} />\n            </div>\n            {\n                !inputToken && \n                <div className=\"row mb-4\">\n                    <p style={{fontSize: 12}}>Lorem, ipsum dolor sit amet consectetur adipisicing elit. Quaerat animi ipsam nemo at nobis odit temporibus autem possimus quae vel, ratione numquam modi rem accusamus, veniam neque voluptates necessitatibus enim!</p>\n                </div>\n            }\n            {\n                loading ? <div className=\"row justify-content-center\">\n                    <div className=\"spinner-border text-secondary\" role=\"status\">\n                        <span className=\"visually-hidden\"></span>\n                    </div>\n                </div> : <>\n                    <div className=\"row mb-4\">\n                        { inputToken && <div className=\"col-12\">\n                                <b>{inputToken.symbol}</b> <Coin address={inputToken.address} className=\"ml-2\" />\n                            </div>\n                        }\n                    </div>\n                    <div className=\"row w-50 mb-4\">\n                        <select value={inputTokenMethod} onChange={(e) => setInputTokenMethod(e.target.value)} className=\"custom-select wusd-pair-select\">\n                            <option value=\"\">Select method</option>\n                            <option value=\"mint\">By mint</option>\n                            <option value=\"reserve\">By reserve</option>\n                        </select>\n                    </div>\n                    <div className=\"row mb-4\">\n                        <p style={{fontSize: 12}}>Lorem, ipsum dolor sit amet consectetur adipisicing elit. Quaerat animi ipsam nemo at nobis odit temporibus autem possimus quae vel, ratione numquam modi rem accusamus, veniam neque voluptates necessitatibus enim!</p>\n                    </div>\n                </>\n            }\n            <div className=\"row justify-content-center\">\n                <button onClick={() => {\n                    setInputToken(null);\n                    setInputTokenMethod(\"\");\n                    setStep(step - 1);\n                }} className=\"btn btn-light mr-4\">Cancel</button>\n                <button onClick={() => setStep(2)} disabled={!inputToken || !inputTokenMethod} className=\"btn btn-secondary\">Next</button>\n            </div>\n        </div>\n    }\n\n    const getTransferThirdStep = () => {\n        return <>\n        <div className=\"row mb-4\">\n            <h6 className=\"text-secondary\"><b>Transfer</b></h6>\n        </div>\n        <div className=\"row w-50 mb-4\">\n            <select value={transferType} onChange={(e) => setTransferType(e.target.value)} className=\"custom-select wusd-pair-select\">\n                <option value=\"\">Select type</option>\n                <option value=\"percentage\">Percentage</option>\n                <option value=\"amount\">Amount</option>\n            </select>\n        </div>\n        {\n            transferType ? \n                transferType == 'percentage' ? \n                    <div className=\"row mb-4 justify-content-center align-items-center\">\n                        <input type=\"number\" min={0} max={100} value={percentage} onChange={(e) => setPercentage(e.target.value)} className=\"form-control mr-2\" style={{width: '33%'}} />% of { inputToken.symbol } <Coin address={inputToken.address} className=\"ml-2\" />\n                    </div>\n                : \n                    <div className=\"row mb-4 justify-content-center align-items-center\">\n                        <Input showCoin={true} address={inputToken.address} name={inputToken.symbol} value={amount} onChange={(e) => setAmount(e.target.value)} />\n                    </div>\n            : <div/>\n        }\n        {\n            transferType ? <>\n                <div className=\"row\">\n                    <h6><b>Receiver</b></h6>\n                </div>\n                <div className=\"row\">\n                    <div className=\"input-group mb-3\">\n                        <input type=\"text\"  value={currentReceiver} onChange={(e) => setCurrentReceiver(e.target.value)} className=\"form-control\" placeholder=\"Address\" aria-label=\"Receiver\" aria-describedby=\"button-add\" />\n                        <button onClick={() => {\n                            const exists = receivers.filter((r) => r.address.toLowerCase() === currentReceiver.toLowerCase()).length > 0;\n                            if (exists) return;\n                            setReceivers(receivers.concat({ address: currentReceiver, percentage: receivers.length === 0 ? 100 : 0}));\n                            setCurrentReceiver(\"\");\n                        }} className=\"btn btn-outline-secondary ml-2\" type=\"button\" id=\"button-add\">Add</button>\n                    </div>\n                </div>\n                <div className=\"row mb-4\">\n                    {\n                        receivers.map((receiver, index) => {\n                            return (\n                                <div className=\"col-12 mb-2\">\n                                    {\n                                        receivers.length === 1 ? <div key={receiver.address} className=\"row align-items-center\">\n                                            <b>{receiver.address}</b>\n                                            <button onClick={() => setReceivers(receivers.filter((_, i) => i !== index))} className=\"btn btn-danger btn-sm ml-2\">X</button>\n                                        </div> : <div key={receiver.address} className=\"row align-items-center\">\n                                            <div className=\"col-md-8 col-12\">\n                                                <b>{receiver.address}</b>\n                                            </div>\n                                            <div className=\"col-md-2 col-12\">\n                                                <input type=\"number\" min={0} max={100} onChange={(e) => onPercentageChange(index, e.target.value)} className=\"form-control mr-1\" value={receiver.percentage} />\n                                            </div>\n                                            <div className=\"col-md-2 col-12\">\n                                                <button onClick={() => setReceivers(receivers.filter((_, i) => i !== index))} className=\"btn btn-danger btn-sm\">X</button>\n                                            </div>    \n                                        </div>\n                                    }\n                                </div>\n                            )\n                        })\n                    }\n                </div>\n                </> : <div/>\n            }\n        </>\n    }\n\n    const getSwapThirdStep = () => {\n        return <>\n            <div className=\"row mb-4\">\n                <h6 className=\"text-secondary\"><b>Swap</b></h6>\n            </div>\n            <div className=\"row w-50 mb-4\">\n                <select value={transferType} onChange={(e) => setTransferType(e.target.value)} className=\"custom-select wusd-pair-select\">\n                    <option value=\"\">Select type</option>\n                    <option value=\"percentage\">Percentage</option>\n                    <option value=\"amount\">Amount</option>\n                </select>\n            </div>\n            {\n                transferType ? \n                    transferType == 'percentage' ? \n                        <div className=\"row mb-4 justify-content-center align-items-center\">\n                            <input type=\"number\" min={0} max={100} value={percentage} onChange={(e) => setPercentage(e.target.value)} className=\"form-control mr-2\" style={{width: '33%'}} />% of { inputToken.symbol } <Coin address={inputToken.address} className=\"ml-2\" />\n                        </div>\n                    : \n                        <div className=\"row mb-4 justify-content-center align-items-center\">\n                            <Input showCoin={true} address={inputToken.address} name={inputToken.symbol} value={amount} onChange={(e) => setAmount(e.target.value)} />\n                        </div>\n                : <div/>\n            }\n            <div className=\"row mb-4\">\n                <TokenInput label={\"Path\"} placeholder={\"LPT address\"} width={60} onClick={(address) => onAddPathToken(address)} text={\"Load\"} />\n            </div>\n            {\n                loading ? <div className=\"row justify-content-center\">\n                    <div className=\"spinner-border text-secondary\" role=\"status\">\n                        <span className=\"visually-hidden\"></span>\n                    </div>\n                </div> : <>\n                {\n                    pathTokens.length > 0 && pathTokens.map((pathToken, index) => {\n                        return (\n                            <>\n                                <div className=\"row mb-4\">\n                                    { pathToken && <div className=\"col-12\">\n                                            <b>{pathToken.address}</b> {index === pathTokens.length -1 ?  <button className=\"btn btn-sm btn-outline-danger ml-1\" onClick={() => setPathTokens(pathTokens.filter((_, i) => i !== index))}><b>Remove</b></button> : <div/>}\n                                        </div>\n                                    }\n                                </div>\n                                <div className=\"row w-50 mb-4\">\n                                    <select value={pathToken.output} onChange={(e) => setPathTokens(pathTokens.map((pt, i) => i === index ? { ...pt, output: e.target.value } : pt))} className=\"custom-select wusd-pair-select\">\n                                        <option value={null}>Output</option>\n                                        <option value=\"ETH\">ETH</option>\n                                        <option value=\"buidl\">buidl</option>\n                                    </select>\n                                </div>\n                            </>\n                        )\n                    })\n                }\n                </>\n            }\n            {\n                transferType ? <>\n                    <div className=\"row\">\n                        <h6><b>Receiver</b></h6>\n                    </div>\n                    <div className=\"row\">\n                        <div className=\"input-group mb-3\">\n                            <input type=\"text\"  value={currentReceiver} onChange={(e) => setCurrentReceiver(e.target.value)} className=\"form-control\" placeholder=\"Address\" aria-label=\"Receiver\" aria-describedby=\"button-add\" />\n                            <button onClick={() => {\n                                const exists = receivers.filter((r) => r.address.toLowerCase() === currentReceiver.toLowerCase()).length > 0;\n                                if (exists) return;\n                                setReceivers(receivers.concat({ address: currentReceiver, percentage: receivers.length === 0 ? 100 : 0}));\n                                setCurrentReceiver(\"\");\n                            }} className=\"btn btn-outline-secondary ml-2\" type=\"button\" id=\"button-add\">Add</button>\n                        </div>\n                    </div>\n                    <div className=\"row mb-4\">\n                        {\n                            receivers.map((receiver, index) => {\n                                return (\n                                    <div className=\"col-12 mb-2\">\n                                        {\n                                            receivers.length === 1 ? <div className=\"row align-items-center\">\n                                                <b>{receiver.address}</b>\n                                                <button onClick={() => setReceivers(receivers.filter((_, i) => i !== index))} className=\"btn btn-danger btn-sm ml-2\">X</button>\n                                            </div> : <div className=\"row align-items-center\">\n                                                <div className=\"col-md-8 col-12\">\n                                                    <b>{receiver.address}</b>\n                                                </div>\n                                                <div className=\"col-md-2 col-12\">\n                                                    <input type=\"number\" min={0} max={100} onChange={(e) => onPercentageChange(index, e.target.value)} className=\"form-control mr-1\" value={receiver.percentage} />\n                                                </div>\n                                                <div className=\"col-md-2 col-12\">\n                                                    <button onClick={() => setReceivers(receivers.filter((_, i) => i !== index))} className=\"btn btn-danger btn-sm\">X</button>\n                                                </div>    \n                                            </div>\n                                        }\n                                    </div>\n                                )\n                            })\n                        }\n                    </div>\n                </> : <div/>\n            }\n        </>\n    }\n\n    const getThirdStep = () => {\n        return <div className=\"col-12 flex flex-column align-items-center\">\n            { actionType === 'transfer' ? getTransferThirdStep() : getSwapThirdStep() }\n            <div className=\"row justify-content-center\">\n                <button onClick={() => setStep(step -1)} className=\"btn btn-light mr-4\">Cancel</button>\n                <button onClick={() => onFinish(getEntry())} disabled={(!amount && !percentage) || !transferType || receivers.length === 0 || !isValidPercentage()} className=\"btn btn-secondary\">Add</button>\n            </div>\n        </div>\n    }\n\n    const getFourthStep = () => {\n        return <div/>\n    }\n\n    return getStep();\n}\n\nconst mapStateToProps = (state) => {\n    const { core, session } = state;\n    const { dfoCore } = core;\n    const { inflationSetups } = session;\n    return { dfoCore, inflationSetups };\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        addEntry: (entry, setupIndex) => dispatch(addEntry(entry, setupIndex)),\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateEntry);",{"ruleId":"392","replacedBy":"393"},{"ruleId":"394","replacedBy":"395"},{"ruleId":"396","severity":1,"message":"397","line":15,"column":29,"nodeType":"398","endLine":15,"endColumn":88},{"ruleId":"399","severity":1,"message":"400","line":12,"column":12,"nodeType":"401","messageId":"402","endLine":12,"endColumn":19},{"ruleId":"396","severity":1,"message":"397","line":4,"column":12,"nodeType":"398","endLine":4,"endColumn":230},{"ruleId":"396","severity":1,"message":"397","line":36,"column":25,"nodeType":"398","endLine":36,"endColumn":82},{"ruleId":"399","severity":1,"message":"403","line":1,"column":8,"nodeType":"401","messageId":"402","endLine":1,"endColumn":17},{"ruleId":"399","severity":1,"message":"404","line":8,"column":62,"nodeType":"401","messageId":"402","endLine":8,"endColumn":70},{"ruleId":"405","severity":1,"message":"406","line":15,"column":8,"nodeType":"407","endLine":15,"endColumn":10,"suggestions":"408"},{"ruleId":"399","severity":1,"message":"403","line":2,"column":8,"nodeType":"401","messageId":"402","endLine":2,"endColumn":17},{"ruleId":"399","severity":1,"message":"409","line":6,"column":24,"nodeType":"401","messageId":"402","endLine":6,"endColumn":31},{"ruleId":"399","severity":1,"message":"410","line":6,"column":33,"nodeType":"401","messageId":"402","endLine":6,"endColumn":38},{"ruleId":"399","severity":1,"message":"411","line":3,"column":10,"nodeType":"401","messageId":"402","endLine":3,"endColumn":14},{"ruleId":"399","severity":1,"message":"412","line":8,"column":104,"nodeType":"401","messageId":"402","endLine":8,"endColumn":108},{"ruleId":"399","severity":1,"message":"413","line":8,"column":110,"nodeType":"401","messageId":"402","endLine":8,"endColumn":116},{"ruleId":"399","severity":1,"message":"414","line":27,"column":12,"nodeType":"401","messageId":"402","endLine":27,"endColumn":21},{"ruleId":"405","severity":1,"message":"415","line":36,"column":8,"nodeType":"407","endLine":36,"endColumn":10,"suggestions":"416"},{"ruleId":"399","severity":1,"message":"417","line":75,"column":23,"nodeType":"401","messageId":"402","endLine":75,"endColumn":34},{"ruleId":"418","severity":1,"message":"419","line":110,"column":29,"nodeType":"401","messageId":"420","endLine":110,"endColumn":42},{"ruleId":"421","severity":1,"message":"422","line":1,"column":1,"nodeType":"423","endLine":110,"endColumn":4},{"ruleId":"424","severity":1,"message":"425","line":48,"column":5,"nodeType":"426","messageId":"427","endLine":48,"endColumn":23},{"ruleId":"424","severity":1,"message":"428","line":50,"column":5,"nodeType":"426","messageId":"427","endLine":50,"endColumn":22},{"ruleId":"429","severity":1,"message":"430","line":292,"column":11,"nodeType":"401","messageId":"431","endLine":292,"endColumn":12},{"ruleId":"396","severity":1,"message":"397","line":11,"column":25,"nodeType":"398","endLine":11,"endColumn":74},{"ruleId":"399","severity":1,"message":"432","line":3,"column":25,"nodeType":"401","messageId":"402","endLine":3,"endColumn":34},{"ruleId":"399","severity":1,"message":"433","line":3,"column":35,"nodeType":"401","messageId":"402","endLine":3,"endColumn":51},{"ruleId":"399","severity":1,"message":"434","line":10,"column":12,"nodeType":"401","messageId":"402","endLine":10,"endColumn":19},{"ruleId":"405","severity":1,"message":"435","line":16,"column":8,"nodeType":"407","endLine":16,"endColumn":10,"suggestions":"436"},{"ruleId":"399","severity":1,"message":"437","line":7,"column":30,"nodeType":"401","messageId":"402","endLine":7,"endColumn":49},{"ruleId":"405","severity":1,"message":"438","line":11,"column":8,"nodeType":"407","endLine":11,"endColumn":10,"suggestions":"439"},{"ruleId":"399","severity":1,"message":"440","line":1,"column":10,"nodeType":"401","messageId":"402","endLine":1,"endColumn":19},{"ruleId":"399","severity":1,"message":"441","line":18,"column":12,"nodeType":"401","messageId":"402","endLine":18,"endColumn":27},{"ruleId":"405","severity":1,"message":"442","line":24,"column":8,"nodeType":"407","endLine":24,"endColumn":10,"suggestions":"443"},{"ruleId":"444","severity":1,"message":"445","line":73,"column":13,"nodeType":"446","messageId":"447","endLine":74,"endColumn":46},{"ruleId":"444","severity":1,"message":"445","line":75,"column":13,"nodeType":"446","messageId":"447","endLine":76,"endColumn":42},{"ruleId":"444","severity":1,"message":"448","line":77,"column":13,"nodeType":"446","messageId":"449","endLine":78,"endColumn":24},{"ruleId":"450","severity":1,"message":"451","line":168,"column":25,"nodeType":"452","messageId":"427","endLine":168,"endColumn":27},{"ruleId":"450","severity":1,"message":"451","line":168,"column":46,"nodeType":"452","messageId":"427","endLine":168,"endColumn":48},{"ruleId":"399","severity":1,"message":"453","line":13,"column":12,"nodeType":"401","messageId":"402","endLine":13,"endColumn":29},{"ruleId":"399","severity":1,"message":"454","line":14,"column":12,"nodeType":"401","messageId":"402","endLine":14,"endColumn":30},{"ruleId":"399","severity":1,"message":"455","line":15,"column":12,"nodeType":"401","messageId":"402","endLine":15,"endColumn":26},{"ruleId":"399","severity":1,"message":"456","line":15,"column":28,"nodeType":"401","messageId":"402","endLine":15,"endColumn":45},{"ruleId":"399","severity":1,"message":"457","line":16,"column":12,"nodeType":"401","messageId":"402","endLine":16,"endColumn":22},{"ruleId":"399","severity":1,"message":"458","line":16,"column":24,"nodeType":"401","messageId":"402","endLine":16,"endColumn":37},{"ruleId":"405","severity":1,"message":"442","line":28,"column":8,"nodeType":"407","endLine":28,"endColumn":10,"suggestions":"459"},{"ruleId":"399","severity":1,"message":"460","line":65,"column":19,"nodeType":"401","messageId":"402","endLine":65,"endColumn":27},{"ruleId":"444","severity":1,"message":"448","line":85,"column":13,"nodeType":"446","messageId":"449","endLine":87,"endColumn":24},{"ruleId":"399","severity":1,"message":"461","line":113,"column":15,"nodeType":"401","messageId":"402","endLine":113,"endColumn":34},{"ruleId":"399","severity":1,"message":"462","line":119,"column":15,"nodeType":"401","messageId":"402","endLine":119,"endColumn":21},{"ruleId":"399","severity":1,"message":"463","line":11,"column":26,"nodeType":"401","messageId":"402","endLine":11,"endColumn":41},{"ruleId":"399","severity":1,"message":"464","line":12,"column":24,"nodeType":"401","messageId":"402","endLine":12,"endColumn":37},{"ruleId":"399","severity":1,"message":"465","line":13,"column":27,"nodeType":"401","messageId":"402","endLine":13,"endColumn":43},{"ruleId":"399","severity":1,"message":"466","line":15,"column":12,"nodeType":"401","messageId":"402","endLine":15,"endColumn":27},{"ruleId":"399","severity":1,"message":"467","line":15,"column":29,"nodeType":"401","messageId":"402","endLine":15,"endColumn":47},{"ruleId":"399","severity":1,"message":"468","line":21,"column":12,"nodeType":"401","messageId":"402","endLine":21,"endColumn":24},{"ruleId":"399","severity":1,"message":"469","line":22,"column":12,"nodeType":"401","messageId":"402","endLine":22,"endColumn":25},{"ruleId":"399","severity":1,"message":"470","line":23,"column":12,"nodeType":"401","messageId":"402","endLine":23,"endColumn":25},{"ruleId":"399","severity":1,"message":"471","line":23,"column":27,"nodeType":"401","messageId":"402","endLine":23,"endColumn":43},{"ruleId":"399","severity":1,"message":"472","line":24,"column":12,"nodeType":"401","messageId":"402","endLine":24,"endColumn":39},{"ruleId":"399","severity":1,"message":"473","line":25,"column":12,"nodeType":"401","messageId":"402","endLine":25,"endColumn":39},{"ruleId":"405","severity":1,"message":"474","line":36,"column":8,"nodeType":"407","endLine":36,"endColumn":10,"suggestions":"475"},{"ruleId":"399","severity":1,"message":"468","line":8,"column":12,"nodeType":"401","messageId":"402","endLine":8,"endColumn":24},{"ruleId":"399","severity":1,"message":"471","line":10,"column":27,"nodeType":"401","messageId":"402","endLine":10,"endColumn":43},{"ruleId":"399","severity":1,"message":"476","line":13,"column":12,"nodeType":"401","messageId":"402","endLine":13,"endColumn":35},{"ruleId":"399","severity":1,"message":"477","line":18,"column":12,"nodeType":"401","messageId":"402","endLine":18,"endColumn":23},{"ruleId":"399","severity":1,"message":"478","line":20,"column":12,"nodeType":"401","messageId":"402","endLine":20,"endColumn":23},{"ruleId":"399","severity":1,"message":"479","line":23,"column":27,"nodeType":"401","messageId":"402","endLine":23,"endColumn":43},{"ruleId":"405","severity":1,"message":"480","line":27,"column":8,"nodeType":"407","endLine":27,"endColumn":10,"suggestions":"481"},{"ruleId":"444","severity":1,"message":"445","line":88,"column":13,"nodeType":"446","messageId":"447","endLine":89,"endColumn":37},{"ruleId":"444","severity":1,"message":"448","line":90,"column":13,"nodeType":"446","messageId":"449","endLine":91,"endColumn":24},{"ruleId":"399","severity":1,"message":"440","line":1,"column":10,"nodeType":"401","messageId":"402","endLine":1,"endColumn":19},{"ruleId":"399","severity":1,"message":"434","line":6,"column":12,"nodeType":"401","messageId":"402","endLine":6,"endColumn":19},{"ruleId":"399","severity":1,"message":"482","line":6,"column":21,"nodeType":"401","messageId":"402","endLine":6,"endColumn":31},{"ruleId":"399","severity":1,"message":"483","line":7,"column":21,"nodeType":"401","messageId":"402","endLine":7,"endColumn":31},{"ruleId":"405","severity":1,"message":"484","line":10,"column":8,"nodeType":"407","endLine":10,"endColumn":10,"suggestions":"485"},{"ruleId":"399","severity":1,"message":"486","line":3,"column":10,"nodeType":"401","messageId":"402","endLine":3,"endColumn":20},{"ruleId":"399","severity":1,"message":"487","line":6,"column":7,"nodeType":"401","messageId":"402","endLine":6,"endColumn":13},{"ruleId":"405","severity":1,"message":"406","line":49,"column":8,"nodeType":"407","endLine":49,"endColumn":10,"suggestions":"488"},{"ruleId":"399","severity":1,"message":"489","line":5,"column":7,"nodeType":"401","messageId":"402","endLine":5,"endColumn":16},{"ruleId":"405","severity":1,"message":"490","line":17,"column":8,"nodeType":"407","endLine":17,"endColumn":10,"suggestions":"491"},{"ruleId":"399","severity":1,"message":"489","line":5,"column":7,"nodeType":"401","messageId":"402","endLine":5,"endColumn":16},{"ruleId":"405","severity":1,"message":"492","line":12,"column":8,"nodeType":"407","endLine":12,"endColumn":10,"suggestions":"493"},{"ruleId":"399","severity":1,"message":"494","line":10,"column":7,"nodeType":"401","messageId":"402","endLine":10,"endColumn":11},{"ruleId":"399","severity":1,"message":"495","line":39,"column":12,"nodeType":"401","messageId":"402","endLine":39,"endColumn":18},{"ruleId":"405","severity":1,"message":"496","line":54,"column":8,"nodeType":"407","endLine":54,"endColumn":10,"suggestions":"497"},{"ruleId":"399","severity":1,"message":"498","line":5,"column":29,"nodeType":"401","messageId":"402","endLine":5,"endColumn":40},{"ruleId":"405","severity":1,"message":"499","line":25,"column":5,"nodeType":"401","endLine":25,"endColumn":14,"suggestions":"500"},{"ruleId":"405","severity":1,"message":"501","line":37,"column":8,"nodeType":"407","endLine":37,"endColumn":10,"suggestions":"502"},{"ruleId":"450","severity":1,"message":"503","line":52,"column":32,"nodeType":"452","messageId":"427","endLine":52,"endColumn":34},{"ruleId":"450","severity":1,"message":"503","line":191,"column":30,"nodeType":"452","messageId":"427","endLine":191,"endColumn":32},{"ruleId":"450","severity":1,"message":"503","line":262,"column":34,"nodeType":"452","messageId":"427","endLine":262,"endColumn":36},"no-native-reassign",["504"],"no-negated-in-lhs",["505"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'address' is assigned a value but never used.","Identifier","unusedVar","'PropTypes' is defined but never used.","'hostedBy' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getContractMetadata'. Either include it or remove the dependency array.","ArrayExpression",["506"],"'dfoCore' is assigned a value but never used.","'entry' is assigned a value but never used.","'Link' is defined but never used.","'farm' is assigned a value but never used.","'redeem' is assigned a value but never used.","'extension' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'blockNumber' and 'getSetupMetadata'. Either include them or remove the dependency array.",["507"],"'totalSupply' is assigned a value but never used.","no-use-before-define","'tokensAmounts' was used before it was defined.","usedBeforeDefined","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-dupe-keys","Duplicate key 'usdcTokenAddress'.","ObjectExpression","unexpected","Duplicate key 'daiTokenAddress'.","no-redeclare","'e' is already defined.","redeclared","'useParams' is defined but never used.","'FarmingComponent' is defined but never used.","'loading' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props.dfoCore'. Either include it or remove the dependency array.",["508"],"'setFarmingContracts' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getFarmingSetups'. Either include it or remove the dependency array.",["509"],"'useEffect' is defined but never used.","'lpTokenApproved' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getController'. Either include it or remove the dependency array.",["510"],"no-fallthrough","Expected a 'break' statement before 'case'.","SwitchCase","case","Expected a 'break' statement before 'default'.","default","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","'firstTokenBalance' is assigned a value but never used.","'secondTokenBalance' is assigned a value but never used.","'lpTokenBalance' is assigned a value but never used.","'setLpTokenBalance' is assigned a value but never used.","'wusdAmount' is assigned a value but never used.","'setWusdAmount' is assigned a value but never used.",["511"],"'wusdInfo' is assigned a value but never used.","'liquidityPoolAmount' is assigned a value but never used.","'ratio2' is assigned a value but never used.","'setFarmTreasury' is assigned a value but never used.","'setFarmReward' is assigned a value but never used.","'setNewFarmReward' is assigned a value but never used.","'rebalanceReward' is assigned a value but never used.","'setRebalanceReward' is assigned a value but never used.","'wusdContract' is assigned a value but never used.","'x2USDContract' is assigned a value but never used.","'x5USDContract' is assigned a value but never used.","'setx5USDContract' is assigned a value but never used.","'x2USDNoteControllerContract' is assigned a value but never used.","'x5USDNoteControllerContract' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getStats'. Either include it or remove the dependency array.",["512"],"'wusdExtensionController' is assigned a value but never used.","'x2USDSupply' is assigned a value but never used.","'x5USDSupply' is assigned a value but never used.","'setx5USDNoteInfo' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getData'. Either include it or remove the dependency array.",["513"],"'setLoading' is assigned a value but never used.","'setEntries' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getPositions'. Either include it or remove the dependency array.",["514"],"'useHistory' is defined but never used.","'setups' is assigned a value but never used.",["515"],"'contracts' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getDeployedContracts' and 'props.dfoCore'. Either include them or remove the dependency array.",["516"],"React Hook useEffect has a missing dependency: 'getContracts'. Either include it or remove the dependency array.",["517"],"'code' is assigned a value but never used.","'isEdit' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'currentBlockNumber', 'props.dfoCore', and 'props.farmingContract.rewardToken'. Either include them or remove the dependency array. If 'setSelectedRewardToken' needs the current value of 'props.farmingContract.rewardToken', you can also switch to useReducer instead of useState and read 'props.farmingContract.rewardToken' in the reducer.",["518"],"'removeEntry' is defined but never used.","React Hook useEffect contains a call to 'setTitle'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [editSetup] as a second argument to the useEffect Hook.",["519"],"React Hook useEffect has a missing dependency: 'entry'. Either include it or remove the dependency array.",["520"],"Expected '===' and instead saw '=='.","no-global-assign","no-unsafe-negation",{"desc":"521","fix":"522"},{"desc":"523","fix":"524"},{"desc":"525","fix":"526"},{"desc":"527","fix":"528"},{"desc":"529","fix":"530"},{"desc":"529","fix":"531"},{"desc":"532","fix":"533"},{"desc":"534","fix":"535"},{"desc":"536","fix":"537"},{"desc":"521","fix":"538"},{"desc":"539","fix":"540"},{"desc":"541","fix":"542"},{"desc":"543","fix":"544"},{"desc":"545","fix":"546"},{"desc":"547","fix":"548"},"Update the dependencies array to be: [getContractMetadata]",{"range":"549","text":"550"},"Update the dependencies array to be: [blockNumber, getSetupMetadata]",{"range":"551","text":"552"},"Update the dependencies array to be: [props.dfoCore]",{"range":"553","text":"554"},"Update the dependencies array to be: [getFarmingSetups]",{"range":"555","text":"556"},"Update the dependencies array to be: [getController]",{"range":"557","text":"558"},{"range":"559","text":"558"},"Update the dependencies array to be: [getStats]",{"range":"560","text":"561"},"Update the dependencies array to be: [getData]",{"range":"562","text":"563"},"Update the dependencies array to be: [getPositions]",{"range":"564","text":"565"},{"range":"566","text":"550"},"Update the dependencies array to be: [getDeployedContracts, props.dfoCore]",{"range":"567","text":"568"},"Update the dependencies array to be: [getContracts]",{"range":"569","text":"570"},"Update the dependencies array to be: [currentBlockNumber, props.dfoCore, props.farmingContract.rewardToken]",{"range":"571","text":"572"},"Add dependencies array: [editSetup]",{"range":"573","text":"574"},"Update the dependencies array to be: [entry]",{"range":"575","text":"576"},[443,445],"[getContractMetadata]",[1764,1766],"[blockNumber, getSetupMetadata]",[633,635],"[props.dfoCore]",[346,348],"[getFarmingSetups]",[1134,1136],"[getController]",[1242,1244],[1848,1850],"[getStats]",[1335,1337],"[getData]",[287,289],"[getPositions]",[1418,1420],[654,656],"[getDeployedContracts, props.dfoCore]",[427,429],"[getContracts]",[2807,2809],"[currentBlockNumber, props.dfoCore, props.farmingContract.rewardToken]",[1329,1329],", [editSetup]",[1492,1494],"[entry]"]